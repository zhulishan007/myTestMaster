 CREATE TABLE "ErrorLog" 
   (	"ErrorLogId" NUMBER NOT NULL ENABLE, 
	"ExceptionMessage" VARCHAR2(500 BYTE), 
	"ControllerName" VARCHAR2(500 BYTE), 
	"ExceptionStackTrace" VARCHAR2(500 BYTE), 
	"LogTime" DATE, 
	"CreatedBy" VARCHAR2(500 BYTE), 
	"URL" VARCHAR2(500 BYTE), 
	"UrlReferrer" VARCHAR2(500 BYTE), 
	"UserAgent" VARCHAR2(500 BYTE), 
	"UserHostAddress" VARCHAR2(500 BYTE), 
	"UserHostName" VARCHAR2(500 BYTE), 
	 CONSTRAINT "ErrorLog_PK" PRIMARY KEY ("ErrorLogId")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
     ENABLE
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;

/

  CREATE TABLE "IFELSEVALIDATION_WEB" 
   (	"ID" NUMBER(*,0), 
	"KEYWORD" VARCHAR2(200 BYTE)
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;

/
 CREATE TABLE "T_USER_MAPPING" 
   (	"USER_MAPPING_ID" NUMBER(38,0) NOT NULL ENABLE, 
	"TESTER_ID" NUMBER(38,0), 
	"TEMP_KEY" VARCHAR2(100 BYTE), 
	"IS_DELETED" NUMBER, 
	"STATUS" NUMBER, 
	 CONSTRAINT "PK_T_TESTER_INFO" PRIMARY KEY ("USER_MAPPING_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
     ENABLE, 
	 CONSTRAINT "FK_T_TESTER_INFO" FOREIGN KEY ("TESTER_ID")
	  REFERENCES "T_TESTER_INFO" ("TESTER_ID") ENABLE
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;

/

CREATE TABLE "TBLSTGWEBTESTCASE" 
   (	"TESTSUITENAME" VARCHAR2(500 BYTE), 
	"TESTCASENAME" VARCHAR2(500 BYTE), 
	"TESTCASEDESCRIPTION" VARCHAR2(500 BYTE), 
	"DATASETMODE" VARCHAR2(500 BYTE), 
	"KEYWORD" VARCHAR2(500 BYTE), 
	"OBJECT" VARCHAR2(500 BYTE), 
	"PARAMETER" VARCHAR2(500 BYTE), 
	"COMMENTS" VARCHAR2(500 BYTE), 
	"DATASETNAME" VARCHAR2(500 BYTE), 
	"DATASETVALUE" VARCHAR2(500 BYTE), 
	"ROWNUMBER" NUMBER, 
	"FEEDPROCESSDETAILID" NUMBER, 
	"TABNAME" VARCHAR2(500 BYTE), 
	"APPLICATION" VARCHAR2(500 BYTE), 
	"ID" NUMBER, 
	"CREATEDON" TIMESTAMP (6) WITH LOCAL TIME ZONE, 
	"SKIP" NUMBER(*,0), 
	"DATASETDESCRIPTION" VARCHAR2(500 BYTE), 
	"STEPSID" NUMBER(16,0), 
	"TESTSUITEID" NUMBER, 
	"TESTCASEID" NUMBER, 
	"DATA_SETTING_ID" NUMBER, 
	"DATASETID" NUMBER
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;


/

  CREATE TABLE "T_RELATION_USER_ENGINEPATH" 
   (	"RELATIONID" NUMBER NOT NULL ENABLE, 
	"USERID" NUMBER, 
	"ENGINEPATH" VARCHAR2(1000 BYTE), 
	 CONSTRAINT "T_RELATION_USER_ENGINEPATH_PK" PRIMARY KEY ("RELATIONID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
     ENABLE
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;

/


  CREATE TABLE "REL_PROJECT_USER" 
   (	"RELATION_ID" NUMBER(16,0) NOT NULL ENABLE, 
	"PROJECT_ID" NUMBER(16,0), 
	"USER_ID" NUMBER(38,0), 
	 CONSTRAINT "REL_PROJECT_USER_PK" PRIMARY KEY ("RELATION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
     ENABLE
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;

/


  CREATE TABLE "T_DBCONNECTION" 
   (	"DBCONNECTION_ID" NUMBER(16,0) NOT NULL ENABLE, 
	"DATABASENAME" VARCHAR2(500 BYTE), 
	"USERNAME" VARCHAR2(64 BYTE), 
	"PASSWORD" VARCHAR2(64 BYTE), 
	"HOST" VARCHAR2(500 BYTE), 
	"PORT" VARCHAR2(64 BYTE), 
	"SERVICENAME" VARCHAR2(64 BYTE), 
	"DECODE_METHOD" VARCHAR2(64 BYTE), 
	"SCHEMA" VARCHAR2(64 BYTE), 
	 CONSTRAINT "T_DBCONNECTION_PK" PRIMARY KEY ("DBCONNECTION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
     ENABLE
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;

/


  CREATE TABLE "T_TESTCASE_VERSION" 
   (	"TC_VERSION_ID" NUMBER(16,0) NOT NULL ENABLE, 
	"TESTCASEID" NUMBER(16,0), 
	"CREATORID" NUMBER(16,0), 
	"ISAVAILABLE" NUMBER(2,0), 
	"CREATETIME" DATE, 
	"VERSIONID" NUMBER(16,0) NOT NULL ENABLE, 
	 CONSTRAINT "T_TESTCASE_VERSION_PK" PRIMARY KEY ("TC_VERSION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
     ENABLE
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;


/
 CREATE TABLE "T_USER_ACTIVEPAGE" 
   (	"ACTIVEPAGE_ID" NUMBER(38,0) NOT NULL ENABLE, 
	"USER_ID" NUMBER(38,0) NOT NULL ENABLE, 
	"PAGE_ID" NUMBER(38,0) NOT NULL ENABLE, 
	"PAGE_NAME" VARCHAR2(255 BYTE), 
	"CREATEDBY" VARCHAR2(255 BYTE), 
	"CREATEDDATE" DATE, 
	"PROJECT_ID" NUMBER(38,0), 
	 CONSTRAINT "T_USER_ACTIVEPAGE_PK" PRIMARY KEY ("ACTIVEPAGE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
     ENABLE
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;
/

  CREATE TABLE "TBLSTGTESTCASEVALID" 
   (	"ID" NUMBER, 
	"STEPID" NUMBER, 
	"KEYWORD" VARCHAR2(200 BYTE), 
	"OBJECT" VARCHAR2(200 BYTE), 
	"TESTCASEID" NUMBER, 
	"VALIDATIONMSG" VARCHAR2(2000 BYTE), 
	"ISNOTVALID" NUMBER, 
	"FEEDPROCESSID" NUMBER, 
	"FEEDPROCESSDETAILID" NUMBER
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;

/

  CREATE TABLE "TBLSTGTESTCASEVALIDATION" 
   (	"ID" NUMBER, 
	"VALIDATIONMSG" VARCHAR2(2000 BYTE), 
	"ISVALID" NUMBER, 
	"FEEDPROCESSID" NUMBER, 
	"FEEDPROCESSDETAILID" NUMBER
   )
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;

ALTER TABLE "T_REGISTERED_APPS"  
ADD "ISBASELINE" NUMBER;

/

ALTER TABLE "T_REGISTERED_APPS"
ADD "IS64BIT" NUMBER;

/


   CREATE SEQUENCE  "SEQ_REL_USER_ENGINEPATH"  MINVALUE 1 MAXVALUE 99999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  CYCLE ;

/


   CREATE SEQUENCE  "SEQ_REL_PROJECT_USER"  MINVALUE 1 MAXVALUE 99999999999999 INCREMENT BY 1 START WITH 161 CACHE 20 NOORDER  CYCLE ;

/


   CREATE SEQUENCE  "SEQ_T_DBCONNECTION"  MINVALUE 1 MAXVALUE 99999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  CYCLE ;
/


   CREATE SEQUENCE  "SEQ_T_TESTCASE_VERSION"  MINVALUE 1 MAXVALUE 9999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  CYCLE ;
/
	

CREATE SEQUENCE  "T_ACTIVEUSERPAGE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61661 CACHE 20 NOORDER  CYCLE;
/
 CREATE TABLE "T_MASTERGRIDLIST" 
   (	"GRID_ID" NUMBER(38,0) NOT NULL ENABLE, 
	"GRIDNAME" VARCHAR2(255 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "T_MASTERGRIDLIST_PK" PRIMARY KEY ("GRID_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
     ENABLE
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
    ;
  
  /
   
CREATE SEQUENCE  "T_MASTERGRIDLIST_SEQ"  MINVALUE 1 
MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61661 CACHE 20 NOORDER  CYCLE ;

  /
   CREATE TABLE "T_GRIDLIST" 
   (	"ID" NUMBER(38,0) NOT NULL ENABLE, 
	"COLUMNNAME" VARCHAR2(255 BYTE) NOT NULL ENABLE, 
	"COLUMNSIZE" VARCHAR2(255 BYTE), 
	"GRID_ID" NUMBER(38,0) NOT NULL ENABLE, 
	"USER_ID" NUMBER(38,0) NOT NULL ENABLE, 
	"CREATEDBY" VARCHAR2(255 BYTE), 
	"CREATEDDATE" DATE, 
	 CONSTRAINT "T_GRIDLIST_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
     ENABLE
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
    ;
  
  /
  CREATE SEQUENCE  "T_GRIDLIST_SEQ"  MINVALUE 1 
MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61661 CACHE 20 NOORDER  CYCLE ;
/

alter table T_TEST_REPORT_STEPS
ADD (ADVICE VARCHAR2(1024),
    STACKINFO VARCHAR2(1024)
);

/



CREATE TABLE "TBLSTGTESTCASESAVE"
   (    "STEPSID" VARCHAR2(200 BYTE),
    "KEYWORD" VARCHAR2(1000 BYTE),
    "OBJECT" VARCHAR2(1000 BYTE),
    "PARAMETER" VARCHAR2(2000 BYTE),
    "LCOMMENTS" VARCHAR2(2000 BYTE),
    "ROWNUMBER" VARCHAR2(200 BYTE),
    "DATASETNAME" VARCHAR2(500 BYTE),
    "DATASETID" VARCHAR2(200 BYTE),
    "DATASETVALUE" VARCHAR2(2000 BYTE),
    "DATA_SETTING_ID" VARCHAR2(200 BYTE),
    "SKIP" VARCHAR2(20 BYTE),
    "FEEDPROCESSDETAILID" VARCHAR2(200 BYTE),
    "TYPE" VARCHAR2(20 BYTE),
    "WHICHTABLE" VARCHAR2(20 BYTE),
    "TESTCASEID" VARCHAR2(20 BYTE),
    "TESTSUITEID" VARCHAR2(20 BYTE)
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;
  
  /

CREATE TABLE "TBL_PROCEDURE_LOG"
   (    "LOGID" NUMBER NOT NULL ENABLE,
    "PROC_NAME" VARCHAR2(500 BYTE) NOT NULL ENABLE,
    "MSG_TYPE" VARCHAR2(250 BYTE),
    "MESSAGE" VARCHAR2(4000 BYTE),
    "LOG_TIMESTAMP" DATE,
    "PARAMETER" VARCHAR2(500 BYTE),
     CONSTRAINT "TBL_PROCEDURE_LOG_PK" PRIMARY KEY ("LOGID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
     ENABLE
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;
  
  /
  
  CREATE SEQUENCE  "PROCEDURE_LOG_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  CYCLE ;
  
  /
  
  CREATE OR REPLACE  TRIGGER "TBLLOGREPORT_TRG"
BEFORE INSERT ON TBLLOGREPORT
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT TBLLOGREPORT_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/



  CREATE TABLE "REL_TEST_REPORT_STEPS_COMMENT" 
   (	"ID" NUMBER(16,0) NOT NULL ENABLE, 
	"TEST_REPORT_STEP_ID" NUMBER(16,0) NOT NULL ENABLE, 
	"TEST_MODE" NUMBER(2,0) NOT NULL ENABLE, 
	"COMMENT" VARCHAR2(2000 BYTE), 
	 CONSTRAINT "REL_TEST_REPORT_STEPS_COMM_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
     ENABLE
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;

  
  /
  
  CREATE SEQUENCE  "T_REPORT_STEPS_COMMENT_SEQ"  MINVALUE 1
MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61661 CACHE 20 NOORDER  CYCLE ;

CREATE TABLE "TBLSTGSBRESULT"
   (    "FEEDPROCESSDETAILID" VARCHAR2(250 BYTE),
    "BASELINEID" VARCHAR2(250 BYTE),
    "COMPAREID" VARCHAR2(250 BYTE),
    "BASELINEVALUE" VARCHAR2(1000 BYTE),
    "COMPAREVALUE" VARCHAR2(1000 BYTE),
    "INPUTVALUESETTING" VARCHAR2(1000 BYTE),
    "BASELINECOMMENT" VARCHAR2(1000 BYTE),
    "COMPARECOMMENT" VARCHAR2(1000 BYTE),
    "BASELINEREPORTID" VARCHAR2(250 BYTE),
    "COMPAREREPORTID" VARCHAR2(250 BYTE)
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;
  /
  
  CREATE TABLE "DELETELOG" 
   (	"DELETEID" NUMBER NOT NULL ENABLE, 
	"TABLENAME" VARCHAR2(500 BYTE), 
	"MESSAGE" VARCHAR2(1000 BYTE), 
	"OBJECTID" VARCHAR2(500 BYTE), 
	"OBJECTNAME" VARCHAR2(200 BYTE), 
	"DELETEDDATE" DATE
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;
/

   CREATE SEQUENCE  "SEQ_DELETELOG"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 4641 CACHE 20 NOORDER  CYCLE ;
/


Insert into TBLMESSAGE (ID,MESSAGESYMBOL,MESSAGE) values (53,'ERROR_DATASET_TC','Dataset already exists in the system');
Insert into TBLMESSAGE (ID,MESSAGESYMBOL,MESSAGE) values (54,'ERR-TESTCASE-TESTSUITE','TestCase cannot be linked with multiple TestSuites');


INSERT INTO T_MASTERGRIDLIST(GRID_ID,GRIDNAME)
SELECT T_MASTERGRIDLIST_SEQ.NEXTVAL, 'Application List' FROM dual 
WHERE NOT EXISTS (select * from T_MASTERGRIDLIST where GRIDNAME = 'Application List');

INSERT INTO T_MASTERGRIDLIST(GRID_ID,GRIDNAME)
SELECT T_MASTERGRIDLIST_SEQ.NEXTVAL, 'Project List' FROM dual 
WHERE NOT EXISTS (select * from T_MASTERGRIDLIST where GRIDNAME = 'Project List');

INSERT INTO T_MASTERGRIDLIST(GRID_ID,GRIDNAME)
SELECT T_MASTERGRIDLIST_SEQ.NEXTVAL, 'Test Suite List' FROM dual 
WHERE NOT EXISTS (select * from T_MASTERGRIDLIST where GRIDNAME = 'Test Suite List');

INSERT INTO T_MASTERGRIDLIST(GRID_ID,GRIDNAME)
SELECT T_MASTERGRIDLIST_SEQ.NEXTVAL, 'Test Case List' FROM dual 
WHERE NOT EXISTS (select * from T_MASTERGRIDLIST where GRIDNAME = 'Test Case List');

INSERT INTO T_MASTERGRIDLIST(GRID_ID,GRIDNAME)
SELECT T_MASTERGRIDLIST_SEQ.NEXTVAL, 'Variable List' FROM dual 
WHERE NOT EXISTS (select * from T_MASTERGRIDLIST where GRIDNAME = 'Variable List');

INSERT INTO T_MASTERGRIDLIST(GRID_ID,GRIDNAME)
SELECT T_MASTERGRIDLIST_SEQ.NEXTVAL, 'Keyword List' FROM dual 
WHERE NOT EXISTS (select * from T_MASTERGRIDLIST where GRIDNAME = 'Keyword List');

INSERT INTO T_MASTERGRIDLIST(GRID_ID,GRIDNAME)
SELECT T_MASTERGRIDLIST_SEQ.NEXTVAL, 'Object List' FROM dual 
WHERE NOT EXISTS (select * from T_MASTERGRIDLIST where GRIDNAME = 'Object List');

INSERT INTO T_MASTERGRIDLIST(GRID_ID,GRIDNAME)
SELECT T_MASTERGRIDLIST_SEQ.NEXTVAL, 'User List' FROM dual 
WHERE NOT EXISTS (select * from T_MASTERGRIDLIST where GRIDNAME = 'User List');

INSERT INTO T_MASTERGRIDLIST(GRID_ID,GRIDNAME)
SELECT T_MASTERGRIDLIST_SEQ.NEXTVAL, 'Test Case Page' FROM dual 
WHERE NOT EXISTS (select * from T_MASTERGRIDLIST where GRIDNAME = 'Test Case Page');

INSERT INTO T_MASTERGRIDLIST(GRID_ID,GRIDNAME)
SELECT T_MASTERGRIDLIST_SEQ.NEXTVAL, 'Storyboard Page' FROM dual 
WHERE NOT EXISTS (select * from T_MASTERGRIDLIST where GRIDNAME = 'Storyboard Page');

INSERT INTO T_MASTERGRIDLIST(GRID_ID,GRIDNAME)
SELECT T_MASTERGRIDLIST_SEQ.NEXTVAL, 'Resize Left Panel' FROM dual 
WHERE NOT EXISTS (select * from T_MASTERGRIDLIST where GRIDNAME = 'Resize Left Panel');

/


Insert into TBLMESSAGE (ID,MESSAGESYMBOL,MESSAGE) values (55,'ERR_PROJECT_SB_LINKING','Storyboard is not linked with project');
Insert into TBLMESSAGE (ID,MESSAGESYMBOL,MESSAGE) values (56,'ERR_TESTCASE_SB','Test case is not linked with storyboard');
Insert into TBLMESSAGE (ID,MESSAGESYMBOL,MESSAGE) values (57,'ERR_RUNORDER','Row number of Dataset in spreadsheet is invalid');
Insert into TBLMESSAGE (ID,MESSAGESYMBOL,MESSAGE) values (58,'ERR-OBJECT_TAG','Duplicate Object tags are found in resultset');
Insert into TBLMESSAGE (ID,MESSAGESYMBOL,MESSAGE) values (59,'ERR-MODE','Duplicate test  modes are found in the sheet');

/

 CREATE TABLE "TBLSTGSTORYBOARDRESULT"
   (    "FEEDPROCESSDETAILID" VARCHAR2(250 BYTE),
    "PROJECTNAME" VARCHAR2(1000 BYTE),
    "STORYBOARDNAME" VARCHAR2(1000 BYTE),
    "RESULTMODE" VARCHAR2(1000 BYTE),
    "TESTCASENAME" VARCHAR2(1000 BYTE),
    "DATASETNAME" VARCHAR2(1000 BYTE),
    "ROWNUMBER" VARCHAR2(1000 BYTE),
    "NAME" VARCHAR2(1000 BYTE),
    "DESCRIPTITON" VARCHAR2(1000 BYTE),
    "OBJTAG" VARCHAR2(1000 BYTE),
    "OBJVALUE" VARCHAR2(1000 BYTE)
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
    ;

 /
 ALTER TABLE TBLSTGSBRESULT
  MODIFY BASELINECOMMENT varchar2(2000);
 
 
ALTER TABLE TBLSTGSBRESULT
  MODIFY COMPARECOMMENT varchar2(2000);
 
  ALTER TABLE TBLSTGSBRESULT
  MODIFY INPUTVALUESETTING varchar2(1024);
 
  ALTER TABLE TBLSTGSBRESULT
  MODIFY BASELINEVALUE varchar2(256);
 
  ALTER TABLE TBLSTGSBRESULT
  MODIFY COMPAREVALUE varchar2(256);
  
  /
  
   ALTER TABLE T_TEST_REPORT_STEPS
  MODIFY INPUT_VALUE_SETTING varchar2(1024);
  
  /
  
  CREATE TABLE "T_TEST_ROLES" 
   (	"ROLE_ID" NUMBER(38,0) NOT NULL ENABLE, 
	"ROLE_NAME" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"ISACTIVE" NUMBER(1,0), 
	"CREATOR" VARCHAR2(50 BYTE), 
	"CREATOR_DATE" DATE, 
	 CONSTRAINT "ROLES_PK" PRIMARY KEY ("ROLE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
     ENABLE
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;
  
  /
  
  
 CREATE SEQUENCE  "SEQ_T_TEST_ROLES"  MINVALUE 1 MAXVALUE 99999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  CYCLE ;
 
 /
 
 
  CREATE TABLE "T_TEST_USER_ROLE_MAPPING" 
   (	"USER_ROLE_MAP_ID" NUMBER(38,0) NOT NULL ENABLE, 
	"USER_ID" NUMBER(38,0) NOT NULL ENABLE, 
	"ROLE_ID" NUMBER(38,0) NOT NULL ENABLE, 
	"ISACTIVE" NUMBER(1,0), 
	"CREATOR" VARCHAR2(50 BYTE), 
	"CREATOR_DATE" DATE, 
	 CONSTRAINT "USERROLEMAPPING_PK" PRIMARY KEY ("USER_ROLE_MAP_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
     ENABLE
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;
  
  /
  
  CREATE TABLE "T_TEST_PRIVILEGE" 
   (	"PRIVILEGE_ID" NUMBER(38,0) NOT NULL ENABLE, 
	"PRIVILEGE_NAME" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"MODULE" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(200 BYTE), 
	"ISACTIVE" NUMBER(1,0), 
	"CREATOR" VARCHAR2(50 BYTE), 
	"CREATOR_DATE" DATE, 
	 CONSTRAINT "PRIVILEGE_PK" PRIMARY KEY ("PRIVILEGE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
     ENABLE
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;
  
  /
  
  
  CREATE TABLE "T_TEST_PRIVILEGE_ROLE_MAPPING" 
   (	"PRIVILEGE_ROLE_MAP_ID" NUMBER(38,0) NOT NULL ENABLE, 
	"PRIVILEGE_ID" NUMBER(38,0) NOT NULL ENABLE, 
	"ROLE_ID" NUMBER(38,0) NOT NULL ENABLE, 
	"ISACTIVE" NUMBER(1,0) NOT NULL ENABLE, 
	"CREATOR" VARCHAR2(50 BYTE), 
	"CREATOR_DATE" DATE, 
	 CONSTRAINT "PRIVILEGEROLEMAPPING_PK" PRIMARY KEY ("PRIVILEGE_ROLE_MAP_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
     ENABLE
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;
  
  
  /
  
  
   CREATE SEQUENCE  "REL_T_TEST_USER_ROLE_MAPPING"  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  CYCLE ;
   
   /
   
   
   CREATE SEQUENCE  "REL_PRIVILEGE_ROLE_MAPPING"  MINVALUE 1 MAXVALUE 99999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  CYCLE ;
   
   /
   
   CREATE SEQUENCE  "SEQ_T_TEST_PRIVILEGE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  CYCLE;

/
 ALTER TABLE T_TEST_REPORT_STEPS
  MODIFY Return_values varchar2(266);

/

alter table TBLSTGSTORYBOARDRESULT
add ROWSID number;

/

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Add Application', 'Application','Add Application',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Add Application');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Edit Application', 'Application','Edit Application',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Edit Application');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'View Application', 'Application','View Application',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'View Application');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Delete Application', 'Application','Delete Application',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Delete Application');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Add Project', 'Project','Add Project',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Add Project');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Edit Project', 'Project','Edit Project',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Edit Project');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'View Project', 'Project','View Project',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'View Project');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Delete Project', 'Project','Delete Project',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Delete Project');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Add TestSuite', 'TestSuite','Add TestSuite',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Add TestSuite');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Edit TestSuite', 'TestSuite','Edit TestSuite',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Edit TestSuite');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'View TestSuite', 'TestSuite','View TestSuite',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'View TestSuite');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Delete TestSuite', 'TestSuite','Delete TestSuite',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Delete TestSuite');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Rename TestSuite', 'TestSuite','Rename TestSuite',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Rename TestSuite');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Import TestSuite', 'TestSuite','Import TestSuite',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Import TestSuite');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Export TestSuite', 'TestSuite','Export TestSuite',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Export TestSuite');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Add TestCase', 'TestCase','Add TestCase',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Add TestCase');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Edit TestCase', 'TestCase','Edit TestCase',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Edit TestCase');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'View TestCase', 'TestCase','View TestCase',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'View TestCase');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Delete TestCase', 'TestCase','Delete TestCase',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Delete TestCase');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Rename TestCase', 'TestCase','Rename TestCase',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Rename TestCase');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'SaveAs TestCase', 'TestCase','SaveAs TestCase',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'SaveAs TestCase');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Export TestCase', 'TestCase','Export TestCase',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Export TestCase');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Move TestCase', 'TestCase','Move TestCase',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Move TestCase');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Add Storyboard', 'Storyboard','Add Storyboard',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Add Storyboard');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Delete Storyboard', 'Storyboard','Delete Storyboard',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Delete Storyboard');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Rename Storyboard', 'Storyboard','Rename Storyboard',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Rename Storyboard');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'SaveAs Storyboard', 'Storyboard','SaveAs Storyboard',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'SaveAs Storyboard');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Export Storyboard', 'Storyboard','Export Storyboard',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Export Storyboard');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Import Storyboard', 'Storyboard','Import Storyboard',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Import Storyboard');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Save Result Data', 'Result Data','Save Result Data',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Save Result Data');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'View Result Data', 'Result Data','View Result Data',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'View Result Data');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Export Result Data', 'Result Data','Export Result Data',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Export Result Data');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Import Result Data', 'Result Data','Import Result Data',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Import Result Data');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Execute Engine', 'Storyboard Excel Grid Editor','Execute Engine',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Execute Engine' and MODULE = 'Storyboard Excel Grid Editor');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Add Variable', 'Variable','Add Variable',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Add Variable');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Edit Variable', 'Variable','Edit Variable',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Edit Variable');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'View Variable', 'Variable','View Variable',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'View Variable');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Delete Variable', 'Variable','Delete Variable',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Delete Variable');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Import Variable', 'Variable','Import Variable',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Import Variable');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Export Variable', 'Variable','Export Variable',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Export Variable');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Add Keyword', 'Keyword','Add Keyword',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Add Keyword');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Edit Keyword', 'Keyword','Edit Keyword',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Edit Keyword');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'View Keyword', 'Keyword','View Keyword',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'View Keyword');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Delete Keyword', 'Keyword','Delete Keyword',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Delete Keyword');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Add Object', 'Object','Add Object',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Add Object');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Add Pegwindow Object', 'Object','Add Pegwindow Object',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Add Pegwindow Object');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Edit Object', 'Object','Edit Object',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Edit Object');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'View Object', 'Object','View Object',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'View Object');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Delete Object', 'Object','Delete Object',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Delete Object');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'SaveAs Object', 'Object','SaveAs Object',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'SaveAs Object');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Convert To App Object', 'Object','Convert To App Object',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Convert To App Object');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Import Object', 'Object','Import Object',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Import Object');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Export Object', 'Object','Export Object',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Export Object');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Add User', 'User List','Add User',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Add User');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Edit User', 'User List','Edit User',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Edit User');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'View User', 'User List','View User',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'View User');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Delete User', 'User List','Delete User',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Delete User');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Reset Password User', 'User List','Reset Password User',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Reset Password User');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Edit Assign Project', 'Assign Project','Edit Assign Project',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Edit Assign Project');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Rename Project', 'Project','Rename Project',1,1,SYSDATE FROM dual
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Rename Project');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Save Storyboard', 'Storyboard Excel Grid Editor','Save Storyboard',1,1,SYSDATE FROM dual
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Save Storyboard');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Save ResultList', 'Result Data','Save ResultList',1,1,SYSDATE FROM dual
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Save ResultList');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Save TestCase', 'TestCase','Save TestCase Excel Grid Editor',1,1,SYSDATE FROM dual
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Save TestCase');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Add Dataset', 'TestCase','Add Dataset',1,1,SYSDATE FROM dual
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Add Dataset');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Rename Dataset', 'TestCase','Rename Dataset',1,1,SYSDATE FROM dual
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Rename Dataset');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Delete Dataset', 'TestCase','Delete Dataset',1,1,SYSDATE FROM dual
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Delete Dataset');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Copy Dataset', 'TestCase','Copy Dataset',1,1,SYSDATE FROM dual
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Copy Dataset');


INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'View Group', 'Group','View Group',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'View Group');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Add Group', 'Group','Add Group',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Add Group');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Edit Group', 'Group','Edit Group',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Edit Group');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'View Set', 'Set','View Set',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'View Set');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Add Set', 'Set','Add Set',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Add Set');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Edit Set', 'Set','Edit Set',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Edit Set');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'View Folder', 'Folder','View Folder',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'View Folder');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Add Folder', 'Folder','Add Folder',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Add Folder');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Edit Folder', 'Folder','Edit Folder',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Edit Folder');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Import Datasettag', 'Datasettag','Import Datasettag',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Import Datasettag');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Export Datasettag', 'Datasettag','Export Datasettag',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Export Datasettag');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Export Datasettag Report', 'Datasettag','Export Datasettag Report',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Export Datasettag Report');


INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Add UserConfiguration', 'UserConfiguration','Add UserConfiguration',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Add UserConfiguration');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Edit UserConfiguration', 'UserConfiguration','Edit UserConfiguration',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Edit UserConfiguration');

INSERT INTO T_TEST_PRIVILEGE(PRIVILEGE_ID,PRIVILEGE_NAME,MODULE,DESCRIPTION,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_PRIVILEGE.NEXTVAL,'Delete UserConfiguration', 'UserConfiguration','Delete UserConfiguration',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_PRIVILEGE where PRIVILEGE_NAME = 'Delete UserConfiguration');
/

INSERT INTO T_TEST_ROLES(ROLE_ID,ROLE_NAME,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_ROLES.NEXTVAL,'Admin',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_ROLES where ROLE_NAME = 'Admin');

INSERT INTO T_TEST_ROLES(ROLE_ID,ROLE_NAME,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_ROLES.NEXTVAL,'User',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_ROLES where ROLE_NAME = 'User');

INSERT INTO T_TEST_ROLES(ROLE_ID,ROLE_NAME,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_ROLES.NEXTVAL,'Executor',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_ROLES where ROLE_NAME = 'Executor');

INSERT INTO T_TEST_ROLES(ROLE_ID,ROLE_NAME,ISACTIVE,CREATOR,CREATOR_DATE)
SELECT SEQ_T_TEST_ROLES.NEXTVAL,'ResultData Manager',1,1,SYSDATE FROM dual 
WHERE NOT EXISTS (select * from T_TEST_ROLES where ROLE_NAME = 'ResultData Manager');

/

CREATE TABLE "T_TEST_DATASETTAG"
   (    "T_TEST_DATASETTAG_ID" NUMBER(16,0) NOT NULL ENABLE,
    "DATASETID" NUMBER(16,0),
    "GROUPID" VARCHAR2(64 BYTE),
    "SETID" VARCHAR2(64 BYTE),
    "FOLDERID" VARCHAR2(64 BYTE),
    "EXPECTEDRESULTS" VARCHAR2(256 BYTE),
    "STEPDESC" VARCHAR2(256 BYTE),
    "DIARY" VARCHAR2(256 BYTE),
    "SEQUENCE" NUMBER(*,0),
     CONSTRAINT "T_TEST_DATASETTAG_PK" PRIMARY KEY ("T_TEST_DATASETTAG_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
     ENABLE
   )  
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;

/
CREATE SEQUENCE  "SEQ_T_TEST_DATASETTAG"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  CYCLE;


/
 CREATE TABLE "T_TEST_DATASETTAG" 
   (	"T_TEST_DATASETTAG_ID" NUMBER(16,0) NOT NULL ENABLE, 
	"DATASETID" NUMBER(16,0), 
	"GROUPID" NUMBER(16,0), 
	"SETID" NUMBER(16,0), 
	"FOLDERID" NUMBER(16,0), 
	"EXPECTEDRESULTS" VARCHAR2(256 BYTE), 
	"STEPDESC" VARCHAR2(256 BYTE), 
	"DIARY" VARCHAR2(256 BYTE), 
	"SEQUENCE" NUMBER(*,0), 
	 CONSTRAINT "T_TEST_DATASETTAG_PK" PRIMARY KEY ("T_TEST_DATASETTAG_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
     ENABLE
   )
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    ;

/

  CREATE TABLE "T_TEST_GROUP" 
   (	"GROUPID" NUMBER(16,0) NOT NULL ENABLE, 
	"GROUPNAME" VARCHAR2(32 BYTE), 
	"DESCRIPTION" VARCHAR2(1024 BYTE), 
	"ACTIVE" NUMBER(2,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"CREATION_USER" VARCHAR2(50 BYTE), 
	"UPDATE_CREATION_USER" VARCHAR2(20 BYTE), 
	 CONSTRAINT "T_TEST_GROUP_PK" PRIMARY KEY ("GROUPID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
     ENABLE
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
    ;

/

CREATE TABLE "T_TEST_SET" 
   (	"SETID" NUMBER(16,0) NOT NULL ENABLE, 
	"SETNAME" VARCHAR2(32 BYTE), 
	"DESCRIPTION" VARCHAR2(1024 BYTE), 
	"ACTIVE" NUMBER(2,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"CREATION_USER" VARCHAR2(50 BYTE), 
	"UPDATE_CREATION_USER" VARCHAR2(50 BYTE), 
	 CONSTRAINT "T_TEST_SET_PK" PRIMARY KEY ("SETID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
     ENABLE
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
    ;
  
  /
  
  
  CREATE TABLE "T_TEST_FOLDER" 
   (	"FOLDERID" NUMBER(16,0) NOT NULL ENABLE, 
	"FOLDERNAME" VARCHAR2(32 BYTE), 
	"DESCRIPTION" VARCHAR2(1024 BYTE), 
	"ACTIVE" NUMBER(2,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"CREATION_USER" VARCHAR2(50 BYTE), 
	"UPDATE_CREATION_USER" VARCHAR2(50 BYTE), 
	 CONSTRAINT "T_TEST_FOLDER_PK" PRIMARY KEY ("FOLDERID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
     ENABLE
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
    ;
  /
  CREATE TABLE "TBLSTGDATASETTAG"
   (    "FEEDPROCESSDETAILID" VARCHAR2(250 BYTE),
    "DATASETNAME" VARCHAR2(1000 BYTE),
    "TAGGROUP" VARCHAR2(1000 BYTE),
    "TAGSET" VARCHAR2(1000 BYTE),
    "TAGFOLDER" VARCHAR2(1000 BYTE),
    "EXPECTEDRESULTS" VARCHAR2(1000 BYTE),
    "STEPDESC" VARCHAR2(1000 BYTE),
    "DIARY" VARCHAR2(1000 BYTE),
    "SEQUENCE" VARCHAR2(1000 BYTE)
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
    ;
  /
  
CREATE SEQUENCE  "SEQ_T_TEST_GROUP"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  CYCLE;

/
CREATE SEQUENCE  "SEQ_T_TEST_SET"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  CYCLE;

/
CREATE SEQUENCE  "SEQ_T_TEST_FOLDER"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  CYCLE;

/

  CREATE TABLE "TBLSTGCOMMONDATASETTAG" 
   (	"FEEDPROCESSDETAILID" VARCHAR2(250 BYTE), 
	"NAME" VARCHAR2(1000 BYTE), 
	"DESCRIPTION" VARCHAR2(1000 BYTE), 
	"ACTIVE" NUMBER(2,0), 
	"TYPE" VARCHAR2(250 BYTE)
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
    ;

/

Insert into TBLMESSAGE (ID,MESSAGESYMBOL,MESSAGE) values (63,'ERROR_DATASETTAG_DS','Dataset not found in System');

Insert into TBLMESSAGE (ID,MESSAGESYMBOL,MESSAGE) values (64,'ERROR_DATASETTAG_DS','Dataset Name is Duplicate in sheet');

Insert into TBLMESSAGE (ID,MESSAGESYMBOL,MESSAGE) values (65,'ERROR_DATASETTAG_GROUP','Group Name is Duplicate in sheet');

Insert into TBLMESSAGE (ID,MESSAGESYMBOL,MESSAGE) values (66,'ERROR_DATASETTAG_SET','Set Name is Duplicate in sheet');

Insert into TBLMESSAGE (ID,MESSAGESYMBOL,MESSAGE) values (67,'ERROR_DATASETTAG_FOLDER','Folder Name is Duplicate in sheet');

Insert into TBLMESSAGE (ID,MESSAGESYMBOL,MESSAGE) values (60,'ERROR_DATASETTAG_GROUP','Group not found in System');

Insert into TBLMESSAGE (ID,MESSAGESYMBOL,MESSAGE) values (61,'ERROR_DATASETTAG_SET','Set not found in System');

Insert into TBLMESSAGE (ID,MESSAGESYMBOL,MESSAGE) values (62,'ERROR_DATASETTAG_FOLDER','Folder not found in System');

Insert into TBLMESSAGE (ID,MESSAGESYMBOL,MESSAGE) values (68,'ERROR_DATASETTAG_FOLDER','Folder Name and their Sequence is Duplicate on database/sheet');

Insert into TBLMESSAGE (ID,MESSAGESYMBOL,MESSAGE) values (69,'ERROR_DATASETTAG_GROUP','Group is not active in sheet');

Insert into TBLMESSAGE (ID,MESSAGESYMBOL,MESSAGE) values (70,'ERROR_DATASETTAG_SET','Set is not active in sheet');

Insert into TBLMESSAGE (ID,MESSAGESYMBOL,MESSAGE) values (71,'ERROR_DATASETTAG_FOLDER','Folder is not active in sheet');

Insert into TBLMESSAGE (ID,MESSAGESYMBOL,MESSAGE) values (72,'ERROR_DATASETTAG_SEQUENCE','sequence must be greater than 0');
    

commit;	
/

alter table TEST_DATA_SETTING modify data_value VARCHAR2(1024);
alter table T_SHARED_OBJECT_POOL modify data_value VARCHAR2(1024);	

commit;

/


  CREATE TABLE "T_USER_CONFIGURATION" 
   (	"USERCONFIGID" NUMBER(38,0) NOT NULL ENABLE, 
	"MAINKEY" VARCHAR2(128 BYTE) NOT NULL ENABLE, 
	"SUBKEY" VARCHAR2(128 BYTE), 
	"USERID" NUMBER(38,0), 
	"BLOBVALUE" BLOB, 
	"BLOBVALUETYPE" NUMBER(2,0), 
	"DESCRIPTION" VARCHAR2(256 BYTE), 
	"CREATEDBY" VARCHAR2(50 BYTE), 
	"CREATEDON" DATE, 
	"MODIFYBY" VARCHAR2(50 BYTE), 
	"MODIFYON" DATE, 
	"ISDELETE" NUMBER(2,0), 
	 CONSTRAINT "T_USER_CONFIGURATION_PK" PRIMARY KEY ("USERCONFIGID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
    ENABLE
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
   ;
  
  /
  
  CREATE SEQUENCE  "T_SEQ_USERCONFIG"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  CYCLE;
/

CREATE TABLE "TBLSTGSTORYBOARDVALID"
   (    "ROW_ID" NUMBER,
    "RUN_ORDER" NUMBER,
    "PROJECTID" NUMBER,
    "ACTIONAME" VARCHAR2(20 BYTE),
    "STEPNAME" VARCHAR2(500 BYTE),
    "TESTSUITENAME" VARCHAR2(500 BYTE),
    "TESTCASENAME" VARCHAR2(500 BYTE),
    "DATASETNAME" VARCHAR2(500 BYTE),
    "DEPENDENCY" VARCHAR2(500 BYTE),
    "FEEDPROCESSID" NUMBER,
    "FEEDPROCESSDETAILID" NUMBER,
    "STORYBOARDDETAILID" NVARCHAR2(10),
    "STORYBOARDID" VARCHAR2(20 BYTE)
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
  
  /
  
    CREATE TABLE "TBLSTGSTORYBOARDVALIDATION" 
   (    "ID" NUMBER, 
    "VALIDATIONMSG" VARCHAR2(2000 BYTE), 
    "ISVALID" NUMBER, 
    "FEEDPROCESSID" NUMBER, 
    "FEEDPROCESSDETAILID" NUMBER
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
  
  /
  
  alter table system_lookup modify display_name VARCHAR2(256);