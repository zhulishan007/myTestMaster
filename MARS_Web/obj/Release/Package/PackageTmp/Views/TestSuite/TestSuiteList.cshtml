@using MARS_Repository.ViewModel
@{
    string EditTS = "false", DeleteTS = "false";
    var PrivilegeList = Session["PrivilegeList"] as List<PrivilegeViewModel>;
    if (PrivilegeList.Count > 0)
    {
        EditTS = PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Edit TestSuite").ToString().ToLower();
        DeleteTS = PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Delete TestSuite").ToString().ToLower();
    }
}

<input type="hidden" value="@EditTS" id="hdnEditTS" />
<input type="hidden" value="@DeleteTS" id="hdnDeleteTS" />

<div class="kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor" id="kt_content">
    <div class="kt-subheader   kt-grid__item" id="kt_subheader" style="left: @ViewBag.width;">
        <div class="kt-container  kt-container--fluid ">
            <div class="kt-subheader__main">

                <span class="kt-subheader__separator kt-hidden"></span>
                <div class="kt-subheader__breadcrumbs">
                    <a href="#" class="kt-subheader__breadcrumbs-home"><i class="flaticon2-settings" style="color:#1c6081"></i></a>
                    <a href="#" class="kt-subheader__breadcrumbs-link" style="color:#1c6081">
                        Test Suite
                    </a>
                    <i class="fa fa-angle-double-right" style="color:#1c6081"></i>
                    <a href="#" class="kt-subheader__breadcrumbs-link" style="color:#1c6081">
                        &nbsp;
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title" style="color:#1582ab">
                        List Of All Test Suite
                    </h3>
                </div>
                @if (PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Add TestSuite"))
                {
                    <div class="kt-portlet__head-toolbar">
                        <div class="kt-portlet__head-wrapper">
                            <div class="kt-portlet__head-actions">
                                <button type="button" class="btn btn-brand btn-elevate btn-icon-sm" data-toggle="modal" onclick="AddSuite()" data-target="#kt_modal_4"><i class="la la-plus"></i>New Test Suite</button>
                                &nbsp;
                            </div>
                        </div>
                    </div>
                }
                </div>
            <div class="modal fade" id="AddTestSuite" tabindex="-1" role="dialog" aria-labelledby="TSexampleModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="TSexampleModalLabel">Add Test Suite</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="frmtestsuite">
                                <input type="hidden" id="hdnTestSuiteId" name="hdnTestSuiteId" />
                                <div class="form-group">
                                    <label for="recipient-name" class="form-control-label">Test Suite Name<span style="color:red">&nbsp;*</span></label>
                                    <input type="text" class="form-control" id="testsuitename" name="testsuitename" onchange="CheckNameExist()" maxlength="64">
                                    <label id="existtestsuitename" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                                        Test Suite Name already exist.
                                    </label>
                                    <label id="testsuitevalidate" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                                        TestSuite name can only consist Uppercase,Lowercase,numbers and Special characters(-,_,.,*,&,(,))
                                    </label>
                                </div>
                                <div class="form-group">
                                    <label for="message-text" class="form-control-label">Description<span style="color:red">&nbsp;*</span></label>
                                    <textarea class="form-control" id="testsuitedesc" name="testsuitedesc" maxlength="128"></textarea>
                                </div>

                                <div class="form-group" id="clssuiteApplication">
                                    <label class="form-control-label">Application<span style="color:red">&nbsp;*</span></label>
                                    <select class="form-control kt-select2" id="stDrpApplication" name="stDrpApplication" onchange="ChangeApplication()" multiple="multiple" style="border-color:#59c0e7 !important">

                                        @{var lAppsList = ViewBag.listApplications as IEnumerable<SelectListItem>;

                                            <optgroup id="appnamesuite" label="Applications">
                                                @foreach (var item in lAppsList)
                                                {
                                                    <option value="@item.Value">@item.Text</option>
                                                }
                                            </optgroup>


                                        }
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label class="form-control-label">Project </label>
                                    <select class="form-control kt-select2" id="DrpProject" name="DrpProject" multiple="multiple"></select>
                                </div>

                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" id="addedittestsuite" class="btn btn-outline-brand btn-elevate btn-pill" onclick="AddEditTestSuiteSave()">Save</button>
                            <button type="button" class="btn btn-outline-brand btn-elevate btn-pill" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="kt-portlet__body">
                <table class="table table-striped- table-bordered table-hover table-checkable " id="TestSuitetable">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Application</th>
                            <th>Project</th>
                            <th style="color: #1c6081;background-color: #e9f5ff;font-weight: bold;">Actions</th>
                        </tr>
                    </thead>


                </table>
            </div>
        </div>
    </div>
</div>





<script>
    var TestSuitetable;
    var TestSuiteTable = function () {
        $.fn.dataTable.Api.register('column().title()', function () {
            return $(this.header()).text().trim();
        });

        var initTestSuiteTable = function () {
            var lEditAppdisplay = $("#hdnEditTS").val();
            var lDeleteAppdisplay = $("#hdnDeleteTS").val();

            TestSuitetable = $('#TestSuitetable').DataTable({
                responsive: false,

                // Pagination settings
                dom: `<'row'<'col-sm-12'tr>>
                                                    <'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7 dataTables_pager'lp>>`,
                // read more: https://datatables.net/examples/basic_init/dom.html

                lengthMenu: [10, 100, 1000],
                processing: true,
                pageLength: 100,

                language: {
                    'lengthMenu': 'Display _MENU_',
                    "processing": "<img  src='../assets/media/mars.gif' style='width:80px;'/>"
                },
                "scrollY": $(window).height() - 305,
                searchDelay: 500,
                //  processing: true,
                serverSide: true,
                ajax: {
                    url: '/TestSuite/DataLoad',
                    type: 'POST',
                    data: {
                        // parameters for custom backend script demo
                        columnsDef: [
                            'TestSuiteName', 'TestSuiteDescription', 'Application', 'Project', 'Actions',],
                    },
                },

                columns: [
                    { data: 'TestSuiteName', name: "Name", width: '@ViewBag.namewidth', "targets": 0, autowidth: false },
                    { data: 'TestSuiteDescription', name: "Description", width: '@ViewBag.descriptionwidth', "targets": 2, autowidth: false },
                    { data: 'Application', name: "Application", width: '@ViewBag.applicationwidth', "targets": 3, autowidth: false },
                    { data: 'Project', name: "Project", width: '@ViewBag.projectwidth', "targets": 4,autowidth: false },
                    { data: 'Actions', responsivePriority: -1, width: '@ViewBag.actionswidth', "targets": 5, autowidth: false }
                ],
                initComplete: function () {
                    var thisTable = this;
                    var rowFilter = $('<tr class="filter"></tr>').appendTo($(TestSuitetable.table().header()));

                    TestSuitetable.columns().every(function () {
                        var column = this;
                        var input;
                        switch (column.title()) {
                            case 'Name':
                            case 'Description':
                            case 'Application':
                            case 'Project':
                                input = $(`<input type="text" class="form-control form-control-sm form-filter kt-input" data-col-index="` + column.index() + `"/>`);
                                $(input).keyup(function () {
                                    var params = {};
                                    $(rowFilter).find('.kt-input').each(function () {
                                        var i = $(this).data('col-index');
                                        if (params[i]) {
                                            params[i] += '|' + $(this).val();
                                        }
                                        else {
                                            params[i] = $(this).val();
                                        }
                                    });
                                    $.each(params, function (i, val) {
                                        // apply search params to datatable
                                        TestSuitetable.column(i).search(val ? val : '', false, false);
                                    });
                                    TestSuitetable.table().draw();
                                });
                                break;
                        }

                        if (column.title() !== 'actions') {
                            $(input).appendTo($('<th>').appendTo(rowFilter));
                        }
                    });
                },
                columnDefs: [
                    {
                        targets: -1,
                        title: 'Actions',
                        orderable: false,
                        render: function (data, type, full, meta) {

                            var lid = full.TestSuiteId;
                            var lName = full.TestSuiteName==null?"":full.TestSuiteName.replace(/'/g, "###");
                            var lDes = full.TestSuiteDescription==null?"":full.TestSuiteDescription.replace(/'/g, "###");
                            var lApplication = full.Application;
                            var lProject = full.Project;
                            var lApplicationId = full.ApplicationId;
                            var lProjectid = full.ProjectId;
                            
                            var lRenderHtml = "";
                            if (lEditAppdisplay == "true") {
                                lRenderHtml = " <a href='#' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='View' data-name='" + lName + "' data-des='" + lDes + "' data-app='" + lApplication + "' data-pro='" + lProject + "' data-appid='" + lApplicationId + "' data-Projectid='" + lProjectid + "' onclick=AddEditTestSuite(" + lid + ",$(this)) ><i class='la la-edit'></i></a> ";
                            }
                            if (lDeleteAppdisplay == "true") {
                                lRenderHtml = lRenderHtml + "<a href='#' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='Delete' onclick='TestSuiteDelete(" + lid + ")' ><i class='la la-trash la-xs'></i></a>";
                            }
                            return lRenderHtml;
                        },
                    }
                ],
            });
        };
        return {
            //main function to initiate the module
            init: function () {
                initTestSuiteTable();
            },

        };
    }();
    $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
        $($.fn.dataTable.tables(true)).DataTable()
            .columns.adjust();
    });
    jQuery(document).ready(function () {
        TestSuiteTable.init();
    });
    $.fn.dataTable.render.ellipsis = function (cutoff, wordbreak, escapeHtml) {
        var esc = function (t) {
            return t
                .replace(/&/g, '&amp;')
                .replace(/</g, '&lt;')
                .replace(/>/g, '&gt;')
                .replace(/"/g, '&quot;');
        };

        return function (d, type, row) {
            // Order, search and type get the original data
            if (type !== 'display') {
                return d;
            }

            if (typeof d !== 'number' && typeof d !== 'string') {
                return d;
            }

            d = d.toString(); // cast numbers

            if (d.length < cutoff) {
                return d;
            }

            var shortened = d.substr(0, cutoff - 1);

            // Find the last white space character in the string
            if (wordbreak) {
                shortened = shortened.replace(/\s([^\s]*)$/, '');
            }

            // Protect against uncontrolled HTML input
            if (escapeHtml) {
                shortened = esc(shortened);
            }

            return '<span class="ellipsis" title="' + esc(d) + '">' + shortened + '&#8230;</span>';
        };
    };
    $(document).ready(function () {

        $("#frmtestsuite").validate({
            rules: {
                testsuitename: {
                    required: true
                },

                testsuitedesc: {
                    required: true,
                },
                stDrpApplication: {
                    required: true
                }
            },
        });

        $('#stDrpApplication').on('changed.bs.stDrpApplication', function () {
            validator.element($(this));
        });

    });
    function AddEditTestSuite(Id, editObj) {
        $("#TSexampleModalLabel").text('');
        $("#TSexampleModalLabel").text('Edit Test Suite');
        $("#testsuitevalidate").css("display", "none");
        $("#AddTestSuite").modal("show");
        $('.modal-dialog').draggable({
            handle: ".modal-header"
        });
        $("#addedittestsuite").attr("disabled", false);
        $("#existtestsuitename").css("display", "none");
        var lTestSuiteId = Id;
        var Name = $(editObj).attr("data-name").replace(/###/g, "'");
        var Desc = $(editObj).attr("data-des").replace(/###/g, "'");
        var App = $(editObj).attr("data-app");
        var Proj = $(editObj).attr("data-pro");
        var AppId = $(editObj).attr("data-appid");
        var Projectid = $(editObj).attr("data-Projectid");
        $("#testsuitename").val(Name);
        $("#testsuitedesc").val(Desc);
        $("#hdnTestSuiteId").val(lTestSuiteId);
        $("#stDrpApplication").val(AppId.split(","));
        $("#stDrpApplication").select2();
        $("#DrpProject").html("");
        $("#DrpProject").select2();
        $.ajax({
            url: "/TestSuite/GetProjectByApplicaton",
            data: '{"ApplicationId":"' + AppId + '"}',
            type: "POST",
            async: false,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.status == 1) {
                    var lTempApplication = "";
                    var optionString = "";

                    for (i = 0; i < result.data.length; i++) {
                        if (result.data[i].ApplicationName != lTempApplication && lTempApplication != "") {
                            optionString = optionString + "</optgroup>";
                        }
                        if (result.data[i].ApplicationName != lTempApplication) {
                        }
                        var optionValue = result.data[i].ProjectId;
                        var optionText = result.data[i].ProjectName;
                        optionString = optionString + " <option value='" + optionValue + "'>" + optionText + "</option>";
                    }
                    $("#DrpProject").append($(optionString));
                    $("#DrpProject").select2();
                }
                else if (result.status == 0) {
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
            }
        });

        $("#DrpProject").val(Projectid.split(","));
        $("#DrpProject").select2();
        if (!$("#frmtestsuite").valid())
            return false;
    }
    function ChangeApplication() {

        var ApplicationIds = $("#stDrpApplication").val().toString();
        var ProjectIds = $("#DrpProject").val().toString();;
        $("#DrpProject").html("");
        $("#DrpProject").select2();
        $.ajax({
            url: "/TestSuite/GetProjectByApplicaton",
            data: '{"ApplicationId":"' + ApplicationIds + '"}',
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            async: false,
            success: function (result) {
                if (result.status == 1) {
                    var lTempApplication = "";
                    var optionString = "";
                    optionString = optionString + " <option value=0></option>";
                    for (i = 0; i < result.data.length; i++) {
                        if (result.data[i].ApplicationName != lTempApplication && lTempApplication != "") {
                            optionString = optionString + "</optgroup>";
                        }
                        if (result.data[i].ApplicationName != lTempApplication) {
                            optionString = optionString + "<optgroup label='Projects:'>";
                            lTempApplication = result.data[i].ApplicationName;
                        }
                        var optionValue = result.data[i].ProjectId;
                        var optionText = result.data[i].ProjectName;
                        optionString = optionString + " <option value='" + optionValue + "'>" + optionText + "</option>";
                    }

                    $("#DrpProject").append($(optionString));
                    $("#DrpProject").select2();

                    $("#DrpProject").val(ProjectIds.split(","));
                    $("#DrpProject").select2();
                }
                else if (result.status == 0) {
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
    function AddSuite() {

        $("#addedittestsuite").attr("disabled", false);
        $("#TSexampleModalLabel").text('');
        $("#TSexampleModalLabel").text('Add Test Suite');
        $("#AddTestSuite").modal("show");
        $('.modal-dialog').draggable({
            handle: ".modal-header"
        });
        $("#existtestsuitename").css("display", "none");
        $("#hdnTestSuiteId").val("");
        $("#testsuitename").val("");
        $("#testsuitedesc").val("");
        $("#hdnTestCaseId").val("");
        $("#stDrpApplication").val("");
        $("#stDrpApplication").select2();
        $("#DrpProject").html("");
        $("#DrpProject").select2();
        $("#testsuitevalidate").css("display", "none");
        var validator = $("#frmtestsuite").validate();
        validator.resetForm();
    }
    $("#btnadd").click(function () {

        var suiteobj = {};
        suiteobj.TestSuiteId = $("#testsuiteid").val();
        suiteobj.TestSuiteName = $("#testsuitename").val();
        suiteobj.TestSuiteDescription = $("#testsuitedesc").val();
        // var applist = new Object();
        //  applist.Entrys = new Array("#kt_select2_3_model");
        suiteobj.Application = $("#kt_select2_3_model").val();
        suiteobj.Application = applist.Entrys;
        // suiteobj.Project = $("").val();

        $.ajax({
            url: "/TestSuite/AddEditTestSuite",
            type: "POST",
            data: JSON.stringify(suiteobj),
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result) {
                    window.location.href = "/Accounts/ListOfUsers";
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    });
    function TestSuiteDelete(id) {

        swal.fire({
            title: 'Please confirm.',
            text: "This action can not be undone.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!'
        }).then(function (result) {
            if (result.value == true) {

                $.ajax({
                    url: "/TestSuite/DeleteTestSuite",
                    data: JSON.stringify({ "TestsuiteId": id }),
                    type: "POST",
                    async: false,
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result.status == 1) {
                            if (result.data == true) {
                            TestSuitetable.table().draw();
                            swal.fire(
                                'Deleted!',
                                result.message,
                                'success'

                            )

                        } else {
                                var resultstring = "";
                                for (i = 0; i < result.data.length; i++) {

                                    resultstring = resultstring + result.data[i] + " , ";
                            }
                            swal.fire(
                                '',
                                'Following Storyboards contains this testsuite. So please remove this testsuite from storyboards. ' + "<br>" + resultstring,
                                'error'

                            )
                        }
                        } else if (result.status == 0) {
                            swal.fire({
                                "title": "",
                                "text": result.message,
                                "icon": "error",
                                "onClose": function (e) {
                                    console.log('on close event fired!');
                                }
                            });
                        }
                    },
                    error: function (x, y, z) {
                        swal.fire(
                            'Error while deleting',
                            'error'

                        )

                    }
                });
            }

        });
    }
    function AddEditTestSuiteSave() {
        if (!$("#frmtestsuite").valid()) {
            debugger
            var validationobj = $("#clssuiteApplication").find("#stDrpApplication-error");
            if (validationobj.length > 0) {
                $("#clssuiteApplication").find("#stDrpApplication-error").remove();
                validationHTML = "<div id='stDrpApplication-error' class='error invalid-feedback ' >This field is required.</div>";
                $("#clssuiteApplication").append(validationHTML);
            }

            return false;
        }
        $("#addedittestsuite").attr("disabled", true);

        var lId = $("#hdnTestSuiteId").val();
        if (lId == null && lId == "")
            lId
                = 0;
        var regex = /^[a-zA-Z0-9-._(&)*  ]*$/;

        var TestSuiteModel = {};
        var testsuitename = $("#testsuitename").val();
        TestSuiteModel.TestSuiteId = lId,
            TestSuiteModel.TestSuiteName = $("#testsuitename").val(),
            TestSuiteModel.TestSuiteDescription = $("#testsuitedesc").val(),
            TestSuiteModel.ApplicationId = $("#stDrpApplication").val().toString(),
            TestSuiteModel.ProjectId = $("#DrpProject").val().toString();
        if (!regex.test(TestSuiteModel.TestSuiteName)) {
            $("#testsuitename").val("");
            $("#testsuitevalidate").css("display", "block");
            $("#addedittestsuite").attr("disabled", false);
            return false;
        }
        // var lModel = JSON.stringify(TestCaseModel);
        $.ajax({
            url: "/TestSuite/AddEditTestSuite",
            data: JSON.stringify(TestSuiteModel),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.status == 1) {
                if (result.data.length > 0) {

                    var resultstring = "";
                    for (i = 0; i < result.data.length; i++) {

                        resultstring = resultstring + result.data[i] + " , ";
                    }
                    swal.fire(
                        '',
                        'Following Storyboards contains this Test Suite. In order to remove this Test Suite please remove it from all storyboards. ' + "<br>" + resultstring,
                        'error'
                    )
                }
                else {
                    $("#AddTestSuite").modal("hide");
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "success",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                    TestSuitetable.table().draw();
                    $.ajax({
                        url: "/Login/LeftPanel",
                        // data: { 'lLoginName': pLoginName, 'lLoginId': TESTER_ID },

                        type: "POST",
                        contentType: "application/json;charset=utf-8",
                        dataType: "HTML",
                        success: function (result) {
                            $("#leftProjectList").html("");
                            $("#leftProjectList").html(result);
                        }
                    });
                    }
                }
                else if (result.status == 0) {
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }

                $("#addedittestsuite").attr("disabled", false);
                // window.location.href = "/Home/Index";
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });

    }
    function CheckNameExist() {

        var TestSuiteName = $("#testsuitename").val();
        var TestSuiteId = $("#hdnTestSuiteId").val();

        $.ajax({
            url: "/TestSuite/CheckDuplicateTestSuiteNameExist",
            data: '{"TestSuiteName":"' + TestSuiteName + '","TestSuiteId":"' + TestSuiteId + '"}',
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.status == 1 && result.data) {
                    $("#testsuitename").val("");
                    $("#existtestsuitename").css("display", "block");
                } else if (result.status == 0) {
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
            },
        });
    }

    $("#testsuitename").on('keyup', function () {
        $("#existtestsuitename").css("display", "none");
    });
    $("#testsuitename").on('keyup', function () {
        $("#testsuitevalidate").css("display", "none");
    });
</script>



