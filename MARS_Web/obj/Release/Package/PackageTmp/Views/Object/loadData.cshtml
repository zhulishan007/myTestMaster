@using MARS_Repository.ViewModel
@{
    string EditObj = "false", DeleteObj = "false",SaveAsObj = "false";
    var PrivilegeList = Session["PrivilegeList"] as List<PrivilegeViewModel>;
    if (PrivilegeList.Count > 0)
    {
        EditObj = PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Edit Object").ToString().ToLower();
        DeleteObj = PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Delete Object").ToString().ToLower();
        SaveAsObj = PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("SaveAs Object").ToString().ToLower();
    }
}

<input type="hidden" value="@EditObj" id="hdnEditObj" />
<input type="hidden" value="@DeleteObj" id="hdnDeleteObj" />
<input type="hidden" value="@SaveAsObj" id="hdnSaveAsObj" />
<div class="kt-portlet__body">
    <input type="hidden" id="objectidsave" />
    <table class="table table-striped- table-bordered table-hover table-checkable " id="Objecttable">
        <thead>
            <tr>
                <th>Object Name</th>
                <th>Internal Access</th>
                <th>Type</th>
                <th>Parent Pegwindow</th>
                <th style="color: #1c6081;background-color: #e9f5ff;font-weight: bold;">Actions</th>
                <th style="color: #1c6081;background-color: #e9f5ff;font-weight: bold;">
                    <label class="kt-checkbox kt-checkbox--brand">
                        <input type="checkbox" id="selectall">Select All<span></span>
                    </label>
                </th>
            </tr>
        </thead>


    </table>
</div>
<script>
    var Otimeout = null;     
    var flagselectall = false;
    var appid = $("#appid").val();
    var lfirstColumnWidth = 0;
    var lsecondColumnWidth = 0;
    var objectTable = function () {
         lfirstColumnWidth = 0;
         lsecondColumnWidth = 0;
        $.fn.dataTable.Api.register('column().title()', function () {
            return $(this.header()).text().trim();
        });

        var initobjectTable = function () {

            var lEditObjdisplay = $("#hdnEditObj").val();
            var lDeleteObjdisplay = $("#hdnDeleteObj").val();
            var lSaveAsObjdisplay = $("#hdnSaveAsObj").val();

            table = $('#Objecttable').DataTable({

                responsive: false,

                // Pagination settings
                dom: `<'row'<'col-sm-12'tr>>
                                        <'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7 dataTables_pager'lp>>`,
                // read more: https://datatables.net/examples/basic_init/dom.html

                lengthMenu: [10, 100, 1000],
                processing: true,
                pageLength: 100,
                "sScrollX": "100%",
                //"sScrollXInner": "400%",
                "bScrollCollapse": true,
                language: {
                    'lengthMenu': 'Display _MENU_',
                    "processing": "<img  src='../assets/media/mars.gif' style='width:80px;'/>",

                },
                //"scrollY": $(window).height() - 204.35,
                "scrollY": $(window).height() - 395,
                //"select": {
                //    'style': 'multi'
                //},
              searchDelay: 500,
              scrollCollapse: true,
                //  processing: true,
                serverSide: true,
                ajax: {
                    url: '/Object/DatLoad',
                    type: 'POST',
                    data:
                    {
                        appId: appid
                    },

                },
                columns: [
                    { data: 'ObjectName', name: "Object Name", width: '@ViewBag.namewidth', "targets": 0, autowidth: false },
                    { data: 'Quickaccess', name: "Internal Access", width: '@ViewBag.internalAccesswidth', "targets": 1, autowidth: false },
                    { data: 'ObjectType', name: "Type", width: '@ViewBag.typewidth', "targets": 2, autowidth: false },
                    { data: 'ObjectParent', name: "Parent Pegwindow", width: '@ViewBag.pegwindowwidth', "targets": 3, autowidth: false },
                    { data: 'Actions', responsivePriority: -1, width: '@ViewBag.actionswidth', "targets": 4, autowidth: false },
                    {
                        data: 'Select All', responsivePriority: -1, autowidth: false, width: '@ViewBag.selectwidth' ,
                        render: function (data, type, row, meta) {

                            var oid = row.ObjectId;
                            var hiddenid = $("#hiddenobjectid").val();
                            var hiddenidarray = hiddenid.split(',');
                            var flag = false;
                            var lflag = false;
                            var flg = false;
                            $.each(hiddenidarray, function (index, value) {
                                if (value == oid) {
                                    flag = true;
                                }
                            });
                            if ($("#selectall").is(":checked")) {
                                lflag = true;
                            }

                            var objname = row.ObjectName;
                            var objecttypeid = row.ObjectType;
                            var app = row.applicationid;
                            var quickaccessid = row.Quickaccess;
                            var enumtypeid = row.EnumType;
                            var parent = row.ObjectParent;
                            var autocheckerrorid = row.autocheckerror;
                            var descriptionid = row.description;
                            if (flag || lflag) {

                                return "<label class='kt-checkbox kt-checkbox--brand'><input type='checkbox' id='checkedid' checked name='checkedid' class='theClass' data-objid='" + oid + "' data-objname='" + objname + "' data-parentobj='" + parent + "' data-quickaccessid='" + quickaccessid + "' data-descriptionid='" + descriptionid + "' data-objecttypeid='" + objecttypeid + "' data-autocheckerrorid='" + autocheckerrorid + "' onchange='checkConvertingObjectExists($(this))'/>&nbsp;<span></span></label>";
                            }

                            else {
                                return "<label class='kt-checkbox kt-checkbox--brand'><input type='checkbox' id='checkedid' name='checkedid' class='theClass' data-objid='" + oid + "' data-objname='" + objname + "' data-parentobj='" + parent + "' data-quickaccessid='" + quickaccessid + "' data-descriptionid='" + descriptionid + "' data-autocheckerrorid='" + autocheckerrorid + "' data-objecttypeid='" + objecttypeid + "' onchange='checkConvertingObjectExists($(this))'/>&nbsp;<span></span></label>";
                            }
                        }
                    }
                ],

                initComplete: function () {
                    var thisTable = this;
                    var rowFilter = $('<tr class="filter"></tr>').appendTo($(table.table().header()));

                    table.columns().every(function () {
                        lfirstColumnWidth = 0;
                        lsecondColumnWidth = 0;
                        var column = this;
                        var input;
                        switch (column.title()) {
                            case 'Object Name':
                            case 'Internal Access':
                            case 'Type':
                            case 'Parent Pegwindow':

                                input = $(`<input type="text" class="form-control form-control-sm form-filter kt-input" data-col-index="` + column.index() + `"/>`);
                                $(input).keyup(function () {
                                    clearTimeout(Otimeout);

                                    Otimeout = setTimeout(function () {
                                    var params = {};
                                    $(rowFilter).find('.kt-input').each(function () {
                                        var i = $(this).data('col-index');
                                        if (params[i]) {
                                            params[i] += '|' + $(this).val();
                                        }
                                        else {
                                            params[i] = $(this).val();
                                        }
                                    });
                                    $.each(params, function (i, val) {
                                        table.column(i).search(val ? val : '', false, false);
                                    });
                                        table.table().draw();
                                    }, 500);
                                });
                                $(input).keydown(function () {  clearTimeout(Otimeout);});
                                break;
                        }

                        if (column.title() !== 'Actions' && column.title() !== 'Select All') {
                            $(input).appendTo($('<th>').appendTo(rowFilter));
                        }
                    });
                },


                columnDefs: [
                    { targets: [1],  width: '35px' },
                    {
                        targets: 4,
                        title: 'Actions',
                        orderable: false,
                        render: function (data, type, full, meta) {
                            var lid = full.ObjectId;
                            var lName = full.ObjectName;

                            var objecttype = full.ObjectType;

                            var lApplication = full.applicationid;
                            var quickaccess = full.Quickaccess;
                            var parent = full.ObjectParent;
                            var autocheckerrorid = full.autocheckerror;
                            var description = full.description;
                           
                            var lRenderHtml = "";
                            if (lEditObjdisplay == "true") {
                                lRenderHtml = " <a href='#' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='Edit'  data-name='" + lName + "' data-objecttype='" + objecttype + "'  data-app='" + lApplication + "' data-quickaccess='" + quickaccess + "'  data-parent='" + parent + "' data-description='" + description + "' data-autocheckerrorid='" + autocheckerrorid + "' onclick=EditPopupShow(" + lid + ",$(this))><i class='la la-edit' ></i></a> ";
                            }
                            if (lDeleteObjdisplay == "true") {
                                lRenderHtml = lRenderHtml + "<a href='#' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='Delete'  data-parent='" + parent + "'  data-app='" + lApplication + "' onclick='deleteObject(" + lid + ",$(this))' ><i class='la la-trash la-xs'></i></a>";
                            }
                            if (lSaveAsObjdisplay == "true") {
                                lRenderHtml = lRenderHtml + "<a href='#' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='Save As'  data-saveasname='" + lName + "' data-saveasobjecttype='" + objecttype + "'  data-saveasapp='" + lApplication + "' data-saveasquickaccess='" + quickaccess + "'  data-saveasparent='" + parent + "' data-saveasdescription='" + description + "' data-saveasautocheckerrorid='" + autocheckerrorid + "'  onclick='saveAsPopupShow(" + lid + ",$(this))' ><i class='la la-save la-xs'></i></a>";
                            }
                            return lRenderHtml;
                        },
                    },
                    {
                        "targets": 5,
                        'searchable': false,
                        'orderable': false,
                        'checkboxes': {
                            'selectRow': true
                        },
                    },

                ],
            });
        };
        return {
            //main function to initiate the module
            init: function () {
                initobjectTable();
            },

        };
    }();
    $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
        $($.fn.dataTable.tables(true)).DataTable()
            .columns.adjust();
    });
    jQuery(document).ready(function () {
        objectTable.init();
    });

    $.fn.dataTable.render.ellipsis = function (cutoff, wordbreak, escapeHtml) {
        var esc = function (t) {
            return t
                .replace(/&/g, '&amp;')
                .replace(/</g, '&lt;')
                .replace(/>/g, '&gt;')
                .replace(/"/g, '&quot;');
        };

        return function (d, type, row,meta) {
            // Order, search and type get the original data
            if (type !== 'display') {
                return d;
            }

            if (typeof d !== 'number' && typeof d !== 'string') {
                return d;
            }

            d = d.toString(); // cast numbers

            var shortened;
            if (d.length < cutoff) {
                    return d;
                }

            shortened = d.substr(0, cutoff - 1);

            if (wordbreak) {
                shortened = shortened.replace(/\s([^\s]*)$/, '');
            }

            // Protect against uncontrolled HTML input
            if (escapeHtml) {
                shortened = esc(shortened);
            }

            return '<span class="ellipsis" title="' + esc(d) + '">' + shortened + '&#8230;</span>';
        };
    };

    var objectids=[];
    $('#selectall').click(function (e) {
        objectids = [];
        $("#hiddenobjectid").val("");
        if ($("#selectall").is(":checked")) {
            flagselectall = true;
            $('td input:checkbox').not(this).prop('checked', this.checked);
            var id = $("#appid").val();
            $.ajax({
                url: "/Object/GetObjectIdByApp",
                data: JSON.stringify({ "appid": id }),
                type: "POST",
                async: false,
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.status == 1) {
                        if (result.data.length > 0) {
                            for (i = 0; i < result.data.length; i++) {

                                objectids.push(result.data[i]);
                            }
                            var objectsplit = objectids.join(',');
                        }
                        $("#hiddenobjectid").val(objectsplit);
                    }
                    else if (result.status == 0) {
                        swal.fire({
                            "title": "",
                            "text": result.message,
                            "icon": "error",
                            "onClose": function (e) {
                                console.log('on close event fired!');
                            }
                        });
                    }
                }
            });
        }
        else {
            $("#hiddenobjectid").val("");
            flagselectall = false;
            $('td input:checkbox').not(this).prop('checked', false);
        }

    });
</script>
