
@using MARS_Repository.ViewModel
@{
    /**/

    /**/

    string AddAxis = "false";
    var PrivilegeList = Session["PrivilegeList"] as List<PrivilegeViewModel>;
    if (PrivilegeList.Count > 0)
    {
        AddAxis = PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Add Axis").ToString().ToLower();
    }
}
<style>
    .table-width {
        width: 100% !important;
        table-layout: fixed;
        padding: 10px;
    }
</style>

<input type="hidden" value="@AddAxis" id="hdnEditConn" />

<div class="kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor" id="kt_content">

    <div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid">
        <div class="kt-portlet kt-portlet--mobile">

            <div class="modal fade" id="SetAxisModal" tabindex="-1" role="dialog" aria-labelledby="axisModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="axisModalLabel">Set Axis</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="frmaxis">
                                <input type="hidden" id="hdnAxisId" name="hdnAxisId" />
                                <input type="hidden" id="hdnQueryId" name="hdnQueryId" />
                                <input type="hidden" id="hdnChartType" name="hdnChartType" />
                                <div class="form-group">
                                    <label class="form-control-label">X-Axis<span style="color:red">&nbsp;*</span></label>
                                    <select class="form-control kt-select2" id="drpXAxis" name="drpXAxis"></select>
                                </div>
                                <div class="form-group">
                                    <label class="form-control-label" id="lblAxisY">Y-Axis<span style="color:red">&nbsp;*</span></label>
                                    <select class="form-control kt-select2" id="drpYAxis" name="drpYAxis"></select>
                                </div>
                                <div class="form-group">
                                    <label class="form-control-label" id="lblAxisZ">Z-Axis<span style="color:red">&nbsp;*</span></label>
                                    <select class="form-control kt-select2" id="drpZAxis" name="drpZAxis"></select>
                                </div>

                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" id="btnSaveAxis" class="btn btn-outline-brand btn-elevate btn-pill" onclick="SaveAxisData()">Save</button>
                            <button type="button" class="btn btn-outline-brand btn-elevate btn-pill" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        
            <div class="kt-portlet__body">
                @if (PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Display Chart"))
                {
                <input type="hidden" id="hdnReloadData" />
                <form id="frmchart">
                    @*<table class="table-width">
                        <tr></tr>
                        <tr>
                            <td>
                                <select class="form-control kt-select2" id="drpConnection" onchange="LoadQueryNames()">
                                    @{var lDbList = ViewBag.databaseNameList as IEnumerable<DatabaseConnNameViewModel>;
                                        <optgroup label="Database Names">
                                            <option value="" style="display:none"></option>

                                            @foreach (var item in lDbList)
                                            {
                                                <option value="@item.ConnectionId">@item.ConnectionName</option>
                                            }
                                        </optgroup>
                                    }
                                </select>
                            </td>
                            <td>
                                <select class="form-control " id="drpQuery"></select>
                            </td>
                            <td>
                                <select class="form-control kt-select2 " id="drpChartType">
                                    <option value="" style="display:none"></option>
                                    <option value="1">Pie Chart</option>
                                    <option value="2">Bar Chart</option>
                                    <option value="3">3D Chart</option>
                                </select>
                            </td>
                            <td>

                                <button type="button" class="btn btn-brand btn-elevate btn-icon-sm"  id="btnRun" onclick="DisplayChart()"><i class="la la-play"></i>Run</button>
                                <button type="button" class="btn btn-brand btn-elevate btn-icon-sm" id="btnReload" onclick="ReloadChart()"><i class="la la-refresh"></i>Reload</button>
                                @if (PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Add Axis"))
                                {
                                    <button type="button" class="btn btn-brand btn-elevate btn-icon-sm" id="btnSetData" onclick="LoadAxisData()"><i class="la la-cog"></i></button>
                                }
                            </td>
                        </tr>
                    </table>*@
                    <div class="row">
                        <div class="col-md-3 col-sm-12">
                            <select class="form-control kt-select2" id="drpConnection" onchange="LoadQueryNames()">
                                @{var lDbList = ViewBag.databaseNameList as IEnumerable<DatabaseConnNameViewModel>;
                                    <optgroup label="Database Names">
                                        <option value="" style="display:none"></option>

                                        @foreach (var item in lDbList)
                                        {
                                            <option value="@item.ConnectionId">@item.ConnectionName</option>
                                        }
                                    </optgroup>
                                }
                            </select>
                        </div>
                        <div class="col-md-3 col-sm-12">
                            <select class="form-control " id="drpQuery">
                                @* start : query list on page load*@
                                @{var lQueryList = ViewBag.queryList as IEnumerable<QueryNameViewModel>;
                                    <optgroup label="Database Names">
                                        <option value="" style="display:none"></option>

                                        @foreach (var item in lQueryList)
                                        {
                                            <option value="@item.QueryId">@item.QueryName</option>
                                        }
                                    </optgroup>
                                }
                                @* end : query list on page load*@
                            </select>
                        </div>
                        <div class="col-md-3 col-sm-12">
                            <select class="form-control kt-select2 " id="drpChartType">
                                <option value="" style="display:none"></option>
                                <option value="1">Pie Chart</option>
                                <option value="2">Bar Chart</option>
                                <option value="3">3D Chart</option>
                                <option value="4">Basic Line Chart</option>
                                <option value="5">Spline Line Chart</option>
                                <option value="6">Spline Area Chart</option>
                                <option value="7">Basic Column Chart</option>
                                <option value="8">Stacked Bar Chart</option>
                                <option value="9">Stacked Percent Chart</option>
                                <option value="10">Percentage Area Chart</option>
                            </select>
                        </div>
                        <div class="col-md-3 col-sm-12">
                            <button type="button" class="btn btn-brand btn-elevate btn-icon-sm" id="btnRun" onclick="DisplayChart()"><i class="la la-play"></i>Run</button>
                            <button type="button" class="btn btn-brand btn-elevate btn-icon-sm" id="btnReload" onclick="ReloadChart()"><i class="la la-refresh"></i>Reload</button>
                            @if(PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Add Axis"))
                            {
                                <button type="button" class="btn btn-brand btn-elevate btn-icon-sm" id="btnSetData" onclick="LoadAxisData()"><i class="la la-cog"></i></button>
                            }
                        </div>
                        </div>
                    </form>
                    <div id="chartholder" style="align-self: center">

                    </div>
                 }
                </div>
        </div>
    </div>
    
</div>


<script>

    jQuery(document).ready(function () {
        $("#drpConnection").val("");
        $("#drpConnection").select2(
            {
                placeholder: "Select Database Connection",
                allowClear: true
            });

        $("#drpQuery").val("");
        $("#drpQuery").select2(
            {
                placeholder: "Select Query",
                allowClear: true
            });

        $("#drpChartType").val("");
        $("#drpChartType").select2(
            {
                placeholder: "Select Chart Type",
                allowClear: true
            });
    });
    $(document).ready(function () {

        $("#frmchart").validate({
            rules: {
                drpConnection: {
                    required: true
                },
                drpQuery: {
                    required: true
                },
                drpChartType: {
                    required: true
                }
            },
        });


        $("#frmaxis").validate({
            rules: {
                drpXAxis: {
                    required: true
                },
                drpYAxis: {
                    required: true
                    
                },
                drpZAxis: {
                    required: true
                }
            },
        });
    });


    function LoadQueryNames() {
        var connId = $("#drpConnection").val();
        $("#drpQuery").html("");
        //$("#drpQuery").select2();
        $.ajax({
            url: "/Query/LoadQueryNameByConnection",
            data: '{"ConnId":"' + connId + '"}',
            type: "POST",
            async: false,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                $("#drpQuery").select2("val", "");
                if (result.status == 1) {
                    if (result.data != null) {
                        var optionString = "<optgroup>";
                        optionString = optionString + "<option value=\"\" style=\"display:none\"></option>";
                        for (i = 0; i < result.data.length; i++) {
                            var optionValue = result.data[i].QueryId;
                            var optionText = result.data[i].QueryName;
                            optionString = optionString + " <option value='" + optionValue + "'>" + optionText + "</option>";
                        }
                        optionString = optionString + "</optgroup>";

                        $("#drpQuery").append($(optionString));
                        //$("#drpQuery").select2();
                    }
                }
                else if (result.status == 0) {
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    function DisplayChart() {
        
        if (!$("#frmchart").valid()) {
            return false;
        };
       // startloader();
        var connId = $("#drpConnection").val();
        var queryId = $("#drpQuery").val();
        var chartType = $("#drpChartType").val();
        $.ajax({
            url: "/Chart/DisplayChart",
            data: '{"ConnId":"' + connId + '", "QueryId":"' + queryId + '", "ChartType":"' + chartType + '"}',
            type: "POST",
            async: false,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                
                $("#chartholder").empty();
                $("#chart_div").empty();
                
                if (result.status == 1) {
                   
                    var ldiv = '<div id="chart_div">' + result.data + '</div>';
                    $(".divtablist").append(ldiv);
                    $("#hdnReloadData").val(result.data);
                }
                else {
                    console.log("in error");
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
       // stoploader();
    }

    function ReloadChart() {

        
        var dataToReload = $("#hdnReloadData").val();
        if (dataToReload != "") {
           
            $("#chartholder").empty();
            $("#chart_div").empty();
            $("#chart_div").remove();
            var ldiv = '<div id="chart_div">' + dataToReload + '</div>';
            $(".divtablist").append(ldiv);
            
        }
        else {
            console.log("Hi i m here");
            DisplayChart();
        }
        
    }

    function LoadAxisData(Id, editObj) {
        
        var validator = $("#frmaxis").validate();
        validator.resetForm();

        var lConnId = $("#drpConnection").val();
        var lQueryId = $("#drpQuery").val();
        var lChartType = $("#drpChartType").val();
       
        $("#hdnConnId").val(lConnId);
        $("#hdnQueryId").val(lQueryId);
        $("#hdnChartType").val(lChartType);
       
        $.ajax({
            url: "/Chart/LoadAxisData",
            data: '{"ConnId":"' + lConnId + '", "QueryId":"' + lQueryId + '", "ChartType":"' + lChartType + '"}',
            type: "POST",
            async: false,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                
                //show the set axis modal
                if (result.status >= 0) {
                    if (result.data != null) {

                        $("#axisModalLabel").text('');
                        $("#axisModalLabel").text('Set Axis');
        

                        $("#SetAxisModal").modal("show");
                        $('.modal-dialog').draggable({
                            handle: ".modal-header"
                        });

                        var x_result, y_result, z_result;
                        x_result = result.data["xaxis"];
                        y_result = result.data["yaxis"];
                        z_result = result.data["zaxis"];
                        //For pie chart, 2 parameters
                        if (lChartType == "1") {
                            $("#lblAxisZ").text('Y Axis');
                            $("#lblAxisY").css("display", "none");
                            $("#drpYAxis").css("display", "none");
                            $("#drpYAxis").prop("disabled", true);
                            y_result = result.data["yaxis"];
                            z_result = result.data["zaxis"];
                        }
                        else if (parseInt(lChartType) > 3)
                        {
                            console.log("i m in 2d charts");
                            $("#lblAxisZ").text('Label');
                            y_result = result.data["zaxis"];
                            z_result = result.data["yaxis"];

                        }
                        else {
                            $("#lblAxisY").text('Y Axis');
                            $("#lblAxisZ").text('Z Axis');
                            $("#lblAxisY").css("display", "block");
                            $("#drpYAxis").css("display", "block");
                            $("#drpYAxis").prop("disabled", false);
                            y_result = result.data["yaxis"];
                            z_result = result.data["zaxis"];
                        }
                        
                        //if data already exist
                        $("#hdnAxisId").val(result.status);
                        //clear the drop downs
                        $("#drpXAxis").html("");
                        $("#drpYAxis").html("");
                        $("#drpZAxis").html("");

                        
                        

                        //Fill the x axis data
                        var optionStringX = "<optgroup>";
                        optionStringX = optionStringX + "<option value=\"\" style=\"display:none\"></option>";

                       
                        for (i = 0; i < x_result.length; i++) {
                            var optionValue = x_result[i].axis_id;
                            var optionText = x_result[i].axis_name;
                            if (x_result[i].selected == true) {
                                optionStringX = optionStringX + " <option value='" + optionValue + "' selected>" + optionText + "</option>";
                            }
                            else {
                                optionStringX = optionStringX + " <option value='" + optionValue + "'>" + optionText + "</option>";
                            }
                        }
                        optionStringX = optionStringX + "</optgroup>";

                        $("#drpXAxis").append($(optionStringX));
                       
                        //Fill the y axis data
                        var optionStringY = "<optgroup>";
                        optionStringY = optionStringY + "<option value=\"\" style=\"display:none\"></option>";

                        for (i = 0; i < y_result.length; i++) {
                            var optionValue = y_result[i].axis_id;
                            var optionText =y_result[i].axis_name;
                            if (y_result[i].selected == true) {
                                optionStringY = optionStringY + " <option value='" + optionValue + "' selected>" + optionText + "</option>";
                            }
                            else {
                                optionStringY = optionStringY + " <option value='" + optionValue + "'>" + optionText + "</option>";
                            }
                        }
                        optionStringY = optionStringY + "</optgroup>";

                        $("#drpYAxis").append($(optionStringY));

                        //fill the z axis with only numeric data
                        var optionStringZ = "<optgroup>";
                        optionStringZ = optionStringZ + "<option value=\"\" style=\"display:none\"></option>";
                        for (i = 0; i < z_result.length; i++) {
                            var optionValue = z_result[i].axis_id;
                            var optionText = z_result[i].axis_name;
                            if (z_result[i].selected == true) {
                                optionStringZ = optionStringZ + " <option value='" + optionValue + "' selected>" + optionText + "</option>";
                            }
                            else {
                                optionStringZ = optionStringZ + " <option value='" + optionValue + "'>" + optionText + "</option>";
                            }
                        }
                        optionStringZ = optionStringZ + "</optgroup>";

                        $("#drpZAxis").append($(optionStringZ));
                        
                    }
                }
                else if (result.status == -1) {
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    function SaveAxisData() {
        var lChartType = $("#drpChartType").val();
        console.log(!($("#drpYAxis").prop('disabled')));
        if (!$("#frmaxis").valid()) {
            return false;
        };
        var AxisModel = {};
        AxisModel.axisId = $("#hdnAxisId").val();
        AxisModel.queryId = $("#hdnQueryId").val();
        AxisModel.chartType = $("#hdnChartType").val();
        if (parseInt(lChartType) > 3) {
            AxisModel.xAxis = $("#drpXAxis").val();
            AxisModel.yAxis = $("#drpZAxis").val();
            AxisModel.zAxis = $("#drpYAxis").val();
            console.log(AxisModel.xaxis + ", " + AxisModel.yAxis + ", " + AxisModel.zaxis);
        }
        else {
            AxisModel.xAxis = $("#drpXAxis").val();
            AxisModel.yAxis = $("#drpYAxis").val();
            AxisModel.zAxis = $("#drpZAxis").val();
        }
        $.ajax({
            url: "/Chart/SaveAxisData",
            data: JSON.stringify(AxisModel),
            type: "POST",
            async: false,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {

                //show the set axis modal
                if (result.status == 1 && result.data) {
                    $("#lblAxisY").text('Y Axis');
                    $("#lblAxisZ").text('Z Axis');
                    $("#lblAxisY").css("display", "block");
                    $("#drpYAxis").css("display", "block");
                    $("#drpYAxis").prop("disabled", false);

                    $("#SetAxisModal").modal("hide");
                    
                        swal.fire({
                            "title": "",
                            "text": result.message,
                            "icon": "success",
                            "onClose": function (e) {
                                console.log('on close event fired!');
                            }
                        });
                    }
                    else if (result.status == 0) {
                        swal.fire({
                            "title": "",
                            "text": result.message,
                            "icon": "error",
                            "onClose": function (e) {
                                console.log('on close event fired!');
                            }
                        });
                    }
                   
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
        });
       
       
    }

</script>





