@using MARS_Repository.ViewModel
@*@{
    string EditTS = "false", DeleteTS = "false";
    var PrivilegeList = Session["PrivilegeList"] as List<PrivilegeViewModel>;
    if (PrivilegeList.Count > 0)
    {
        EditTS = PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Edit TestSuite").ToString().ToLower();
        DeleteTS = PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Delete TestSuite").ToString().ToLower();
    }
}*@

@*<input type="hidden" value="@EditTS" id="hdnEditTS" />
<input type="hidden" value="@DeleteTS" id="hdnDeleteTS" />*@

<div class="kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor" id="kt_content">
    <div class="kt-subheader   kt-grid__item" id="kt_subheader" style="left: @ViewBag.width;">
        <div class="kt-container  kt-container--fluid ">
            <div class="kt-subheader__main">

                <span class="kt-subheader__separator kt-hidden"></span>
                <div class="kt-subheader__breadcrumbs">
                    <a href="#" class="kt-subheader__breadcrumbs-home"><i class="flaticon2-settings" style="color:#1c6081"></i></a>
                    <a href="#" class="kt-subheader__breadcrumbs-link" style="color:#1c6081">
                        Filter
                    </a>
                    <i class="fa fa-angle-double-right" style="color:#1c6081"></i>
                    <a href="#" class="kt-subheader__breadcrumbs-link" style="color:#1c6081">
                        &nbsp;
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title" style="color:#1582ab">
                        List Of All Filter List
                    </h3>
                </div>
                @*@if (PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Add TestSuite"))
                {*@
                    <div class="kt-portlet__head-toolbar">
                        <div class="kt-portlet__head-wrapper">
                            <div class="kt-portlet__head-actions">
                                <button type="button" class="btn btn-brand btn-elevate btn-icon-sm" data-toggle="modal" onclick="OpenFilter()" data-target="#kt_modal_4"><i class="la la-plus"></i>Filter</button>
                                &nbsp;
                            </div>
                        </div>
                    </div>
                @*}*@
            </div>
            <div class="modal fade" id="FilterModel" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" style="display: none;">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="ffexampleModalLabel">Add Filter</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="frmFilter">
                                <input type="hidden" class="form-control" id="hdfilId" name="hdfilId">
                                <div class="form-group">
                                    <label for="name" class="form-control-label">Filter Name<span style="color:red">&nbsp;*</span></label>
                                    <input type="text" class="form-control" id="filname" name="filname">
                                    <label id="existFiltername" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                                        Filter Name already exist.
                                    </label>
                                </div>
                                <div class="form-group">
                                    <label class="form-control-label">Project Name<span style="color:red">&nbsp;*</span></label>
                                    <select class="form-control kt-select2" id="fprojectname" name="fprojectname" onchange="GetSbList()" multiple="multiple"></select>
                                </div>

                                <div class="form-group">
                                    <label class="form-control-label">Storyboard Name<span style="color:red">&nbsp;*</span></label>
                                    <select class="form-control kt-select2" id="fsbname" name="fsbname" multiple="multiple"></select>
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="button" id="saveSBFolder" class="btn btn-primary" onclick="SaveFilter()">Save</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="kt-portlet__body">
                <table class="table table-striped- table-bordered table-hover table-checkable " id="FilterTable">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Project</th>
                            <th>Storyborad</th>
                            <th style="color: #1c6081;background-color: #e9f5ff;font-weight: bold;">Actions</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>





<script>
    var Filtertable = function () {
        $.fn.dataTable.Api.register('column().title()', function () {

            return $(this.header()).text().trim();
        });
        var initFiltertable = function () {

           // var lEditFolderdisplay = $("#hdnEditFolder").val();

            Filtertable = $('#FilterTable').DataTable({
                responsive: false,
                // Pagination Foldertings
                dom: `<'row'<'col-sm-12'tr>>
                                                    <'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7 dataTables_pager'lp>>`,
                // read more: https://datatables.net/examples/basic_init/dom.html

                lengthMenu: [10, 100, 1000],
                processing: true,
                pageLength: 100,

                language: {
                    'lengthMenu': 'Display _MENU_',
                    "processing": "<img  src='../assets/media/mars.gif' style='width:80px;'/>"
                },
                "scrollY": $(window).height() - 305,
                searchDelay: 500,
                //  processing: true,
                serverSide: true,
                ajax: {
                    url: '/TestCase/FilterDataLoad',
                    type: 'POST',
                    data: {
                        // parameters for custom backend script demo
                        columnsDef: [
                            'Name', 'Project', 'Storyborad', 'Actions',],
                    },
                },

                columns: [
                    { data: 'Name', name: "Name", width: '30%', "targets": 0, autowidth: false },
                    { data: 'Project', name: "Project", width: '30%', "targets": 1, autowidth: false },
                    { data: 'Storyborad', name: "Storyborad", width: '20%', "targets": 2, autowidth: false },
                    { data: 'Actions', responsivePriority: -1, width: '20%', "targets": 3, autowidth: false }
                ],
                initComplete: function () {
                    var thisTable = this;
                    var rowFilter = $('<tr class="filter"></tr>').appendTo($(Filtertable.table().header()));

                    Filtertable.columns().every(function () {
                        var column = this;
                        var input;
                        switch (column.title()) {
                            case 'Name':
                            case 'Project':
                            case 'Storyborad':
                                input = $(`<input type="text" class="form-control form-control-sm form-filter kt-input" data-col-index="` + column.index() + `"/>`);
                                $(input).keyup(function () {
                                    var params = {};
                                    $(rowFilter).find('.kt-input').each(function () {
                                        var i = $(this).data('col-index');
                                        if (params[i]) {
                                            params[i] += '|' + $(this).val();
                                        }
                                        else {
                                            params[i] = $(this).val();
                                        }
                                    });
                                    $.each(params, function (i, val) {
                                        Filtertable.column(i).search(val ? val : '', false, false);
                                    });
                                    Filtertable.table().draw();
                                });
                                break;
                        }
                        if (column.title() !== 'actions') {
                            $(input).appendTo($('<th>').appendTo(rowFilter));
                        }
                    });
                },
                columnDefs: [
                    {
                        targets: -1,
                        title: 'Actions',
                        orderable: false,
                        render: function (data, type, full, meta) {
                            var lid = full.Id;
                            var lName = full.Name == null ? "" : full.Name.replace(/'/g, "###");
                            var lProjectIds = full.ProjectIds == null ? "" : full.ProjectIds;
                            var lStoryboradIds = full.StoryboradIds == null ? "" : full.StoryboradIds;
                            var lStoryborad = full.Storyborad;
                            var lProject = full.Project;

                            var lRenderHtml = "";
                            //if (lEditAppdisplay == "true") {
                            lRenderHtml = " <a href='#' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='Edit' data-name='" + lName + "' data-ProjectIds='" + lProjectIds + "' data-StoryboradIds='" + lStoryboradIds + "' data-pro='" + lProject + "' data-Storyborad='" + lStoryborad + "' onclick=AddEditFilter(" + lid + ",$(this)) ><i class='la la-edit'></i></a> ";
                            ///}
                            // if (lDeleteAppdisplay == "true") {
                            lRenderHtml = lRenderHtml + "<a href='#' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='Delete' data-name='" + lName + "' onclick=FilterDelete(" + lid + ",$(this)) ><i class='la la-trash la-xs'></i></a>";
                            //}
                            return lRenderHtml;
                        },
                    }
                ],
            });
        };
        return {
            init: function () {
                initFiltertable();
            },
        };
    }();
    $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
        $($.fn.dataTable.tables(true)).DataTable()
            .columns.adjust();
    });
    jQuery(document).ready(function () {
        Filtertable.init();
    });
   
    $(document).ready(function () {

        $("#frmFilter").validate({
            rules: {
                filname: {
                    required: true
                },
                fprojectname: {
                    required: true
                },
                fsbname: {
                    required: true
                }
            },
        });

    });
    
    function OpenFilter() {
        var projectList =  @Html.Raw(ViewBag.ProjectList);
        $("#existFiltername").css("display", "none");
        $("#hdfilId").val(0);
        $("#filname").val('');
        $("#fprojectname").html('');
        $("#fsbname").html('');
        $("#ffexampleModalLabel").text('');
        $("#ffexampleModalLabel").text('Add Filter');
        var optionString = "";
        optionString = optionString + " <option value=0></option>";

        $("#fsbname").append($(optionString));
        $("#fsbname").select2();

        for (i = 0; i < projectList.length; i++) {
            var optionValue = projectList[i].Value;
            var optionText = projectList[i].Text;
            optionString = optionString + " <option value='" + optionValue + "'>" + optionText + "</option>";
        }
        $("#fprojectname").append($(optionString));
        $("#fprojectname").select2();

        $("#FilterModel").modal("show");
    }
    function GetSbList() {
        var proIds = $("#fprojectname").val().toString();
        if (proIds != "") {
            $.ajax({
                url: "/TestCase/GetStoryboardById",
                data: '{"ProjectIds":"' + proIds + '"}',
                type: "POST",
                async: false,
                contentType: "application/json;charFolder=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.status == 1) {
                        var SBlist = JSON.parse(result.data);
                        $("#fsbname").html('');
                        var optionString = "";
                        optionString = optionString + " <option value=0></option>";
                        for (i = 0; i < SBlist.length; i++) {

                            var optionValue = SBlist[i].Storyboardid;
                            var optionText = SBlist[i].Storyboardname;
                            optionString = optionString + " <option value='" + optionValue + "'>" + optionText + "</option>";
                        }

                        $("#fsbname").append($(optionString));
                        $("#fsbname").select2();
                    }
                    else if (result.status == 0) {
                        swal.fire({
                            "title": "",
                            "text": result.message,
                            "icon": "error",
                            "onClose": function (e) {
                                console.log('on close event fired!');
                            }
                        });
                    }
                },
                error: function (errormessage) {
                    alert(errormessage.responFolderext);
                }
            });
        }
        else {
            $("#fsbname").html('');
            var optionString = "";
            optionString = optionString + " <option value=0></option>";

            $("#fsbname").append($(optionString));
            $("#fsbname").select2();
        }
    }

    function SaveFilter() {
        var proIds = $("#fprojectname").val().toString();
        var storybaordIds = $("#fsbname").val().toString();
        var filtername = $("#filname").val();
        var Id = $("#hdfilId").val();
        if (!$("#frmFilter").valid())
            return false;

        startloader();
        $.ajax({
            url: "/TestCase/SaveFolderFilter",
            data: '{"ProjectIds":"' + proIds + '","storybaordIds":"' + storybaordIds + '","filtername":"' + filtername + '","Id":"' + Id + '"}',
            type: "POST",
            contentType: "application/json;charFolder=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.status == 1) {
                    swal.fire({
                        "title": "",
                        "text": "Filter Name [" + filtername +"] Saved successfully",
                        "icon": "success",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                    $("#FilterModel").modal("hide");
                }
                else if (result.status == 0) {
                    if (result.message == "Dublicate FilterName")
                        $("#existFiltername").css("display", "block");
                    else {
                        swal.fire({
                            "title": "",
                            "text": result.message,
                            "icon": "error",
                            "onClose": function (e) {
                                console.log('on close event fired!');
                            }
                        });
                    }
                }
                stoploader();
                Filtertable.table().draw();
            },
            error: function (errormessage) {
                alert(errormessage.responFolderext);
            }
        });
    }

    function AddEditFilter(Id, editObj) {
        $("#TSexampleModalLabel").text('');
        $("#ffexampleModalLabel").text('Edit Filter');
        $("#existFiltername").css("display", "none");
      
        var lId = Id;
        var Name = $(editObj).attr("data-name").replace(/###/g, "'");
        var ProjectIds = $(editObj).attr("data-ProjectIds");
        var StoryboradIds = $(editObj).attr("data-storyboradids");
        $("#filname").val(Name);
        $("#hdfilId").val(lId);
        var projectList =  @Html.Raw(ViewBag.ProjectList);
        var optionString = "";
        optionString = optionString + " <option value=0></option>";
        $("#fprojectname").html("");
        $("#fsbname").html("");
       
        for (i = 0; i < projectList.length; i++) {
            var optionValue = projectList[i].Value;
            var optionText = projectList[i].Text;
            optionString = optionString + " <option value='" + optionValue + "'>" + optionText + "</option>";
        }
        $("#fprojectname").append($(optionString));
        $("#fprojectname").select2();

        $("#fprojectname").val(ProjectIds.split(","));
        $("#fprojectname").select2();
        GetSbList();
        $("#fsbname").val(StoryboradIds.split(","));
        $("#fsbname").select2();
        $("#FilterModel").modal("show");
        if (!$("#frmFilter").valid())
            return false;
    }
    
    function FilterDelete(id, obj) {
        var name = obj[0].dataset.name;
        swal.fire({
            title: 'Please confirm.',
            text: "This action can not be undone.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!'
        }).then(function (result) {
            if (result.value == true) {

                $.ajax({
                    url: "/TestCase/DeleteFilter",
                    data: JSON.stringify({ "Id": id }),
                    type: "POST",
                    async: false,
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result.status == 1 && result.data) {
                            swal.fire(
                                'Deleted!',
                                'Filter [' + name + ' ] is deleted',
                                'success')
                        }
                        else if (result.status == 0) {
                            swal.fire({
                                "title": "",
                                "text": result.message,
                                "icon": "error",
                                "onClose": function (e) {
                                    console.log('on close event fired!');
                                }
                            });
                        }
                        Filtertable.table().draw();
                    },

                    error: function (x, y, z) {
                        swal.fire(
                            'Error while deleting Filter [' + name + ']',
                            'error'
                        )
                    }
                });
            }

        });
    }
   
</script>




