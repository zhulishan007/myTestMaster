
<style>
    .table.userlist th, .table.userlist td {
        padding: 0.75rem;
    }
</style>

<div class="kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor" id="kt_content">
    <div class="kt-subheader   kt-grid__item" id="kt_subheader" style="left: @ViewBag.width;">
        <div class="kt-container  kt-container--fluid ">
            <div class="kt-subheader__main">

                <span class="kt-subheader__separator kt-hidden"></span>
                <div class="kt-subheader__breadcrumbs">
                    <a href="#" class="kt-subheader__breadcrumbs-home"><i class="flaticon2-settings" style="color:#1c6081"></i></a>
                    <a href="#" class="kt-subheader__breadcrumbs-link" style="color:#1c6081">
                        List of User-Project Mappings
                    </a>
                    <i class="fa fa-angle-double-right" style="color:#1c6081"></i>
                    <a href="#" class="kt-subheader__breadcrumbs-link" style="color:#1c6081">
                        &nbsp;
                    </a>


                    <!-- <span class="kt-subheader__breadcrumbs-link kt-subheader__breadcrumbs-link--active">Active link</span> -->
                </div>
            </div>
        </div>
    </div>
    <div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title" style="color:#1582ab">
                        List of User-Project Mappings
                    </h3>
                </div>
                <div class="kt-portlet__head-toolbar">
                    <div class="kt-portlet__head-wrapper">

                    </div>
                </div>
            </div>
            <div class="kt-portlet__body">
                <table class="table table-striped- table-bordered table-hover table-checkable userlist" id="usertable">
                    <thead>
                        <tr>
                            <th>First Name</th>
                            <th>Last Name</th>
                            <th>User Name</th>
                            <th>Email Address</th>
                            <th>Project Name</th>
                            <th style="color: #1c6081;background-color: #e9f5ff;font-weight: bold;">Actions</th>
                            @*<th hidden="hidden">User Id</th>*@
                        </tr>
                    </thead>

                </table>

            </div>
        </div>
    </div>
</div>

<script>
    var UpTable;
    var userProjecttable = function () {
        $.fn.dataTable.Api.register('column().title()', function () {
            return $(this.header()).text().trim();
        });

        var inituserProjecttable = function () {
            UpTable = $('#usertable').DataTable({
                responsive: false,

                // Pagination settings
                dom: `<'row'<'col-sm-12'tr>>
                                            <'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7 dataTables_pager'lp>>`,
                // read more: https://datatables.net/examples/basic_init/dom.html

                lengthMenu: [10, 100, 1000],
                processing: true,
                pageLength: 100,

                language: {
                    'lengthMenu': 'Display _MENU_',
                    "processing": "<img  src='../assets/media/mars.gif' style='width:80px;'/>"
                },
                "scrollY": $(window).height() - 305,
                searchDelay: 500,
                //  processing: true,
                serverSide: true,
                ajax: {
                    url: '/Project/ListUsers',
                    type: 'POST',
                    data: {
                        // parameters for custom backend script demo
                        columnsDef: [
                            'TESTER_NAME_F', 'TESTER_NAME_LAST', 'TESTER_LOGIN_NAME', 'TESTER_MAIL',
                            'ProjectName', 'actions'],
                    },
                },
                columns: [
                    { data: 'TESTER_NAME_F', name: "First Name", width: '10%', "targets": 0,autowidth: false },
                    { data: 'TESTER_NAME_LAST', name: "Last Name", width: '10%', "targets": 1, autowidth: false },
                    { data: 'TESTER_LOGIN_NAME', name: "User Name", width: '10%', "targets": 2,autowidth: false },
                    { data: 'TESTER_MAIL', name: "Email Address", width: '30%', "targets": 3,autowidth: false },
                    { data: "ProjectName", name: "ProjectId", width: '30%', "targets": 4,autowidth: false },
                    { data: 'Actions', responsivePriority: -1, width: '10%', "targets": 5, autowidth: false }
                ],
                initComplete: function () {
                    var thisTable = this;
                    var rowFilter = $('<tr class="filter"></tr>').appendTo($(UpTable.table().header()));

                    UpTable.columns().every(function () {
                        var column = this;
                        var input;
                        switch (column.title()) {
                            case 'First Name':
                            case 'Last Name':
                            case 'User Name':
                            case 'Email Address':
                            case 'Project Name':
                                input = $(`<input type="text" class="form-control form-control-sm form-filter kt-input" data-col-index="` + column.index() + `"/>`);
                                $(input).keyup(function () {
                                    var params = {};
                                    $(rowFilter).find('.kt-input').each(function () {
                                        var i = $(this).data('col-index');
                                        if (params[i]) {
                                            params[i] += '|' + $(this).val();
                                        }
                                        else {
                                            params[i] = $(this).val();
                                        }
                                    });
                                    $.each(params, function (i, val) {
                                        // apply search params to datatable
                                        UpTable.column(i).search(val ? val : '', false, false);
                                    });
                                    UpTable.table().draw();
                                });
                                break;
                        }

                        if (column.title() !== 'Actions') {
                            $(input).appendTo($('<th>').appendTo(rowFilter));
                        }
                    });

                },
                columnDefs: [
                    {
                        targets: -1,
                        title: 'Actions',
                        orderable: false,
                        render: function (data, type, full, meta) {
                            var lid = full.TESTER_ID;
                            var emailid = full.TESTER_LOGIN_NAME;
                            return " <a href='#' onclick='LoadProjects(" + lid + ")' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='View'><i class='la la-edit'></i></a>" +
                                "<a href='#' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='Delete' onclick=DeleteProjectMapping(" + lid + ") ><i class='la la-trash la-xs'></i></a>";
                        },
                    }
                ],
            });
        };
        return {
            //main function to initiate the module
            init: function () {
                inituserProjecttable();
            },

        };
    }();
    $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
        $($.fn.dataTable.tables(true)).DataTable()
            .columns.adjust();
    });
    jQuery(document).ready(function () {
        userProjecttable.init();
    });

    function DeleteProjectMapping(id) {
        swal.fire({
            title: 'Please confirm.',
            text: "This action can not be undone.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!'
        }).then(function (result) {
            if (result.value == true) {
                $.ajax({
                    dataType: "json",
                    type: "POST",
                    async: true,
                    url: "/Project/DeleteUserProjectMapping",
                    data: { userid: id },
                    success: function (result) {
                        if (result.status == 1 && result.data.Status == "success") {
                            swal.fire({
                                "title": "",
                                "text": "Successfully deleted Project mappings for user [" + result.data.Username + "]",
                                "icon": "success",
                                "onClose": function (e) {
                                    console.log('on close event fired!');
                                }
                            });
                            UpTable.table().draw();
                        }
                        else if (result.status == 0) {
                            swal.fire({
                                "title": "",
                                "text": result.message,
                                "icon": "error",
                                "onClose": function (e) {
                                    console.log('on close event fired!');
                                }
                            });
                        }
                        else {
                            swal.fire({
                                "title": "",
                                "text": "No Projects are mapped to this user.",
                                "icon": "error",
                                "onClose": function (e) {
                                    console.log('on close event fired!');
                                }
                            });
                        }
                    }
                });
            }
        });
    }
    function LoadProjects(name) {
        partialRightOpenProjectListFromUser(name);
    }
    function Savechanges() {
        saveData()
    }
</script>
