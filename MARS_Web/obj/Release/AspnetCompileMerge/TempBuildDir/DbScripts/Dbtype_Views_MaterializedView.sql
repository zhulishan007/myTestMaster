create or replace TYPE "T_REGISTED_OBJECT_TOP" is object
(OBJECT_ID varchar2(5000), OBJECT_NAME_ID varchar2(5000));
/
create or replace TYPE "T_REGISTED_OBJECT_TOP_COLL" is table of T_REGISTED_OBJECT_TOP;
/
create or replace TYPE "TBLSTGTESTCASEIMPORT" IS object 
(
    TESTSUITENAME VARCHAR2(3000), 
    TESTCASENAME VARCHAR2(3000), 
    TESTCASEDESCRIPTION VARCHAR2(8000),
    DATASETMODE VARCHAR2(3000),
    KEYWORD VARCHAR2(3000),
    OBJECT VARCHAR2(3000),
    PARAMETER VARCHAR2(3000),
    COMMENTS VARCHAR2(3000),
    DATASETNAME VARCHAR2(3000),
    DATASETVALUE VARCHAR2(3000),
    ROWNUMBER INT,
    FEEDPROCESSDETAILID INT,
    TABNAME VARCHAR2(3000),
    APPLICATION VARCHAR2(3000)
);
/
create or replace TYPE TBLSTGTESTCASEIMPORT_ARRAY AS TABLE OF TBLSTGTESTCASEIMPORT;

/


  CREATE OR REPLACE FORCE VIEW "TESTIDE11"."V_ALEX_TEST" ("DASHBOARD_ID", "PROJECT_ID", "PROJECT_NAME", "PROJECT_DESCRIPTION", "TEST_CASE_NAME", "TEST_CASE_ID", "TEST_STEP_DESCRIPTION", "TEST_SUITE_ID", "TEST_SUITE_DESCRIPTION", "RUN_ORDER", "RELY_ON", "ALIAS_NAME", "DISPLAY_NAME", "TEST_RUN_VALUE", "LATEST_TEST_MARK_ID", "HIS_LATEST_TEST_MARK_ID", "HIS_ID", "HIS_TEST_ID", "TEST_CASE_BEGIN_TIME", "TEST_CASE_END_TIME", "HIST_TEST_RESULT_IN_TEXT", "HIST_TEST_MODE", "HIS_RESULT") AS 
  SELECT 
   ROW_NUMBER,
    DASHBOARD.DASHBOARD_ID,
    PROJ.PROJECT_ID,
    PROJ.PROJECT_NAME,
    PROJ.PROJECT_DESCRIPTION,
    TC.TEST_CASE_NAME,
    TC.TEST_CASE_ID,
    TC.TEST_STEP_DESCRIPTION,   
    -- TEST CASE    
    --tEST SUITE
    TS.TEST_SUITE_ID,
    TS.TEST_SUITE_DESCRIPTION,
    DASHBOARD.RUN_ORDER,
    DASHBOARD.RELY_ON,
    DASHBOARD.ALIAS_NAME,
    LP.DISPLAY_NAME,
    LP.VALUE TEST_RUN_VALUE,
    DASHBOARD.LATEST_TEST_MARK_ID,
    -- TEST CASE LATEST INFOR
    HISEX.LATEST_TEST_MARK_ID HIS_LATEST_TEST_MARK_ID,
    HISEX.HIS_ID,
    HISEX.TEST_CASE_ID HIS_TEST_ID,
    HISEX.TEST_BEGIN_TIME TEST_CASE_BEGIN_TIME,
    HISEX.TEST_END_TIME TEST_CASE_END_TIME,
    HISEX.TEST_RESULT_IN_TEXT HIST_TEST_RESULT_IN_TEXT,
    HISEX.TEST_MODE HIST_TEST_MODE,
    HISEX.TEST_RESULT HIS_RESULT
FROM T_PROJ_TC_MGR DASHBOARD
LEFT JOIN
    T_TEST_CASE_SUMMARY TC
ON  DASHBOARD.TEST_CASE_ID = TC.TEST_CASE_ID
LEFT JOIN T_TEST_PROJECT PROJ
ON DASHBOARD.PROJECT_ID = PROJ.PROJECT_ID
LEFT JOIN SYSTEM_LOOKUP LP
ON DASHBOARD.RUN_TYPE = LP.VALUE
AND LP.TABLE_NAME='T_PROJ_TC_MGR'
AND LP.FIELD_NAME='RUN_TYPE'
LEFT JOIN (
  SELECT HIS.LATEST_TEST_MARK_ID,HIS.HIS_ID,HIS.DASHBOARD_ID,HIS.TEST_BEGIN_TIME,HIS.TEST_CASE_ID,
         HIS.TEST_END_TIME ,HIS.TEST_RESULT_IN_TEXT ,HIS.TEST_MODE,HIS.TEST_RESULT,
         HIS.RELY_TEST_CASE_ID
  FROM T_PROJ_TEST_RESULT HIS,
  (
        select max(rslt.LATEST_TEST_MARK_ID) DASH_LATEST_MARK_ID,
          rslt.DASHBOARD_ID
        from T_PROJ_TEST_RESULT rslt
        where 
          -- test is for project
            rslt.TEST_MODE=1
        group by rslt.DASHBOARD_ID) HISMX
    WHERE 
      HISMX.DASHBOARD_ID = HIS.DASHBOARD_ID
    AND HISMX.DASH_LATEST_MARK_ID = HIS.LATEST_TEST_MARK_ID 
  ) HISEX
ON DASHBOARD.DASHBOARD_ID=HISEX.DASHBOARD_ID
AND DASHBOARD.TEST_CASE_ID=HISEX.TEST_CASE_ID
LEFT JOIN T_DASHBOARD_SUMMARY DS
ON DASHBOARD.DASHBOARD_ID=DS.DASHBOARD_ID, 
     REL_TEST_CASE_TEST_SUITE TSTC
LEFT JOIN T_TEST_SUITE TS
ON TSTC.TEST_SUITE_ID = TS.TEST_SUITE_ID
LEFT JOIN REL_TEST_SUIT_PROJECT TSP
ON TS.TEST_SUITE_ID=TSP.TEST_SUITE_ID
where 
     TC.TEST_CASE_ID=TSTC.TEST_CASE_ID
AND TSP.PROJECT_ID=PROJ.PROJECT_ID     
ORDER BY PROJ.PROJECT_ID,DASHBOARD.RUN_ORDER,TS.TEST_SUITE_ID
with read only
 ;
 
/


  CREATE OR REPLACE FORCE VIEW "TESTIDE11"."V_TEST_CASE_DETAILS" ("Application", "test_suite_name", "test_case_name", "test_step_description", "key_word_name", "object_happy_name", "parameter", "COMMENT", "DATASETIDS", "DATASETNAME", "DATASETDESCRIPTION", "DATASETVALUE", "SKIP", "RUN_ORDER", "TEST_CASE_ID", "STEPS_ID", "TEST_SUITE_ID", "ROW_NUM") AS 
  SELECT DISTINCT
    DBMS_LOB.SUBSTR("Application",4000,1) AS "Application",
    "test_suite_name","test_case_name","test_step_description","key_word_name","object_happy_name","parameter","COMMENT",
    DBMS_LOB.SUBSTR("DATASEIDS",4000,1) AS "DATASETIDS",
    DBMS_LOB.SUBSTR("DATASETNAME",4000,1) AS "DATASETNAME",
    DBMS_LOB.SUBSTR("DATASETDESCRIPTION",4000,1) AS "DATASETDESCRIPTION",
    DBMS_LOB.SUBSTR("DATASETVALUE",4000,1) AS "DATASETVALUE",
    DBMS_LOB.SUBSTR("SKIP",4000,1) AS "SKIP",
    "RUN_ORDER",
    "TEST_CASE_ID",
    "STEPS_ID",
    "TEST_SUITE_ID",
    ROW_NUMBER() OVER (PARTITION BY RUN_ORDER ORDER BY RUN_ORDER) AS "ROW_NUM"
    FROM (
        SELECT 
            REPLACE((SELECT  concatenate_application(t.TEST_SUITE_ID) FROM DUAL), '\', '\\') AS "Application",
            t.TEST_SUITE_NAME AS "test_suite_name",
            tc.TEST_CASE_NAME as "test_case_name",
            tc.TEST_STEP_DESCRIPTION AS "test_step_description",
            tk.KEY_WORD_NAME as "key_word_name",
            tobn.OBJECT_HAPPY_NAME AS "object_happy_name",
            ts.COLUMN_ROW_SETTING as "parameter",
            ts."COMMENT",
            REPLACE((SELECT concatenate_datasetids(tc.TEST_CASE_ID) DATASETNAME FROM DUAL), '\', '\\') "DATASEIDS",
            REPLACE((SELECT concatenate_datasetnames(tc.TEST_CASE_ID) DATASETNAME FROM DUAL), '\', '\\') "DATASETNAME",
            REPLACE((SELECT concatenate_datasetdescription(tc.TEST_CASE_ID) FROM DUAL), '\', '\\') "DATASETDESCRIPTION",
            REPLACE((SELECT concatenate_teststepvalue(tc.TEST_CASE_ID, ts.STEPS_ID) FROM DUAL), '\', '\\') "DATASETVALUE",
            (SELECT concatenate_teststepskip(tc.TEST_CASE_ID, ts.STEPS_ID) FROM DUAL) "SKIP",
            ts."RUN_ORDER",
            tc."TEST_CASE_ID",
            ts."STEPS_ID",
            t."TEST_SUITE_ID"
        FROM T_TEST_SUITE t
        --INNER JOIN REL_APP_TESTSUITE relta ON relta.TEST_SUITE_ID = t.TEST_SUITE_ID
        --INNER JOIN T_REGISTERED_APPS tapp ON tapp.APPLICATION_ID = relta.APPLICATION_ID
        INNER JOIN REL_TEST_CASE_TEST_SUITE reltcts ON reltcts.TEST_SUITE_ID = t.TEST_SUITE_ID
        --INNER JOIN REL_APP_TESTCASE reapp ON reapp.test_case_id = reltcts.TEST_CASE_ID
        --and reapp.application_id= relta.application_id AND tapp.APPLICATION_ID = reapp.application_id          
        INNER JOIN T_TEST_CASE_SUMMARY tc ON tc.TEST_CASE_ID = reltcts.TEST_CASE_ID
        LEFT JOIN T_TEST_STEPS ts ON ts.TEST_CASE_ID = tc.TEST_CASE_ID
        LEFT JOIN T_KEYWORD tk ON tk.KEY_WORD_ID = ts.KEY_WORD_ID
        LEFT JOIN T_OBJECT_NAMEINFO tobn ON tobn.OBJECT_NAME_ID = ts.OBJECT_NAME_ID        
    ) 
    
    ORDER BY 3 DESC,13;'

/

-- Unable to render MATERIALIZED VIEW DDL for object TESTIDE11.MV_LAST_TC_INFO with DBMS_METADATA attempting internal generator.
COMMENT ON MATERIALIZED VIEW MV_LAST_TC_INFO IS 'snapshot table for snapshot TESTIDE2.MV_LAST_TC_INFO'CREATE MATERIALIZED VIEW MV_LAST_TC_INFO 
LOGGING 
TABLESPACE TESTIDE2 
PCTFREE 10 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1 
  MAXEXTENTS UNLIMITED 
  BUFFER_POOL DEFAULT 
) 
NOCACHE 
NOPARALLEL 
USING INDEX 
REFRESH ON COMMIT 
FORCE 
USING DEFAULT LOCAL ROLLBACK SEGMENT 
DISABLE QUERY REWRITE AS 
SELECT 
    --STB_MD_LST.STORYBOARD_ID, STB_MD_LST.TEST_MODE,  
    STB_DTL.*
  FROM   
    --LATEST STORYBOARD, TESTMODE, TEST MARK INFO
    MV_LATEST_STB_TSMOD_MARK STB_MD_LST
  ,
    T_PROJ_TEST_RESULT STB_DTL
WHERE  STB_MD_LST.MX_STB_LTST_ID=STB_DTL.LATEST_TEST_MARK_ID
  AND STB_MD_LST.TEST_MODE = STB_DTL.TEST_MODE
