

<div class="kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor" id="kt_content">
    <div class="kt-subheader   kt-grid__item" id="kt_subheader" style="left: @ViewBag.width;">
        <div class="kt-container  kt-container--fluid ">
            <div class="kt-subheader__main">

                <span class="kt-subheader__separator kt-hidden"></span>
                <div class="kt-subheader__breadcrumbs">
                    <a href="#" class="kt-subheader__breadcrumbs-home"><i class="flaticon2-settings" style="color:#1c6081"></i></a>
                    <a href="#" class="kt-subheader__breadcrumbs-link" style="color:#1c6081">
                        User Role Mapping List
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title" style="color:#1582ab">
                        List Of User Role Mapping
                    </h3>
                </div>
                <div class="kt-portlet__head-toolbar">
                    <div class="kt-portlet__head-wrapper">
                        <div class="kt-portlet__head-actions">
                            @*<button type="button" class="btn btn-brand btn-elevate btn-icon-sm" data-toggle="modal" onclick="AddRole()" data-target="#kt_modal_5"><i class="la la-plus"></i>New Role</button>*@
                            <button type="button" class="btn btn-brand btn-elevate btn-icon-sm" data-toggle="modal" onclick="AddUserRoleMapping()" data-target="#kt_modal_4"><i class="la la-plus"></i>User Role</button>
                            &nbsp;
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="AddUserRoleMapping" tabindex="-1" role="dialog" aria-labelledby="urexampleModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="urexampleModalLabel">Add User Role Mapping</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="frmuserrolemapping">
                                <div class="form-group">
                                    <label for="recipient-name" class="form-control-label">Select User<span style="color:red">&nbsp;*</span></label>
                                    <select class="form-control kt-select2" id="DrpRUser" name="DrpRUser" onchange="CheckUserNameExist()">
                                        @{var lUserList = ViewBag.userlist as IEnumerable<SelectListItem>;

                                            foreach (var item in lUserList)
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                    </select>
                                    <label id="existUserRole" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                                        User Role already exist.
                                    </label>
                                </div>
                                <div class="form-group">
                                    <label class="form-control-label">Select Role<span style="color:red">&nbsp;*</span></label>
                                    <select class="form-control kt-select2" id="sDrpURole" name="sDrpURole" multiple="multiple" style="border-color:#59c0e7 !important">
                                        @{var lRolesList = ViewBag.rolelist as IEnumerable<SelectListItem>;

                                            <optgroup id="roles" label="Roles">
                                                @foreach (var item in lRolesList)
                                                {
                                                    <option value="@item.Value">@item.Text</option>
                                                }
                                            </optgroup>
                                        }
                                    </select>
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" id="addedUserrole" class="btn btn-outline-brand btn-elevate btn-pill" onclick="AddEditUserRoleMappingSave()">Save</button>
                            <button type="button" class="btn btn-outline-brand btn-elevate btn-pill" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
          
            <div class="kt-portlet__body">
                <table class="table table-striped- table-bordered table-hover table-checkable" id="userrolemappingtable">
                    <thead>
                        <tr>
                            <th>User Name</th>
                            <th>Roles</th>
                            <th style="color: #1c6081;background-color: #e9f5ff;font-weight: bold;">Actions</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>
<script>
    var UserRoleMappingTable = function () {
        $.fn.dataTable.Api.register('column().title()', function () {

            return $(this.header()).text().trim();
        });
        var initUserRoleMappingTable = function () {
            UserRoleMappingTable = $('#userrolemappingtable').DataTable({
                responsive: false,
                // Pagination settings
                dom: `<'row'<'col-sm-12'tr>>
                                                    <'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7 dataTables_pager'lp>>`,
                // read more: https://datatables.net/examples/basic_init/dom.html

                lengthMenu: [10, 100, 1000],
                processing: true,
                pageLength: 100,

                language: {
                    'lengthMenu': 'Display _MENU_',
                    "processing": "<img  src='../assets/media/mars.gif' style='width:80px;'/>"
                },
                "scrollY": $(window).height() - 305,
                searchDelay: 500,
                //  processing: true,
                serverSide: true,
                ajax: {
                    url: '/Entitlement/DataLoad',
                    type: 'POST',
                    data: {
                        // parameters for custom backend script demo
                        columnsDef: [
                            'UserName', 'Roles', 'Actions',],
                    },
                },

                columns: [
                    { data: 'UserName', name: "User Name", width: '40%', "targets": 0, autowidth: false },
                    { data: 'Roles', name: "Roles", width: '40%', "targets": 1, autowidth: false },
                    { data: 'Actions', responsivePriority: -1, width: '20%', "targets": 2, autowidth: false }
                ],
                initComplete: function () {
                    var thisTable = this;
                    var rowFilter = $('<tr class="filter"></tr>').appendTo($(UserRoleMappingTable.table().header()));

                    UserRoleMappingTable.columns().every(function () {
                        var column = this;
                        var input;
                        switch (column.title()) {
                            case 'User Name':
                            case 'Roles':
                                input = $(`<input type="text" class="form-control form-control-sm form-filter kt-input" data-col-index="` + column.index() + `"/>`);
                                $(input).keyup(function () {
                                    var params = {};
                                    $(rowFilter).find('.kt-input').each(function () {
                                        var i = $(this).data('col-index');
                                        if (params[i]) {
                                            params[i] += '|' + $(this).val();
                                        }
                                        else {
                                            params[i] = $(this).val();
                                        }
                                    });
                                    $.each(params, function (i, val) {
                                        UserRoleMappingTable.column(i).search(val ? val : '', false, false);
                                    });
                                    UserRoleMappingTable.table().draw();
                                });
                                break;
                        }
                        if (column.title() !== 'actions') {
                            $(input).appendTo($('<th>').appendTo(rowFilter));
                        }
                    });
                },
                columnDefs: [
                    {
                        targets: -1,
                        title: 'Actions',
                        orderable: false,
                        render: function (data, type, full, meta) {
                            var lUserId = full.UserId;
                            var lUserName = full.UserName;
                            var lRoles = full.Roles;
                            var lRoleId = full.RoleId;
                            return " <a href='#' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='View' data-userid='" + lUserId + "' data-username='" + lUserName + "' data-roles='" + lRoles + "' data-roleid='" + lRoleId + "'onclick=AddEditUserRole(" + lUserId + ",$(this)) ><i class='la la-edit'></i></a> " +
                                "<a href='#' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='Delete' onclick='UserRoleDelete(" + lUserId + ")' ><i class='la la-trash la-xs'></i></a>";
                        },
                    }
                ],
            });
        };
        return {
            init: function () {
                initUserRoleMappingTable();
            },
        };
    }();
    $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
        $($.fn.dataTable.tables(true)).DataTable()
            .columns.adjust();
    });
    jQuery(document).ready(function () {
        UserRoleMappingTable.init();
    });
    $(document).ready(function () {

        $("#frmuserrolemapping").validate({
            rules: {
                DrpRUser: {
                    required: true,
                },
                sDrpURole: {
                    required: true
                }
            },
        });

        $("#frmrole").validate({
            rules: {
                txtRoleName: {
                    required: true,
                }
            },
        });
    });

    function AddEditUserRole(Id, editObj) {
        $("#existUserRole").css("display", "none");
        var validator = $("#frmuserrolemapping").validate();
        validator.resetForm();
        $("#urexampleModalLabel").text('');
        $("#urexampleModalLabel").text('Edit User Role Mapping');
        $('#DrpRUser').prop('selectedIndex', 0);
        $("#DrpRUser").select2();
        $("#sDrpURole").val("");
        $("#sDrpURole").select2();
        $("#AddUserRoleMapping").modal("show");
        $('.modal-dialog').draggable({
            handle: ".modal-header"
        });
        var userid = $(editObj).attr("data-userid");
        var roleid = $(editObj).attr("data-roleid");

        $("#DrpRUser").val(userid);
        $("#DrpRUser").select2();
        $("#sDrpURole").val(roleid.split(","));
        $("#sDrpURole").select2();
        $("#DrpRUser").prop("disabled", true);
    }

    function AddUserRoleMapping() {
        $("#existUserRole").css("display", "none");
        $("#AddUserRoleMapping").modal("show");
        $('.modal-dialog').draggable({
            handle: ".modal-header"
        });
        $("#urexampleModalLabel").text('');
        $("#urexampleModalLabel").text('Add User Role Mapping');
        $('#DrpRUser').prop('selectedIndex', 0);
        $("#DrpRUser").select2();
        $("#sDrpURole").val("");
        $("#sDrpURole").select2();
        $("#DrpRUser").prop("disabled", false);
        var validator = $("#frmuserrolemapping").validate();
        validator.resetForm();
    }

    function UserRoleDelete(id) {
        swal.fire({
            title: 'Please confirm.',
            text: "This action can not be undone.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!'
        }).then(function (result) {
            if (result.value == true) {
                $.ajax({
                    url: "/Entitlement/DeleteUserRole",
                    data: JSON.stringify({ "UserId": id }),
                    type: "POST",
                    async: false,
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result.status == 1) {
                            UserRoleMappingTable.table().draw();
                            swal.fire(
                                'Deleted!',
                                result.message,
                                'success'
                            )
                        }
                        else if (result.status == 0) {
                            swal.fire({
                                "title": "",
                                "text": result.message,
                                "icon": "error",
                                "onClose": function (e) {
                                    console.log('on close event fired!');
                                }
                            });
                        }
                    },
                    error: function (x, y, z) {
                        swal.fire(
                            'Error while deleting',
                            'error'
                        )
                    }
                });
            }
        });
    }

    function AddEditUserRoleMappingSave() {
        $("#addedUserrole").prop("disabled", true);
        if (!$("#frmuserrolemapping").valid()) {
            $("#addedUserrole").prop("disabled", false);
            return false;
        }
        if ($('#existUserRole').css('display') == 'block') {
            $("#addedUserrole").prop("disabled", false);
            return false;
        }
       
        var UserRoleMappingModel = {};
        UserRoleMappingModel.UserId = $("#DrpRUser").val(),
            UserRoleMappingModel.RoleId = $("#sDrpURole").val().toString();

        $("#AddUserRoleMapping").modal("hide");
        startloader();
        $.ajax({
            url: "/Entitlement/AddEditUserRoleMapping",
            data: JSON.stringify(UserRoleMappingModel),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                stoploader();
                
                $("#addedUserrole").attr("disabled", false);
                if (result.status == 1 && result.data) {
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "success",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
                else if (result.status == 0) {
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
                UserRoleMappingTable.table().draw();
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            },
            complete: function (result) {
                stoploader();
            }
        });

    }

    function CheckUserNameExist() {
        var id = $("#DrpRUser").val();
        $.ajax({
            url: "/Entitlement/CheckExistOrNotUser",
            data: JSON.stringify({ "UserId": id }),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.status == 1) {
                    $("#sDrpURole").val("");
                    $("#sDrpURole").select2();
                    if (result.data == true) {
                        $("#existUserRole").css("display", "block");
                    }
                    else {
                        $("#existUserRole").css("display", "none");
                    }
                }
                else if (result.status == 0) {
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
</script>