
@{
    ViewBag.Title = "ListCustomers";
    Layout = null;
}
<style>
    #clsuser span {
        height: 37px;
    }
</style>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    
    @*<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>


    <script src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js "></script>*@

    <script>
        var Usertable;
        var UserTable = function () {

            $.fn.dataTable.Api.register('column().title()', function () {
                return $(this.header()).text().trim();
            });

            var initTable1 = function () {
                Usertable = $("#ExeTable").DataTable({
                    responsive: false,
                    "dom": `<'row'<'col-sm-12'tr>>
                                            <'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7 dataTables_pager'lp>>`,
                    //"processing": true, // for show progress bar
                    "serverSide": true, // for process server side
                    //"filter": true, // this is for disable filter (search box)
                    //"orderMulti": false, // for disable multiple column at once
                    "pageLength": 100,
                    "lengthMenu": [10, 100, 1000],
                    "ajax": {
                        "url": "/Accounts/LoadExePathList",
                        "icon": "POST",
                        "datatype": "json",
                        "data": {
                            // parameters for custom backend script demo
                            columnsDef: [
                                'Username', 'ExePath', 'Actions',],
                        },
                    },
                    "scrollY": $(window).height() - 305,
                    searchDelay: 500,
                    language: {
                        //  'lengthMenu': 'Display _MENU_',
                        //"processing": "<img  src='../assets/media/mars.gif'/>"
                    },
                    "columns": [
                        //{ "data": 'Username', "name": "Name", autowidth: false },
                        //{ "data": 'ExePath', "name": "Execution path", autowidth: false },
                        //{ data: 'Actions', responsivePriority: -1, width: "120px", autowidth: false }
                        { "data": 'Username', "name": "Name", width: '40%', "targets": 0, autowidth: false },
                        { "data": 'ExePath', "name": "Execution path", width: '40%', "targets": 1, autowidth: false },
                        { data: 'Actions', responsivePriority: -1, width: '20%', "targets": 2, autowidth: false }
                    ],

                    initComplete: function () {
                        var thisTable = this;
                        var rowFilter = $('<tr class="filter"></tr>').appendTo($(Usertable.table().header()));

                        Usertable.columns().every(function () {
                            var column = this;
                            var input;

                            switch (column.title()) {
                                case 'Name':
                                case 'Execution path':

                                    input = $(`<input type="text" class="form-control form-control-sm form-filter kt-input" data-col-index="` + column.index() + `"/>`);
                                    $(input).keyup(function () {
                                        var params = {};
                                        $(rowFilter).find('.kt-input').each(function () {
                                            var i = $(this).data('col-index');
                                            if (params[i]) {
                                                params[i] += '|' + $(this).val();
                                            }
                                            else {
                                                params[i] = $(this).val();
                                            }
                                        });
                                        $.each(params, function (i, val) {
                                            // apply search params to datatable
                                            Usertable.column(i).search(val ? val : '', false, false);
                                        });
                                        Usertable.table().draw();
                                    });

                                    break;

                            }
                            if (column.title() !== 'actions') {
                                $(input).appendTo($('<th>').appendTo(rowFilter));
                            }

                        });

                        // hide search column for responsive table
                        //var hideSearchColumnResponsive = function () {
                        //    thisTable.api().columns().every(function () {
                        //        var column = this
                        //        if (column.responsiveHidden()) {
                        //            $(rowFilter).find('th').eq(column.index()).show();
                        //        } else {
                        //            $(rowFilter).find('th').eq(column.index()).hide();
                        //        }
                        //    })
                        //};

                        //// init on datatable load
                        //hideSearchColumnResponsive();
                        //// recheck on window resize
                        //window.onresize = hideSearchColumnResponsive;
                    },
                    columnDefs: [
                        {
                            targets: -1,
                            title: 'Actions',
                            orderable: false,
                            render: function (data, type, full, meta) {
                                var relid = full.Relid;
                                var lid = full.userid;
                                var lName = full.Username;
                                var lpath = full.ExePath;
                              
                                return " <a href='#' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='View'  data-id='" + lid + "'data-name='" + lName + "'  data-app='" + lpath + "' onclick=EditUserModel(" + relid + ",$(this))><i class='la la-edit' ></i></a> " +
                                    "<a href='#' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='Delete' onclick='deletUser(" + relid + ")' ><i class='la la-trash la-xs'></i></a>";
                            },
                        }
                    ],
                });
            }
      
            return {

                //main function to initiate the module
                init: function () {
                    initTable1();
                },
            };
        }();
        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
            $($.fn.dataTable.tables(true)).DataTable()
                .columns.adjust();
        });
                jQuery(document).ready(function() {
                    UserTable.init();
        });
        $(document).ready(function () {

            $("#frmuserexepath").validate({
                rules: {

                    path: {
                        required: true,
                    },
                    //DrpUser: {
                    //    required: true
                    //}
                },
            });

            //$('#DrpUser').on('changed.bs.DrpUser', function () {
            //    validator.element($(this)); // validate element
            //});
        });
   
        function AddUser() {
            $("#AddUser").modal("show");
            $("#requiredname").css("display", "none");
            $("#hdnrelid").val("");
            $("#path").val("");
            $("#DrpUser").val("");
            $("#DrpUser").select2();
            $("#DrpUser").prop("disabled", false);
            $("#DrpUser").attr("disabled", false);
            var validator = $("#frmuserexepath").validate();
            validator.resetForm();
        }
        function AddUserSave() {
            debugger
            $("#requiredname").css("display", "none");
            if (!$("#frmuserexepath").valid()) {
                if ($("#DrpUser").val() == "" || $("#DrpUser").val() == 0 || $("#DrpUser").val() == "0") {
                    $("#requiredname").css("display", "block");
                }
                //var validationobj = $("#DrpUser").find("#DrpUser-error");
                //if (validationobj.length > 0) {
                //    $("#DrpUser").find("#DrpUser-error").remove();
                //    validationHTML = "<div id='DrpUser-error' class='error invalid-feedback ' >This field is required.</div>";
                //    $("#DrpUser").append(validationHTML);
                //}
                    
                
                return false;

            }
            
            var relid = $("#hdnrelid").val();
            if (relid == "" || relid == null) {
                relid = 0;
            }
            var username = $("#DrpUser").val();
            
            var path = $("#path").val().replace(/\\/g,"\\\\");
            $.ajax({
                url: "/Accounts/AddUserExePath",
                data: '{"userid":"' + username + '","relationid":"' + relid + '","exepath":"' + path + '"}',
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result == "success") {
                        swal.fire({
                            "title": "",
                            "text": "Successfully submitted User.",
                            "icon": "success",
                            "onClose": function (e) {
                                console.log('on close event fired!');
                            }
                        });
                        Usertable.table().draw();
                        $("#AddUser").modal("hide");
                    }
                    else {
                        swal.fire({
                            "title": "",
                            "text": "User has the exe path already.",
                            "icon": "error",
                            "onClose": function (e) {
                                console.log('on close event fired!');
                            }
                        });
                    }
                },
            });
        }
        function EditUserModel(Id, editObj) {
            debugger
            $("#AddUser").modal("show");
            var validator = $("#frmuserexepath").validate();
            validator.resetForm();
            $("#DrpUser").prop("disabled", "true");
            $("#requiredname").css("display", "none");
            var luserid = Id;
            $("#hdnrelid").val(luserid);
            var loginid = $(editObj).attr("data-id");
            var Name = $(editObj).attr("data-name");
            var path = $(editObj).attr("data-app");
            $("#path").val(path);
            $("#DrpUser").val(loginid);
            $("#DrpUser").html("");
            $("#DrpUser").select2();
            $.ajax({
                url: "/Accounts/GetUserName",
               // data: '{"ApplicationId":"' + AppId + '"}',
                type: "GET",
                async: false,
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    
                    debugger
                    var lTempApplication = "";
                    var optionString = "<optgroup>";;

                    for (i = 0; i < result.length; i++) {
                        //if (result[i].Application != lTempApplication && lTempApplication != "") {
                        //    optionString = optionString + "</optgroup>";                           
                        //}
                        //if (result[i].Application != lTempApplication) {
                        //    optionString = optionString + "<optgroup label='Applications:" + result[i].Application + "'>";
                        //    //lTempApplication = result[i].Application;
                        //}
                        var optionValue = result[i].Value;
                        var optionText = result[i].Text;
                        optionString = optionString + " <option value='" + optionValue + "'>" + optionText + "</option>";


                    }
                    optionString = optionString + "</optgroup>";

                    $("#DrpUser").append($(optionString));
                    $("#DrpUser").select2();
                    // $("#DrpTestSuite").innerHTML = ldrpHtml;

                },
            });
            $("#DrpUser").val(loginid);
            $("#DrpUser").select2();
            //var validat = $("#frmuserexepath").validate();
            //validat.resetForm();
        }
        function deletUser(Id) {
            swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!'
            }).then(function (result) {
                if (result.value == true) {

                    $.ajax({
                        url: "/Accounts/DeleteUserRelExePath",
                        data: JSON.stringify({ "Userid": Id }),
                        type: "POST",
                        async: false,
                        contentType: "application/json;charset=utf-8",
                        dataType: "json",
                        success: function (result) {
                            if (result) {

                                swal.fire(
                                    'Deleted!',
                                    'User Mapping  is deleted',
                                    'success'
                                )
                            }
                            Usertable.table().draw();
                        },

                        error: function (x, y, z) {
                            swal.fire(
                                'Error while deleting',
                                'error'

                            )

                        }
                    });
                }

            });
        }
    </script>
</head>
<body>
    <div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title" style="color:#1582ab">
                        User List with Exepath
                    </h3>
                </div>
                <div class="kt-portlet__head-toolbar">
                    <div class="kt-portlet__head-wrapper">
                        <div class="kt-portlet__head-actions">

                            &nbsp;
                            <a href="#" onclick="AddUser()" class="btn btn-brand btn-elevate btn-icon-sm">
                                <i class="la la-plus"></i>
                                New
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <div class="kt-portlet__body">
                <table class="table table-striped- table-bordered table-hover table-checkable " id="ExeTable">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Execution path</th>
                            <th style="color: #1c6081;background-color: #e9f5ff;font-weight: bold;">Actions</th>
                            @*<th>ApplicationId</th>
        <th>TestSuiteId</th>*@
                            @* <th style="color: #1c6081;background-color: #e9f5ff;font-weight: bold;">Actions</th>*@
                        </tr>
                    </thead>


                </table>
            </div>
        </div>
    </div>
    <div class="modal fade" id="AddUser" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Add/Edit User</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="frmuserexepath">
                        <input type="hidden" id="hdnrelid" name="hdnrelid" />
                        <input type="hidden" id="hdnuserid" name="hdnuserid" />
                        <div class="form-group">
                            <label class="col-form-label col-lg-3 col-sm-12">Name <span style="color:red">&nbsp;*</span></label>
                            <div class=" col-lg-12 col-md-12 col-sm-12" id="clsuser">
                                <select class="form-control" id="DrpUser" name="DrpUser" style="width: 749px;">
                                    <option value="0"></option>
                                    @{var lAppList = ViewBag.username as IEnumerable<SelectListItem>;
                                        <optgroup label="Applications">
                                            @foreach (var item in lAppList)
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        </optgroup>
                                    }
                                </select>
                            </div>
                            <label id="requiredname" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                                This is required field
                            </label>
                        </div>
                        <div class="form-group">
                            <label for="message-text" class="form-control-label">Execution Path<span style="color:red">&nbsp;*</span></label>
                            <input type="text" class="form-control" id="path" name="path" maxlength="128" />
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="addedittestsuite" class="btn btn-outline-brand btn-elevate btn-pill" onclick="AddUserSave()">Save</button>
                    <button type="button" class="btn btn-outline-brand btn-elevate btn-pill" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
<script>

</script>
