<style>
    #clspegwindow span {
        height: 31px;
    }

    #saveaspegdiv span {
        height: 31px;
    }

    .Column {
        display: table-cell;
    }

    #clsappobject span {
        width: 182px;
        height: 37px;
    }

    #appid {
        margin-left: 10px;
    }

    #convertobjectid {
        margin-left: 20px;
    }

    #convertappid {
        margin-left: 20px;
    }
</style>
@using MARS_Repository.ViewModel
@{
    var PrivilegeList = Session["PrivilegeList"] as List<PrivilegeViewModel>;
}
<div class="kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor" id="kt_content">
    <div class="kt-subheader   kt-grid__item" id="kt_subheader" style="left: @ViewBag.width;">
        <div class="kt-container  kt-container--fluid ">
            <div class="kt-subheader__main">

                <span class="kt-subheader__separator kt-hidden"></span>
                <div class="kt-subheader__breadcrumbs">
                    <a href="#" class="kt-subheader__breadcrumbs-home"><i class="flaticon2-settings" style="color:#1c6081"></i></a>
                    <a href="#" class="kt-subheader__breadcrumbs-link" style="color:#1c6081">
                        Object
                    </a>
                    <i class="fa fa-angle-double-right" style="color:#1c6081"></i>
                    <a href="#" class="kt-subheader__breadcrumbs-link" style="color:#1c6081">
                        &nbsp;
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title" style="color:#1582ab;margin-bottom: 0px;margin-right: 0px;margin-top: 59px;">
                        List Of Objects
                    </h3>

                    <div class="modal-body">

                        <div class="form-group row">
                            <input type="hidden" id="hiddenobjectid" />

                            <label class="Column">Application </label>
                            <div class="Column" id="clsappobject">
                                <select class="form-control kt-select2" id="appid" name="appid" style="width: 182px;" onchange="loadData()">

                                    @{var lAppList = ViewBag.applist as IEnumerable<SelectListItem>;
                                        <optgroup label="Applications">
                                            <option value="0" style="visibility:hidden"></option>
                                            @foreach (var item in lAppList)
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        </optgroup>
                                    }
                                </select>
                            </div>
                            @if (PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Convert To App Object"))
                            {
                                <div class="Column">
                                    <button type="button" id="convertobjectid" class="btn btn-outline-brand btn-elevate btn-pill Column convert_app" onclick="ConvertObject()">Convert To</button>
                                </div>
                            }
                                <div class="Column">
                                    <select class="form-control kt-select2" id="convertappid" name="convertappid" onchange="emptyObjectArray()" style="width: 182px;">
                                        @{var AppList = ViewBag.applist as IEnumerable<SelectListItem>;
                                            <optgroup label="Applications">
                                                <option value="0" style="visibility:hidden"></option>
                                                @foreach (var item in AppList)
                                                {
                                                    <option value="@item.Value">@item.Text</option>
                                                }
                                            </optgroup>
                                        }
                                    </select>
                                </div>
                            </div>

                    </div>
                </div>
            </div>
            <div class="kt-portlet__head-toolbar">

                <div class="kt-portlet__head-wrapper">
                    <div class="kt-portlet__head-actions" style="float:right">
                        &nbsp;
                        @if (PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Add Object"))
                        {
                            <a href="#" onclick="addObject()" class="btn btn-brand btn-elevate btn-icon-sm">
                                <i class="la la-plus"></i>
                                New Object
                            </a>
                        }
                        @if (PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Add Pegwindow Object"))
                        {
                            <a href="#" onclick="addPegObject()" class="btn btn-brand btn-elevate btn-icon-sm">
                                <i class="la la-plus"></i>
                                Insert Pegwindow Object
                            </a>
                        }
                        </div>
                </div>
            </div>
        </div>

        <div id="LoadObjecttbl">
            @Html.Partial("LoadData")
        </div>

    </div>
</div>

<div class="modal fade" id="AddEditObject" tabindex="-1" role="dialog" aria-labelledby="oexampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="oexampleModalLabel">Object</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="frmObject">
                    <input type="hidden" id="hdnobjectid" name="hdnobjectid" />
                    <div class="form-group">
                        <label for="recipient-name" class="form-control-label">Object Name<span style="color:red">&nbsp;*</span></label>
                        @*<input type="text" class="form-control" id="objecthappyname" name="objecthappyname" required onchange="CheckNameExist()" maxlength="256">*@
                        <input type="text" class="form-control" id="objecthappyname" name="objecthappyname" required maxlength="256">
                        <label id="existobjectname" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                            Object Name already exist.
                        </label>

                    </div>
                    <div class="form-group">
                        <label class="col-form-label">Object Type <span style="color:red">&nbsp;*</span></label>
                        <div id="clstype">
                            <select class="form-control kt-select2" id="drpObjecttype" name="drpObjecttype" required>
                                @{var typelist = ViewBag.typelist as IEnumerable<SelectListItem>;
                                    <optgroup label="Applications">
                                        <option value="0" style="visibility:hidden"></option>
                                        @foreach (var item in typelist)
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    </optgroup>
                                }

                            </select>
                            <label id="requiredtype" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                                This field is required
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-form-label">Application <span style="color:red">&nbsp;*</span></label>
                        <div id="clsapp">
                            <select class="form-control" id="app" name="app" @*style="width: 749px;"*@ onchange="loadPegwindow()" required>
                                @{var lAppList1 = ViewBag.applist as IEnumerable<SelectListItem>;
                                    <optgroup label="Applications">
                                        <option value="0" style="visibility:hidden"></option>
                                        @foreach (var item in lAppList1)
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    </optgroup>
                                }

                            </select>
                            <label id="requiredapp" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                                This field is required
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-form-label">Pegwindow/Parent <span style="color:red">&nbsp;*</span></label>
                        <div id="clspegwindow">
                            <select class="form-control kt-select2" id="DrpPeg" name="DrpPeg" @*style="width: 624px;"*@></select>
                        </div>
                        <label id="requiredparent" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                            This field is required
                        </label>
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="form-control-label">Internal Access<span style="color:red">&nbsp;*</span></label>
                        <textarea class="form-control" id="quickaccess" name="quickaccess" maxlength="512"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="form-control-label">Description</label>
                        <textarea class="form-control" id="desc" name="desc" maxlength="250"></textarea>
                    </div>
                    <div class="kt-checkbox-list">
                        <label class="kt-checkbox"><input type="checkbox" id="autocheckerror" />Is autoCheck Error?<span></span></label>
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" id="saveobject" class="btn btn-outline-brand btn-elevate btn-pill" onclick="saveObject()">Save</button>

                <button type="button" class="btn btn-outline-brand btn-elevate btn-pill" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="AddPegwindowObject" tabindex="-1" role="dialog" aria-labelledby="oexampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="oexampleModalLabel">Object</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="frmpegobject">
                    <input type="hidden" id="hdnobjectid" name="hdnobjectid" />
                    <div class="form-group">
                        <label for="recipient-name" class="form-control-label">Object Name<span style="color:red">&nbsp;*</span></label>
                        <input type="text" class="form-control" id="pegobjecthappyname" name="pegobjecthappyname" required maxlength="256">
                        <label id="existobjectname" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                            Object Name already exist.
                        </label>
                    </div>
                    <div class="form-group">
                        <label class="form-control-label">Application <span style="color:red">&nbsp;*</span></label>
                        <div id="clsapp">
                            <select class="form-control" id="pegapp" name="pegapp" @*style="width: 749px;"*@ required>
                                @{var peglAppList = ViewBag.applist as IEnumerable<SelectListItem>;
                                    <optgroup label="Applications">
                                        <option value="0" style="visibility:hidden"></option>
                                        @foreach (var item in peglAppList)
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    </optgroup>
                                }
                            </select>
                            <label id="requiredapp" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                                This field is required
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="message-text" class="form-control-label">Internal Access<span style="color:red">&nbsp;*</span></label>
                        <textarea class="form-control" id="pegquickaccess" name="pegquickaccess" maxlength="512"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="form-control-label">Description</label>
                        <textarea class="form-control" id="pegdesc" name="pegdesc" maxlength="250"></textarea>
                    </div>
                    <div class="kt-checkbox-list">
                        <label class="kt-checkbox"><input type="checkbox" id="pegautocheckerror" />Is autoCheck Error?<span></span></label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">

                <button type="button" id="peginsert" class="btn btn-outline-brand btn-elevate btn-pill" onclick="savePegObject()">Insert Peg</button>
                <button type="button" class="btn btn-outline-brand btn-elevate btn-pill" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="saveAsObject" tabindex="-1" role="dialog" aria-labelledby="oexampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="oexampleModalLabel">Object</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="frmsaveasobject">
                    <input type="hidden" id="hdnobjectid" name="hdnobjectid" />
                    <div class="form-group">
                        <label for="recipient-name" class="form-control-label">Object Name<span style="color:red">&nbsp;*</span></label>
                        <input type="text" class="form-control" id="saveasobjecthappyname" name="saveasobjecthappyname" required maxlength="256">
                        @*<input type="text" class="form-control" id="saveasobjecthappyname" name="saveasobjecthappyname" required onchange="CheckNameExist()" maxlength="256">*@
                        <label id="existobjectname" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                            Object Name already exist.
                        </label>

                    </div>
                    <div class="form-group">
                        <label class="col-form-label">Object Type <span style="color:red">&nbsp;*</span></label>
                        <div id="clstype11">
                            <select class="form-control kt-select2" id="saveasdrpObjecttype" name="saveasdrpObjecttype" required>
                                @{var saveastypelist = ViewBag.typelist as IEnumerable<SelectListItem>;
                                    <optgroup label="Applications">
                                        <option value="0" style="visibility:hidden"></option>
                                        @foreach (var item in saveastypelist)
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    </optgroup>
                                }

                            </select>
                            <label id="saveasrequiredtype" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                                This field is required
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-form-label">Application <span style="color:red">&nbsp;*</span></label>
                        <div id="clsapp">
                            <select class="form-control" id="saveasapp" name="saveasapp" @*style="width: 749px;"*@ onchange="loadPegwindow()" required>
                                @{var saveaslAppList = ViewBag.applist as IEnumerable<SelectListItem>;
                                    <optgroup label="Applications">
                                        <option value="0" style="visibility:hidden"></option>
                                        @foreach (var item in saveaslAppList)
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    </optgroup>
                                }

                            </select>
                            <label id="saveasrequiredapp" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                                This field is required
                            </label>
                        </div>
                    </div>
                    <div class="form-group" id="saveaspegdiv">
                        <label class="col-form-label2">Pegwindow/Parent <span style="color:red">&nbsp;*</span></label>
                        <div id="clssaveaspegwindow">
                            <select class="form-control kt-select2" id="saveasDrpPeg" name="saveasDrpPeg" style="width: 749px;" required></select>
                        </div>
                        <label id="saveasrequiredDrpPeg" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                            This field is required
                        </label>
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="form-control-label">Internal Access<span style="color:red">&nbsp;*</span></label>
                        <textarea class="form-control" id="saveasquickaccess" name="saveasquickaccess" maxlength="512"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="form-control-label">Description</label>
                        <textarea class="form-control" id="saveasdesc" name="saveasdesc" maxlength="250"></textarea>
                    </div>
                    <div class="kt-checkbox-list">
                        <label class="kt-checkbox"><input type="checkbox" id="saveasautocheckerror" />Is autoCheck Error?<span></span></label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" id="saveasobject" class="btn btn-outline-brand btn-elevate btn-pill" onclick="saveAsObject()">Save As</button>

                <button type="button" class="btn btn-outline-brand btn-elevate btn-pill" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
<script>
    var idarrays = [];
    function ConvertObject() {
        var appid = $("#appid option:selected").val();
        var convertappid = $("#convertappid option:selected").val();
        var appname = $("#convertappid option:selected").text();
        if (appid == convertappid) {
            swal.fire({
                "title": "",
                "text": "Source and Target application names can not be the same",
                "icon": "error",
                "onClose": function (e) {
                    console.log('on close event fired!');
                }
            });

            return false;
        }
        if (convertappid == "" || convertappid == "0") {
            swal.fire({
                "title": "",
                "text": "Please select the target application",
                "icon": "error",
                "onClose": function (e) {
                    console.log('on close event fired!');
                }
            });
            $("#hiddenobjectid").val("");
            ojectidarray = [];
            loadData();
            return false;
        }
        if (ojectidarray.length > 0) {
            startloader();
            $.ajax({
                url: "/Object/CopyObjects",
                data: JSON.stringify({ model: ojectidarray, fromid: appid, toid: convertappid }),

                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.status == 1) {
                        RefreshCacheForObject();
                        if (result.message == "success") {
                            swal.fire({
                                "title": "",
                                "text": "Objects copied successfully to: " + appname,
                                "icon": "success",
                                "onClose": function (e) {
                                    console.log('on close event fired!');
                                }
                            });
                            stoploader();
                            $("#hiddenobjectid").val("");
                            ojectidarray = [];
                            loadData();
                        }
                        else if (result.status == 0) {
                            swal.fire({
                                "title": "",
                                "text": result.message,
                                "icon": "error",
                                "onClose": function (e) {
                                    console.log('on close event fired!');
                                }
                            });
                            stoploader();
                            $("#hiddenobjectid").val("");
                            ojectidarray = [];
                            loadData();
                        }
                    }
                }
            });
        }
        else {
            if ($("#selectall").is(":checked")) {
                startloader();
                $.ajax({
                    url: "/Object/CheckDuplicateObjectList",
                    data: JSON.stringify({ copyfromappid: appid, copytoappid: convertappid }),

                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result.status == 1) {
                            if (result.data.length > 0) {
                                var resultstring = "";
                                for (i = 0; i < result.data.length; i++) {
                                    resultstring = resultstring + result.data[i] + " , ";
                                }
                                swal.fire({
                                    title: 'Skip these existing objects and copy rest of them?,',
                                    text: "Following objects exists in the target application[" + appname + "]  " + resultstring,
                                    icon: 'warning',
                                    showCancelButton: true,
                                    confirmButtonText: 'Yes,copy!!'
                                }).then(function (result) {
                                    if (result.value == true) {
                                        $.ajax({
                                            url: "/Object/CopyAllObjects",
                                            data: JSON.stringify({ copyfromappid: appid, copytoappid: convertappid }),

                                            type: "POST",
                                            contentType: "application/json;charset=utf-8",
                                            dataType: "json",
                                            success: function (result) {
                                                stoploader();
                                                if (result.status == 1) {
                                                    if (result.data == "success") {
                                                        RefreshCacheForObject();
                                                        swal.fire({
                                                            "title": "",
                                                            "text": "Objects copied successfully to: " + appname,
                                                            "icon": "success",
                                                            "onClose": function (e) {
                                                                console.log('on close event fired!');
                                                            }
                                                        });
                                                        stoploader();
                                                        $("#hiddenobjectid").val("");
                                                        ojectidarray = [];
                                                        loadData();
                                                    }
                                                }
                                                else if (result.status == 0) {
                                                    swal.fire({
                                                        "title": "",
                                                        "text": result.message,
                                                        "icon": "error",
                                                        "onClose": function (e) {
                                                            console.log('on close event fired!');
                                                        }
                                                    });
                                                    stoploader();
                                                    $("#hiddenobjectid").val("");
                                                    ojectidarray = [];
                                                    loadData();
                                                }
                                            }
                                        });
                                    }
                                });
                            }
                            else {
                                $.ajax({
                                    url: "/Object/CopyAllObjects",
                                    data: JSON.stringify({ copyfromappid: appid, copytoappid: convertappid }),

                                    type: "POST",
                                    contentType: "application/json;charset=utf-8",
                                    dataType: "json",
                                    success: function (result) {
                                        stoploader();
                                        if (result.status == 1) {
                                            if (result.data == "success") {
                                                RefreshCacheForObject();
                                                swal.fire({
                                                    "title": "",
                                                    "text": "Objects copied successfully to: " + appname,
                                                    "icon": "success",
                                                    "onClose": function (e) {
                                                        console.log('on close event fired!');
                                                    }
                                                });
                                                $("#hiddenobjectid").val("");
                                                ojectidarray = [];
                                                loadData();
                                            }
                                        }
                                        else if (result.status == 0) {
                                            swal.fire({
                                                "title": "",
                                                "text": result.message,
                                                "icon": "error",
                                                "onClose": function (e) {
                                                    console.log('on close event fired!');
                                                }
                                            });
                                            stoploader();
                                            $("#hiddenobjectid").val("");
                                            ojectidarray = [];
                                            loadData();
                                        }
                                    }
                                });
                            }
                        }
                        else if (result.status == 0) {
                            swal.fire({
                                "title": "",
                                "text": result.message,
                                "icon": "error",
                                "onClose": function (e) {
                                    console.log('on close event fired!');
                                }
                            });
                        }
                    }
                });
            }
            else {
                swal.fire({
                    "title": "",
                    "text": "Please select objects to be converted",
                    "icon": "warning",
                    "onClose": function (e) {
                        console.log('on close event fired!');
                    }
                });
                $("#hiddenobjectid").val("");
            }
        }
    }
    var table;
    function loadData() {
        $.ajax({
            url: "/Object/LoadData",
            data: { appid: $("#appid").val() },
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "html",
            success: function (result) {
                $("#LoadObjecttbl").html("");
                $("#LoadObjecttbl").html(result);
                $("#hiddenobjectid").val("");
                $('#selectall').prop("checked", false);
                if (!$("#selectall").is(":checked")) {
                    $('td input:checkbox').not(this).prop('checked', false);
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    $(document).ready(function () {

        $("#frmObject").validate({
            rules: {
                objecthappyname: {
                    required: true
                },

                app: {
                    required: true,
                },
                drpObjecttype: {
                    required: true
                },
                //DrpPeg: {
                //    required: true
                //},
                quickaccess: {
                    required: true
                }
            },


        });
        $("#frmpegobject").validate({
            rules: {
                pegobjecthappyname: {
                    required: true
                },

                pegapp: {
                    required: true,
                },

                pegquickaccess: {
                    required: true
                }
            },


        });
        $("#frmsaveasobject").validate({
            rules: {
                saveasobjecthappyname: {
                    required: true
                },

                saveasapp: {
                    required: true,
                },
                saveasdrpObjecttype: {
                    required: true
                },
                saveasDrpPeg: {
                    required: true
                },
                saveasquickaccess: {
                    required: true
                }
            },


        });
    });
    var jsonobject = "[";
    var ojectidarray = [];
    var cobjectarray = [];

    function checkConvertingObjectExists(obj) {
        var appid = $("#appid").val();
        var convertappid = $("#convertappid").val();

        var obid = $(obj).attr("data-objid");
        if ($(obj).is(":checked")) {
            var objectname = $(obj).attr("data-objname");
            var parentobj = $(obj).attr("data-parentobj");
            var objectid = $(obj).attr("data-objid");
            var objecttype = $(obj).attr("data-objecttypeid");
            var Quickaccess = $(obj).attr("data-quickaccessid");
            var description = $(obj).attr("data-descriptionid");
            var EnumType = $(obj).attr("data-enumtypeid");
            var autocheckerror = $(obj).attr("data-autocheckerrorid");
            if (objectname != "" && parentobj != "") {
                if (convertappid == "" || convertappid == "0") {
                    swal.fire({
                        "title": "",
                        "text": "Please select the target application",
                        "icon": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                    $(obj).prop("checked", false);
                    return false;
                }
                $.ajax({
                    url: "/Object/CheckConvertingObjectExists",
                    data: JSON.stringify({ "objectname": objectname, "appid": convertappid, "parentobj": parentobj, "objecttype": objecttype }),
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result.status == 1) {
                            if (result.data == "duplicateerror") {
                                swal.fire({
                                    "title": "",
                                    "text": result.message,
                                    "icon": "error",
                                    "onClose": function (e) {
                                        console.log('on close event fired!');
                                    }
                                });
                                $(obj).prop("checked", false);
                            }
                            else {

                                ojectidarray.push($(obj).attr("data-objid"));
                                var a = ojectidarray.join(',');
                                $("#hiddenobjectid").val(a);
                            }
                        }
                        else if (result.status == 0) {
                            swal.fire({
                                "title": "",
                                "text": result.message,
                                "icon": "error",
                                "onClose": function (e) {
                                    console.log('on close event fired!');
                                }
                            });
                        }
                    }
                });
            }
        }
        else {
            ojectidarray = $("#hiddenobjectid").val().split(',');
            $.each(ojectidarray, function (index, value) {
                if (value == obid) {
                    ojectidarray.splice(index, 1);
                }
            });
            var b = ojectidarray.join(',');
            $("#hiddenobjectid").val(b);
            if ($("#selectall").is(":checked")) {
                $("#selectall").prop("checked", false);
            }
        }
    }
    function emptyObjectArray() {
        $("#hiddenobjectid").val("");
        cobjectarray = [];
        ojectidarray = [];
        $('input[type=checkbox]:checked').each(function (index) {

            $('input[type=checkbox]:checked').prop("checked", false);
        });

    }
    function addPegObject() {
        var validator = $("#frmpegobject").validate();
        validator.resetForm();
        $("#AddPegwindowObject").modal("show");
        $('.modal-dialog').draggable({
            handle: ".modal-header"
        });

        $("#pegobjecthappyname").val("");
        $("#pegapp").val("");
        $("#pegquickaccess").val("");
        $("#pegdesc").val("");
        $("#hdnobjectid").val("");
        $("#pegautocheckerror").val("");
    }
    function addObject() {
        var validator = $("#frmObject").validate();
        validator.resetForm();

        $("#AddEditObject").modal("show");
        $('.modal-dialog').draggable({
            handle: ".modal-header"
        });

        $("#app").prop("disabled", false);
        $("#objecthappyname").prop("disabled", false);
        $("#DrpPeg").prop("disabled", false);
        $("#DrpPeg").attr("disabled", false);
        $("#drpObjecttype").prop("disabled", false);
        $("#drpObjecttype").attr("disabled", false);
        $("#requiredapp").css("display", "none");
        $("#requiredtype").css("display", "none");
        $("#requiredparent").css("display", "none");
        $("#objecthappyname").val("");

        $("#quickaccess").val("");
        $("#desc").val("");

        $("#app").val("");
        $("#DrpPeg").val("");

        $("#DrpPeg").text("");
        $("#hdnobjectid").val("");
        $("#drpObjecttype").val("");
        $("#autocheckerror").val("");
        $("#autocheckerror").attr("checked", false);

    }
    function loadPegwindow() {
        var appid = $("#app").val();
        $("#DrpPeg").html("");
        $("#DrpPeg").select2();
        $.ajax({
            url: "/Object/LoadPegwindow",
            data: '{"ApplicationId":"' + appid + '"}',
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            async: false,
            success: function (result) {
                if (result.status == 1) {
                    var optionString = "<optgroup>";
                    optionString = optionString + " <option value=-1></option>";
                    for (i = 0; i < result.data.length; i++) {

                        var optionValue = result.data[i];
                        var optionText = result.data[i];

                        optionString = optionString + " <option value='" + optionValue + "'>" + optionText + "</option>";
                    }
                    optionString = optionString + "</optgroup>";
                    $("#DrpPeg").append($(optionString));
                    $("#DrpPeg").select2();
                }
                else if (result.status == 0) {
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
    function EditPopupShow(id, obj) {
        $("#AddEditObject").modal("show");
        $('.modal-dialog').draggable({
            handle: ".modal-header"
        });
        var validator = $("#frmObject").validate();
        validator.resetForm();
        $("#DrpPeg").val("");
        $("#requiredapp").css("display", "none");
        $("#requiredtype").css("display", "none");
        $("#requiredparent").css("display", "none");
        var objectname = $(obj).attr("data-name");
        var objecttype = $(obj).attr("data-objecttype");
        var app = $(obj).attr("data-app");
        var quickaccess = $(obj).attr("data-quickaccess");
        var parent = $(obj).attr("data-parent");
        var autocheckerror = $(obj).attr("data-autocheckerrorid");
        if (autocheckerror == "1")
            $("#autocheckerror").attr('checked', true);
        else
            $("#autocheckerror").attr('checked', false);
        var description = $(obj).attr("data-description");
        description = description == "null" ? "" : description;
        $("#objecthappyname").val(objectname);
        $("select#drpObjecttype option").filter(function () {
            return $(this).text() == objecttype;
        }).prop('selected', true);
        var max_length = 0;

        $("#app").val(app);
        $("#quickaccess").val(quickaccess);
        $("#desc").val(description);
        $("#DrpPeg").html("");
        $("#DrpPeg").select2();
        $("#hdnobjectid").val(id);
        $("#DrpPeg").attr("disabled", true);
        $("#app").prop("disabled", true);
        $("#objecthappyname").prop("disabled", true);
        $("#drpObjecttype").prop("disabled", true);

        $.ajax({
            url: "/Object/LoadPegwindow",
            data: '{"ApplicationId":"' + app + '"}',
            type: "POST",
            async: false,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.status == 1) {
                    var optionString = "<optgroup>";
                    optionString = optionString + " <option value=-1></option>";
                    for (i = 0; i < result.data.length; i++) {

                        var optionValue = result.data[i];
                        var optionText = result.data[i];

                        optionString = optionString + " <option value='" + optionValue + "'>" + optionText + "</option>";
                    }
                    optionString = optionString + "</optgroup>";
                    $("#DrpPeg").append($(optionString));
                    $("#DrpPeg").select2();
                }
                else if (result.status == 0) {
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }

        });
        $("#DrpPeg option:contains(" + parent + ")").filter(function () {
            return $(this).text() === parent ? true : false;
        }).attr('selected', true);
      //  $("#DrpPeg option:contains(" + parent + ")").attr('selected', true);
        $("#DrpPeg").select2();

    }
    function saveObject() {
        var flag = false;
        if (!$("#frmObject").valid()) {
            flag = true;
        }
        $("#saveobject").attr("disabled", true);
        var lcheck = 0;
        var objectid = $("#hdnobjectid").val();
        if (objectid == "" || objectid == "") {
            objectid = 0;
        }
        var objectname = $("#objecthappyname").val();
        var Objecttype = $("#drpObjecttype").val();

        var appid = $("#app").val();
        var Pegwindow = $("#DrpPeg option:selected");
        Pegwindow = Pegwindow.text();

        if (Objecttype == "0") {
            $("#requiredtype").css("display", "block");
            flag = true;
        }
        if (appid == "0") {
            $("#requiredapp").css("display", "block");
            flag = true;

        }
        if (Pegwindow == "") {
            $("#requiredparent").css("display", "block");
            flag = true;
        }
        if (flag) {
            $("#saveobject").attr("disabled", false);
            return false;
        }

        var quickaccess = $("#quickaccess").val();
        var desc = $("#desc").val();

        if ($("#autocheckerror").is(":checked")) {
            lcheck = 1;
        }
        var ObjectModel = {};
        ObjectModel.ObjectId = objectid;
        ObjectModel.ObjectName = objectname;
        ObjectModel.ObjectType = Objecttype;
        ObjectModel.applicationid = appid;
        ObjectModel.ObjectParent = Pegwindow;
        ObjectModel.Quickaccess = quickaccess;
        ObjectModel.description = desc;
        ObjectModel.autocheckerror = lcheck;
        $.ajax({
            url: "/Object/AddEditObject",
            data: JSON.stringify(ObjectModel),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.status == 1) {
                    RefreshCacheForObject();
                    $("#AddEditObject").modal("hide");
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "success",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                    $("#saveobject").attr("disabled", false);
                    table.table().draw();
                }
                else if (result.status == 0) {
                    $("#AddEditObject").modal("hide");
                    $("#saveobject").attr("disabled", false);
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
    function savePegObject() {
        $("#peginsert").attr("disabled", true);
        if (!$("#frmpegobject").valid()) {
            $("#peginsert").attr("disabled", false);
            return false;


        }
        var lcheck = 0;
        var objectid = $("#hdnobjectid").val();
        if (objectid == "" || objectid == "") {
            objectid = 0;
        }
        var objectname = $("#pegobjecthappyname").val();
        var Objecttype = 1;

        var appid = $("#pegapp").val();
        var Pegwindow = objectname;
        var quickaccess = $("#pegquickaccess").val();
        var desc = $("#pegdesc").val();
        if ($("#pegautocheckerror").is(":checked")) {
            lcheck = 1;
        }
        var ObjectModel = {};
        ObjectModel.ObjectId = objectid;
        ObjectModel.ObjectName = objectname;
        ObjectModel.ObjectType = Objecttype;
        ObjectModel.applicationid = appid;
        ObjectModel.ObjectParent = Pegwindow;
        ObjectModel.Quickaccess = quickaccess;
        ObjectModel.description = desc;
        ObjectModel.autocheckerror = lcheck;
        $.ajax({
            url: "/Object/AddEditObject",
            data: JSON.stringify(ObjectModel),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.status == 1) {
                    RefreshCacheForObject();
                    $("#AddPegwindowObject").modal("hide");
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "success",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                    $("#peginsert").attr("disabled", false);
                    table.table().draw();
                }
                else if (result.status == 0) {
                    $("#AddPegwindowObject").modal("hide");
                    $("#peginsert").attr("disabled", false);
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
    function deleteObject(id, obj) {
        swal.fire({
            title: 'Please confirm.',
            text: "This action can not be undone.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!'
        }).then(function (result) {
            if (result.value == true) {
                debugger;
                var appid = $(obj).attr("data-app");
                var parent = $(obj).attr("data-parent");
                $.ajax({
                    url: "/Object/DeleteObject",
                    data: JSON.stringify({ "objectid": id, "appid": appid, "parent": parent }),
                    type: "POST",
                    async: false,
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result.status == 1) {
                            if (result.data == "success") {
                                RefreshCacheForObject();
                                swal.fire(
                                    'Deleted!',
                                    result.message,
                                    'success'
                                )
                                table.table().draw();
                            }
                            else if (result.data == "Pegwindow object") {
                                swal.fire({
                                    "title": "",
                                    "text": result.message,
                                    "icon": "error",
                                    "onClose": function (e) {
                                        console.log('on close event fired!');
                                    }
                                });
                            }
                            else {
                                if (result.data.length > 0) {
                                    var resultstring = "";
                                    for (i = 0; i < result.data.length; i++) {

                                        resultstring = resultstring + result.data[i] + " , ";
                                    }
                                    swal.fire(
                                        'Deleted!',
                                        'Following Test Cases contain this object. If you would like to delete this object, please remove references to it from all Test Cases. ' + "<br>" + resultstring,
                                        'error'
                                    )
                                }
                            }
                        }
                        else if (result.status == 0) {
                            swal.fire({
                                "title": "",
                                "text": result.message,
                                "icon": "error",
                                "onClose": function (e) {
                                    console.log('on close event fired!');
                                }
                            });
                        }
                    },
                    error: function (x, y, z) {
                        swal.fire(
                            'Error while deleting',
                            'error'
                        )

                    }
                });
            }

        });
    }
    function saveAsPopupShow(id, obj) {
        var validator = $("#frmsaveasobject").validate();
        validator.resetForm();
        $("#saveAsObject").modal("show");
        $('.modal-dialog').draggable({
            handle: ".modal-header"
        });
        $("#saveasrequiredtype").css("display", "none");
        $("#saveasrequiredapp").css("display", "none");
        $("#saveasrequiredDrpPeg").css("display", "none");
        $("#requiredapp").css("display", "none");
        $("#requiredtype").css("display", "none");
        $("#saveasdrpObjecttype").attr("disabled", false);
        $("#saveaspegdiv").show();
        $("#saveasDrpPeg").html("");
        var objectname = $(obj).attr("data-saveasname");
        var objecttype = $(obj).attr("data-saveasobjecttype");
        var app = $(obj).attr("data-saveasapp");
        var quickaccess = $(obj).attr("data-saveasquickaccess");
        var parent = $(obj).attr("data-saveasparent");
        var autocheckerror = $(obj).attr("data-saveasautocheckerrorid");
        if (autocheckerror == "1")
            $("#saveasautocheckerror").attr('checked', true);
        else
            $("#saveasautocheckerror").attr('checked', false);
        var description = $(obj).attr("data-saveasdescription");
        description = description == "null" ? "" : description;
        $("#saveasobjecthappyname").val(objectname);
        $("select#saveasdrpObjecttype option").filter(function () {
            return $(this).text() == objecttype;
        }).prop('selected', true);

        $("#saveasapp").val(app);
        $("#saveasquickaccess").val(quickaccess);
        $("#saveasdesc").val(description);

        if (objecttype == "Pegwindow") {
            $("#saveaspegdiv").hide();
            $("#saveasdrpObjecttype").attr("disabled", true);

        }
        else {
            $.ajax({
                url: "/Object/LoadPegwindow",
                data: '{"ApplicationId":"' + app + '"}',
                type: "POST",
                async: false,
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.status == 1) {
                        var optionString = "<optgroup>";
                        optionString = optionString + " <option value=-1></option>";
                        for (i = 0; i < result.data.length; i++) {

                            var optionValue = i + 1;
                            var optionText = result.data[i];

                            optionString = optionString + " <option value='" + optionValue + "'>" + optionText + "</option>";
                        }
                        optionString = optionString + "</optgroup>";
                        //$("#DrpPeg").append($(optionString));
                        //$("#DrpPeg").select2();
                        $("#saveasDrpPeg").append($(optionString));
                        $("#saveasDrpPeg").select2();
                    }
                    else if (result.status == 0) {
                        swal.fire({
                            "title": "",
                            "text": result.message,
                            "icon": "error",
                            "onClose": function (e) {
                                console.log('on close event fired!');
                            }
                        });
                    }
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }
        $('#saveasDrpPeg option').map(function () {
            if ($(this).text() == parent) return this;
        }).attr('selected', 'selected');
        $("#saveasDrpPeg").select2();
    }

    function saveAsObject() {
        $("#saveasobject").attr("disabled", true);
        $("#hdnobjectid").val("");
        var checkhidden = $("#saveasDrpPeg").is(":hidden");
        var flag = false;
        if (!($("#frmsaveasobject").valid()) && checkhidden == false) {
            flag = true;
            $("#saveasobject").attr("disabled", false);
        }
        var lcheck = 0;
        var objectid = $("#hdnobjectid").val();
        if (objectid == "" || objectid == "") {
            objectid = 0;
        }
        var objectname = $("#saveasobjecthappyname").val();
        var Objecttype = $("#saveasdrpObjecttype").val();

        var appid = $("#saveasapp").val();

        var Pegwindow = $("#saveasDrpPeg option:selected");
        Pegwindow = Pegwindow.text();

        if (Objecttype == "0") {
            $("#saveasrequiredtype").css("display", "block");
            flag = true;
        }

        if (appid == "0") {
            $("#saveasrequiredapp").css("display", "block");
            flag = true;

        }
        if (Pegwindow == "" && checkhidden == false) {

            $("#saveasrequiredDrpPeg").css("display", "block");
            flag = true;
        }
        if (flag) {
            $("#saveasobject").attr("disabled", false);
            return false;
        }
        if ($("#saveasautocheckerror").is(":checked")) {
            lcheck = 1;
        }
        if (checkhidden)
            Pegwindow = objectname;
        var quickaccess = $("#saveasquickaccess").val();
        var desc = $("#saveasdesc").val();
        if (objectname.toLowerCase() != Pegwindow.toLowerCase() && Objecttype == "1") {
            swal.fire({
                "title": "",
                "text": "Pegwindow object cannot have different parent!",
                "icon": "error",
                "onClose": function (e) {
                    console.log('on close event fired!');
                }
            });
            $("#saveasobjecthappyname").val("");
            $("#saveasobject").attr("disabled", false);
            return false;
        }
        var ObjectModel = {};
        ObjectModel.ObjectId = objectid;
        ObjectModel.ObjectName = objectname;
        ObjectModel.ObjectType = Objecttype;
        ObjectModel.applicationid = appid;
        ObjectModel.ObjectParent = Pegwindow;
        ObjectModel.Quickaccess = quickaccess;
        ObjectModel.description = desc;
        ObjectModel.autocheckerror = lcheck;
        $.ajax({
            url: "/Object/AddEditObject",
            data: JSON.stringify(ObjectModel),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.status == 1) {
                    RefreshCacheForObject();
                    $("#saveAsObject").modal("hide");
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "success",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                    $("#saveasobject").attr("disabled", false);
                    table.table().draw();
                }
                else if (result.status == 0) {
                    $("#saveAsObject").modal("hide");
                    $("#saveasobject").attr("disabled", false);
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
    $("#objecthappyname").on('keyup', function () {
        $("#existobjectname").css("display", "none");
    });
</script>
