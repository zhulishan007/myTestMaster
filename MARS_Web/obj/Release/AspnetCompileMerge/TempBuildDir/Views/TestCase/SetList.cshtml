
@using MARS_Repository.ViewModel
@{
    string EditSet = "false";
    var PrivilegeList = Session["PrivilegeList"] as List<PrivilegeViewModel>;
    if (PrivilegeList.Count > 0)
    {
        EditSet = PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Edit Set").ToString().ToLower();
    }
}

<input type="hidden" value="@EditSet" id="hdnEditSet" />

<div class="kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor" id="kt_content">
    <div class="kt-subheader   kt-grid__item" id="kt_subheader" style="left: @ViewBag.width;">
        <div class="kt-container  kt-container--fluid ">
            <div class="kt-subheader__main">

                <span class="kt-subheader__separator kt-hidden"></span>
                <div class="kt-subheader__breadcrumbs">
                    <a href="#" class="kt-subheader__breadcrumbs-home"><i class="flaticon2-settings" style="color:#1c6081"></i></a>
                    <a href="#" class="kt-subheader__breadcrumbs-link" style="color:#1c6081">
                        Set
                    </a>
                    <i class="fa fa-angle-double-right" style="color:#1c6081"></i>
                    <a href="#" class="kt-subheader__breadcrumbs-link" style="color:#1c6081">
                        &nbsp;
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title" style="color:#1582ab">
                        List Of All Set
                    </h3>
                </div>
                @if (PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Add Set"))
                    {
                <div class="kt-portlet__head-toolbar">
                    <div class="kt-portlet__head-wrapper">
                        <div class="kt-portlet__head-actions">
                            <button type="button" class="btn btn-brand btn-elevate btn-icon-sm" data-toggle="modal" onclick="AddSet()" data-target="#kt_modal_4"><i class="la la-plus"></i>New Set</button>
                            &nbsp;
                        </div>
                    </div>
                </div>
                }
            </div>
            <div class="modal fade" id="AddSet" tabindex="-1" role="dialog" aria-labelledby="sexampleModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="sexampleModalLabel">Add Set</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="frmSet">
                                <input type="hidden" id="hdnSetId" name="hdnSetId" />
                                <div class="form-group">
                                    <label for="recipient-name" class="form-control-label">Name<span style="color:red">&nbsp;*</span></label>
                                    <input type="text" class="form-control" id="Setname" name="Setname" onchange="CheckSetNameExist()" maxlength="32">
                                    <label id="existSetname" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                                        Set Name already exist.
                                    </label>
                                    <label id="Setvalidate" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                                        Set name can only consist Uppercase,Lowercase,numbers and Special characters(-,_,.,*,&,(,))
                                    </label>
                                </div>
                                <div class="form-group">
                                    <label for="message-text" class="form-control-label">Description<span style="color:red">&nbsp;*</span></label>
                                    <textarea class="form-control" id="Setdesc" name="Setdesc" maxlength="1024"></textarea>
                                </div>
                                <br />
                                <div class="form-group">
                                    <label for="message-text" class="form-control-label">Active</label>
                                    <label class='kt-checkbox kt-checkbox--brand'><input type='checkbox' id='Setactive' name='Setactive' checked/>&nbsp;<span></span></label>
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" id="addedSet" class="btn btn-outline-brand btn-elevate btn-pill" onclick="AddEditSetSave()">Save</button>
                            <button type="button" class="btn btn-outline-brand btn-elevate btn-pill" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="kt-portlet__body">
                <table class="table table-striped- table-bordered table-hover table-checkable " id="Settable">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Active</th>
                            <th style="color: #1c6081;background-color: #e9f5ff;font-weight: bold;">Actions</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>
<script>

    var SetTable = function () {
        $.fn.dataTable.Api.register('column().title()', function () {

                return $(this.header()).text().trim();
            });
        var initSetTable = function () {

            var lhdnEditSetdisplay = $("#hdnEditSet").val();

            SetTable = $('#Settable').DataTable({
                responsive: false,
                // Pagination settings
                dom: `<'row'<'col-sm-12'tr>>
                                                    <'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7 dataTables_pager'lp>>`,
                // read more: https://datatables.net/examples/basic_init/dom.html

                lengthMenu: [10, 100, 1000],
                processing: true,
                pageLength: 100,

                language: {
                    'lengthMenu': 'Display _MENU_',
                    "processing": "<img  src='../assets/media/mars.gif' style='width:80px;'/>"
                },
                "scrollY": $(window).height() - 305,
                searchDelay: 500,
                //  processing: true,
                serverSide: true,
                ajax: {
                    url: '/TestCase/SetDataLoad',
                    type: 'POST',
                    data: {
                        // parameters for custom backend script demo
                        columnsDef: [
                            'Name', 'Description', 'Active', 'Actions',],
                    },
                },

                columns: [
                    { data: 'Name', name: "Name", width: '30%', "targets": 0, autowidth: false },
                    { data: 'Description', name: "Description", width: '30%', "targets": 1, autowidth: false },
                    { data: 'Active', name: "Active", width: '20%', "targets": 2, autowidth: false },
                    { data: 'Actions', responsivePriority: -1, width: '20%', "targets": 3, autowidth: false }
                ],
                initComplete: function () {
                    var thisTable = this;
                    var rowFilter = $('<tr class="filter"></tr>').appendTo($(SetTable.table().header()));

                    SetTable.columns().every(function () {
                        var column = this;
                        var input;
                        switch (column.title()) {
                            case 'Name':
                            case 'Description':
                            //case 'Active':
                                input = $(`<input type="text" class="form-control form-control-sm form-filter kt-input" data-col-index="` + column.index() + `"/>`);
                                $(input).keyup(function () {
                                    var params = {};
                                    $(rowFilter).find('.kt-input').each(function () {
                                        var i = $(this).data('col-index');
                                        if (params[i]) {
                                            params[i] += '|' + $(this).val();
                                        }
                                        else {
                                            params[i] = $(this).val();
                                        }
                                    });
                                    $.each(params, function (i, val) {
                                        SetTable.column(i).search(val ? val : '', false, false);
                                    });
                                    SetTable.table().draw();
                                });
                                break;
                        }
                        if (column.title() !== 'actions') {
                            $(input).appendTo($('<th>').appendTo(rowFilter));
                        }
                    });
                },
                columnDefs: [
                    {
                        targets: -1,
                        title: 'Actions',
                        orderable: false,
                        render: function (data, type, full, meta) {
                            var lid = full.Id;
                            var lName = full.Name == null ? "" : full.Name.replace(/'/g, "###");
                            var lDes = full.Description == null ? "" : full.Description.replace(/'/g, "###");
                            var lActive = full.IsActive;
                            var lRenderHtml = "";
                            if (lhdnEditSetdisplay == "true") {
                            lRenderHtml = " <a href='#' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='View' data-name='" + lName + "' data-des='" + lDes + "' data-act='" + lActive + "'onclick=AddEditSet(" + lid + ",$(this)) ><i class='la la-edit'></i></a> ";
                            }
                            return lRenderHtml;
                        },
                    }
                ],
            });
        };
        return {
            init: function () {
                initSetTable();
            },
            };
    }();
    $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
        $($.fn.dataTable.tables(true)).DataTable()
            .columns.adjust();
    });
    jQuery(document).ready(function () {
        SetTable.init();
    });
    $(document).ready(function () {

        $("#frmSet").validate({
            rules: {
                Setname: {
                    required: true
                },
                Setdesc: {
                    required: true
                }
            },
        });
    });

    function AddSet() {
        $("#Setvalidate").css("display", "none");
        $("#Setname").prop("disabled", false);
        $("#addedSet").attr("disabled", false);
        $("#sexampleModalLabel").text('');
        $("#sexampleModalLabel").text('Add Set');
        $('.modal-dialog').draggable({
            handle: ".modal-header"
        });
        $("#AddSet").modal("show");
        $("#hdnSetId").val("");
        $("#Setname").val("");
        $("#Setdesc").val("");
        $("#Setactive").prop('checked', false);

        var validator = $("#frmSet").validate();
        validator.resetForm();
    }

    function AddEditSet(Id, editObj) {
        var validator = $("#frmSet").validate();
        validator.resetForm();
        $("#sexampleModalLabel").text('');
        $("#sexampleModalLabel").text('Edit Set');
        $("#existSetname").css("display", "none");
        $("#Setname").prop("disabled", true);
        $("#addedSet").prop("disabled", false);
        $("#Setvalidate").css("display", "none");

        var lId = Id;
        var Name = $(editObj).attr("data-name").replace(/###/g, "'");
        var Desc = $(editObj).attr("data-des").replace(/###/g, "'");
        var active = $(editObj).attr("data-act");

        if (active == "1")
            $("#Setactive").prop('checked', true);
        else
            $("#Setactive").prop('checked', false);

        $("#Setname").val(Name);
        $("#Setdesc").val(Desc);
        $("#hdnSetId").val(lId);

        $("#AddSet").modal("show");
        $('.modal-dialog').draggable({
            handle: ".modal-header"
        });
        if (!$("#Setvalidate").valid())
            return false;
    }

    function AddEditSetSave() {
        $("#existSetname").css("display", "none");
        $("#addedSet").prop("disabled", true);
        if (!$("#frmSet").valid()) {
            $("#addedSet").prop("disabled", false);
            return false;
        }
        var lId = $("#hdnSetId").val();
        if (lId == null && lId == "")
            lId = 0;
        var regex = /^[a-zA-Z0-9-._(&)*  ]*$/;

        var activeval = 0;

        if ($("#Setactive").is(":checked"))
            activeval = 1;

        var SetModel = {};
        SetModel.Id = lId,
            SetModel.Name = $("#Setname").val().trim(),
            SetModel.Description = $("#Setdesc").val(),
            SetModel.IsActive = activeval;
        if (!regex.test(SetModel.Name)) {
            $("#Setname").val("");
            $("#Setvalidate").css("display", "block");
            $("#addedSet").attr("disabled", false);
            return false;
        }
        startloader();
        $("#AddSet").modal("hide");
        $.ajax({
            url: "/TestCase/AddEditSet",
            data: JSON.stringify(SetModel),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                stoploader();
                $("#addedSet").attr("disabled", false);
                if (result.status == 1 && result.data) {
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "success",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
                else if (result.status == 0) {
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
                SetTable.table().draw();
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    function CheckSetNameExist() {
        var Name = $("#Setname").val();
        var Id = $("#hdnSetId").val();

        $.ajax({
            url: "/TestCase/CheckDuplicateSetNameExist",
            data: '{"Name":"' + Name + '","Id":"' + Id + '"}',
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.status == 1 && result.data) {
                    $("#Setname").val("");
                    $("#existSetname").css("display", "block");
                }
                else if (result.status == 0) {
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
            },
        });
    }

    $("#Setname").on('keyup', function () {
        $("#existSetname").css("display", "none");
    });
    $("#Setname").on('keyup', function () {
        $("#Setvalidate").css("display", "none");
    });
</script>





