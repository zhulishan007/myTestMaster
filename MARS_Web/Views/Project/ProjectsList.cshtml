@using MARS_Repository.ViewModel
@{
    string EditPro = "false", DeletePro = "false";
    var PrivilegeList = Session["PrivilegeList"] as List<PrivilegeViewModel>;
    if (PrivilegeList.Count > 0)
    {
        EditPro = PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Edit Project").ToString().ToLower();
        DeletePro = PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Delete Project").ToString().ToLower();
    }
}

<input type="hidden" value="@EditPro" id="hdnEditPro" />
<input type="hidden" value="@DeletePro" id="hdnDeletePro" />
<div class="kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor" id="kt_content">
    <div class="kt-subheader   kt-grid__item" id="kt_subheader" style="left: @ViewBag.width;">
        <div class="kt-container  kt-container--fluid ">
            <div class="kt-subheader__main">

                <span class="kt-subheader__separator kt-hidden"></span>
                <div class="kt-subheader__breadcrumbs">
                    <a href="#" class="kt-subheader__breadcrumbs-home"><i class="flaticon2-settings" style="color:#1c6081"></i></a>
                    <a href="#" class="kt-subheader__breadcrumbs-link" style="color:#1c6081">
                        Project
                    </a>
                    <i class="fa fa-angle-double-right" style="color:#1c6081"></i>
                    <a href="#" class="kt-subheader__breadcrumbs-link" style="color:#1c6081">
                        &nbsp;
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title" style="color:#1582ab">
                        List Of All Project
                    </h3>
                </div>
                @if (PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Add Project"))
                {
                    <div class="kt-portlet__head-toolbar">
                        <div class="kt-portlet__head-wrapper">
                            <div class="kt-portlet__head-actions">
                                <button type="button" class="btn btn-brand btn-elevate btn-icon-sm" data-toggle="modal" onclick="AddProject()" data-target="#kt_modal_4"><i class="la la-plus"></i>New Project</button>
                                &nbsp;
                            </div>
                        </div>
                    </div>
                }
                </div>
            <div class="modal fade" id="AddProject" tabindex="-1" role="dialog" aria-labelledby="projexampleModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="projexampleModalLabel">Add Project</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="frmproject">
                                <input type="hidden" id="hdnProjectId" name="hdnProjectId" />
                                <div class="form-group">
                                    <label for="recipient-name" class="form-control-label">Name<span style="color:red">&nbsp;*</span></label>
                                    <input type="text" class="form-control" id="projectname" name="projectname" onchange="CheckNameExist()" maxlength="32">
                                    <label id="existprojectname" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                                        Project Name already exist.
                                    </label>
                                    <label id="projectvalidate" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                                        Project name can only consist Uppercase,Lowercase,numbers and Special characters(-,_,.,*,&,(,))
                                    </label>
                                </div>
                                <div class="form-group">
                                    <label for="message-text" class="form-control-label">Description<span style="color:red">&nbsp;*</span></label>
                                    <textarea class="form-control" id="projectdesc" name="projectdesc" maxlength="128"></textarea>
                                </div>
                                <div class="form-group">
                                    <label class="form-control-label">Application<span style="color:red">&nbsp;*</span></label>
                                    <select class="form-control kt-select2" id="sDrpApplication" name="sDrpApplication" multiple="multiple" style="border-color:#59c0e7 !important">

                                        @{var lAppsList = ViewBag.listApplications as IEnumerable<SelectListItem>;

                                            <optgroup id="appname" label="Applications">
                                                @foreach (var item in lAppsList)
                                                {
                                                    <option value="@item.Value">@item.Text</option>
                                                }
                                            </optgroup>
                                        }
                                    </select>
                                    <label id="existPappName" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                                        This field is required.
                                    </label>
                                </div>
                                <div class="form-group">
                                    <label class="form-control-label">Status<span style="color:red">&nbsp;*</span></label>
                                    <select class="form-control kt-select2" id="DrpProjStatus" name="DrpProjStatus">
                                        <option value="1">Edit</option>
                                        <option value="2">Ready to test</option>
                                    </select>
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" id="addedproject" class="btn btn-outline-brand btn-elevate btn-pill" onclick="AddEditProjectSave()">Save</button>
                            <button type="button" class="btn btn-outline-brand btn-elevate btn-pill" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="kt-portlet__body">
                <table class="table table-striped- table-bordered table-hover table-checkable" id="Projecttable">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Application</th>
                            <th>Status</th>
                            <th style="color: #1c6081;background-color: #e9f5ff;font-weight: bold;">Actions</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    var ProjectTable = function () {
        $.fn.dataTable.Api.register('column().title()', function () {
            return $(this.header()).text().trim();
        });

        var initProjectTable = function () {
            var lEditAppdisplay = $("#hdnEditPro").val();
            var lDeleteAppdisplay = $("#hdnDeletePro").val();
            ProjectTable = $('#Projecttable').DataTable({
                responsive: false,

                // Pagination settings
                //dom: `<'row'<'col-sm-12'tr>>
                //                                    <'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7 dataTables_pager'lp>>`,
                dom: `<'row'<'col-sm-12'tr>>
            <'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7 dataTables_pager'lp>>`,
                // read more: https://datatables.net/examples/basic_init/dom.html

                lengthMenu: [10, 100, 1000],
                processing: true,
                pageLength: 100,

                language: {
                    'lengthMenu': 'Display _MENU_',
                    "processing": "<img  src='../assets/media/mars.gif' style='width:80px;'/>"
                },
                "scrollY": $(window).height() - 305,
                searchDelay: 500,
                //  processing: true,
                serverSide: true,
                ajax: {
                    url: '/Project/DataLoad',
                    type: 'POST',
                    data: {
                        // parameters for custom backend script demo
                        columnsDef: [
                            'ProjectName', 'ProjectDescription', 'Application', 'Status', 'Actions',],
                    },
                },
                columns: [
                    { data: 'ProjectName', name: "Name", width: '@ViewBag.namewidth', "targets": 0, autowidth: false },
                    { data: 'ProjectDescription', name: "Description", width: '@ViewBag.descriptionwidth', "targets": 1, autowidth: false },
                    { data: 'Application', name: "Application", width: '@ViewBag.applicationwidth', "targets": 2,autowidth: false },
                    { data: 'Status', name: "Status", width: '@ViewBag.statuswidth', "targets": 3, autowidth: false },
                    { data: 'Actions', responsivePriority: -1, width: '@ViewBag.actionswidth', "targets": 4, autowidth: false }
                ],
                initComplete: function () {
                    var thisTable = this;
                    var rowFilter = $('<tr class="filter"></tr>').appendTo($(ProjectTable.table().header()));

                    ProjectTable.columns().every(function () {
                        var column = this;
                        var input;
                        switch (column.title()) {
                            case 'Name':
                            case 'Description':
                            case 'Application':
                            case 'Status':
                                input = $(`<input type="text" class="form-control form-control-sm form-filter kt-input" data-col-index="` + column.index() + `"/>`);
                                $(input).keyup(function () {
                                    var params = {};
                                    $(rowFilter).find('.kt-input').each(function () {
                                        var i = $(this).data('col-index');
                                        if (params[i]) {
                                            params[i] += '|' + $(this).val();
                                        }
                                        else {
                                            params[i] = $(this).val();
                                        }
                                    });
                                    $.each(params, function (i, val) {
                                        ProjectTable.column(i).search(val ? val : '', false, false);
                                    });
                                    ProjectTable.table().draw();
                                });
                                break;
                        }

                        if (column.title() !== 'actions') {
                            $(input).appendTo($('<th>').appendTo(rowFilter));
                        }
                    });
                },
                columnDefs: [
                    {
                        targets: -1,
                        title: 'Actions',
                        orderable: false,
                        render: function (data, type, full, meta) {
                            var lid = full.ProjectId;
                            var lName = full.ProjectName==null?"":full.ProjectName.replace(/'/g, "###");
                            var lDes = full.ProjectDescription == null ? "":full.ProjectDescription.replace(/'/g, "###");
                            var lApplication = full.Application;
                            var lApplicationId = full.ApplicationId;
                            var lStatusId = full.StatusId;
                            var lStatus = full.Status;
                           
                            var lRenderHtml = "";
                            if (lEditAppdisplay == "true") {
                                lRenderHtml = " <a href='#' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='View' data-name='" + lName + "' data-des='" + lDes + "' data-app='" + lApplication + "' data-status='" + lStatus + "' data-appid='" + lApplicationId + "' data-statusId='" + lStatusId + "' onclick=AddEditProject(" + lid + ",$(this)) ><i class='la la-edit'></i></a> "; 
                            }
                            if (lDeleteAppdisplay == "true") {
                                lRenderHtml = lRenderHtml + "<a href='#' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='Delete' data-projectname='" + lName + "' onclick='ProDelete(" + lid + ",$(this))' ><i class='la la-trash la-xs'></i></a>";
                            }
                            return lRenderHtml;
                        },
                    }
                ],
            });
        };
        return {
            //main function to initiate the module
            init: function () {
                initProjectTable();
            },

        };
    }();
    $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
        $($.fn.dataTable.tables(true)).DataTable()
            .columns.adjust();
       });
    jQuery(document).ready(function () {
        ProjectTable.init();
    });
    $(document).ready(function () {

        $("#frmproject").validate({
            rules: {
                projectname: {
                    required: true
                },
                projectdesc: {
                    required: true,
                },
                DrpProjStatus: {
                    required: true
                }
            },
        });

        $('#DrpProjStatus').on('changed.bs.DrpProjStatus', function () {
            validator.element($(this)); // validate element
        });
    });

    function AddEditProject(Id, editObj) {
        var validator = $("#frmproject").validate();
        validator.resetForm();
        $("#projexampleModalLabel").text('');
        $("#projexampleModalLabel").text('Edit Project');
        $("#projectvalidate").css("display", "none");
        $("#existPappName").css("display", "none");
        $("#AddProject").modal("show");
        $("#addedproject").attr("disabled", false);
        var lprojectId = Id;
        var Name = $(editObj).attr("data-name").replace(/###/g, "'");
        var Desc = $(editObj).attr("data-des").replace(/###/g, "'");
        var Status = $(editObj).attr("data-statusId");
        var AppId = $(editObj).attr("data-appid");

        $("#projectname").val(Name);
        $("#projectdesc").val(Desc);
        $("#hdnProjectId").val(lprojectId);
        $("#DrpProjStatus").val(Status);
        $("#sDrpApplication").val(AppId.split(","));
        $("#sDrpApplication").select2();

        if (!$("#projectvalidate").valid())
            return false;
    }

    function AddProject() {
        $("#projectvalidate").css("display", "none");
        $("#existPappName").css("display", "none");
        $("#addedproject").attr("disabled", false);
        $("#projexampleModalLabel").text('');
        $("#projexampleModalLabel").text('Add Project');
        $("#AddProject").modal("show");
        $("#hdnProjectId").val("");
        $("#projectname").val("");
        $("#projectdesc").val("");
        $("#sDrpApplication").val("");
        $("#sDrpApplication").select2();
        var validator = $("#frmproject").validate();
        validator.resetForm();
    }

     function ProDelete(id,obj) {
            var projectName = obj[0].dataset.projectname;
        swal.fire({
            title: 'Please confirm.',
            text: "This action can not be undone.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!'
        }).then(function (result) {
            if (result.value == true) {

                $.ajax({
                    url: "/Project/DeleteProject",
                    data: JSON.stringify({ "projectid": id }),
                    type: "POST",
                    async: false,
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result.status == 1) {
                            ProjectTable.table().draw();
                            swal.fire(
                                'Deleted!',
                                result.message,
                                'success'
                            )
                            $.ajax({
                                url: "/Login/LeftPanel",
                                type: "POST",
                                contentType: "application/json;charset=utf-8",
                                dataType: "HTML",
                                success: function (result) {
                                    $("#leftProjectList").html("");
                                    $("#leftProjectList").html(result);
                                }
                            });

                        }
                        else if (result.status == 0) {
                            swal.fire({
                                "title": "",
                                "text": result.message,
                                "icon": "error",
                                "onClose": function (e) {
                                    console.log('on close event fired!');
                                }
                            });
                        }
                        else {
                            swal.fire(
                                'Error while deleting',
                                'error'
                            )
                        }
                    },
                    error: function (x, y, z) {
                        swal.fire(
                            'Error while deleting project [' + projectName +']',
                            'error'

                        )

                    }
                });
            }
        });
    }
    function AddEditProjectSave() {
        var appvalue = $("#sDrpApplication").val();

        if (!$("#frmproject").valid()) {
            if (appvalue.length == 0) {
                $("#existPappName").css("display", "block");
                return false;
            }
            return false;
        }
         if (appvalue.length == 0) {
            $("#existPappName").css("display", "block");
            return false;
        }
        $("#addedproject").attr("disabled", true);
        var lId = $("#hdnProjectId").val();
        if (lId == null && lId == "")
            lId = 0;
        var regex = /^[a-zA-Z0-9-._(&)*  ]*$/;

        var ProjectModel = {};
        ProjectModel.ProjectId = lId,
            ProjectModel.ProjectName = $("#projectname").val(),
            ProjectModel.ProjectDescription = $("#projectdesc").val(),
            ProjectModel.ApplicationId = $("#sDrpApplication").val().toString(),
            ProjectModel.Status = $("#DrpProjStatus").val().toString();
        if (!regex.test(ProjectModel.ProjectName)) {
            $("#projectname").val("");
            $("#projectvalidate").css("display", "block");
            $("#addedproject").attr("disabled", false);

            return false;
        }
        $.ajax({
            url: "/Project/AddEditProject",
            data: JSON.stringify(ProjectModel),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.status == 1 && result.data) {
                    $("#AddProject").modal("hide");
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "success",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                } else if (result.status == 0) {
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
                ProjectTable.table().draw();
                $("#addedproject").attr("disabled", false);
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
    function CheckNameExist() {
        var ProjectName = $("#projectname").val();
        var ProjectId = $("#hdnProjectId").val();

        $.ajax({
            url: "/Project/CheckDuplicateProjectNameExist",
            data: '{"ProjectName":"' + ProjectName + '","ProjectId":"' + ProjectId + '"}',
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.status == 1 && result.data) {
                    $("#projectname").val("");
                    $("#existprojectname").css("display", "block");
                } else if (result.status == 0) {
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "icon": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
            },
        });
    }
    $("#projectname").on('keyup', function () {
        $("#existprojectname").css("display", "none");
    });
    $("#projectname").on('keyup', function () {
        $("#projectvalidate").css("display", "none");
    });

</script>




