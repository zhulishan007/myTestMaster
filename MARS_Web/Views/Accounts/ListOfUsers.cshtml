@using MARS_Repository.ViewModel
@{

    if (Session["SubmitUserMsg"] != null)
    {
        var lMsg = Session["SubmitUserMsg"] as string;
        if (!string.IsNullOrEmpty(lMsg))
        {
            <script>
                setTimeout(function () {
                    swal.fire({
                        "title": "",
                        "text": "@lMsg",
                        "type": "success",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }, 1000);

            </script>
            Session["SubmitUserMsg"] = "";
        }
    }
    string EditUser = "false", DeleteUser = "false", PassUser = "false";
    var PrivilegeList = Session["PrivilegeList"] as List<PrivilegeViewModel>;
    if (PrivilegeList.Count > 0)
    {
        EditUser = PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Edit User").ToString().ToLower();
        DeleteUser = PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Delete User").ToString().ToLower();
        PassUser = PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Reset Password User").ToString().ToLower();
    }
}
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
</head>

<p>
</p>
<input type="hidden" value="@EditUser" id="hdnEditUser" />
<input type="hidden" value="@DeleteUser" id="hdnDeleteUser" />
<input type="hidden" value="@PassUser" id="hdnPassUser" />
<div class="kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor" id="kt_content">
    <div class="kt-subheader   kt-grid__item" id="kt_subheader" style="left: @ViewBag.width;">
        <div class="kt-container  kt-container--fluid ">
            <div class="kt-subheader__main">
                <span class="kt-subheader__separator kt-hidden"></span>
                <div class="kt-subheader__breadcrumbs">
                    <a href="#" class="kt-subheader__breadcrumbs-home"><i class="flaticon2-settings" style="color:#1c6081"></i></a>
                    <a href="#" class="kt-subheader__breadcrumbs-link" style="color:#1c6081">
                        Settings
                    </a>
                    <i class="fa fa-angle-double-right" style="color:#1c6081"></i>
                    <a href="#" class="kt-subheader__breadcrumbs-link" style="color:#1c6081">
                        &nbsp;User List
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title" style="color:#1582ab">
                        List Of All Users
                    </h3>
                </div>
                @if (PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Add User"))
                {
                    <div class="kt-portlet__head-toolbar">
                        <div class="kt-portlet__head-wrapper">
                            <div class="kt-portlet__head-actions">
                                &nbsp;
                                <a href="javascript:;" class="btn btn-brand btn-elevate btn-icon-sm" onclick="AddEditUser()">
                                    <i class="la la-plus"></i>
                                    New Record
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <div class="kt-portlet__body">
                <table class="table table-striped- table-bordered table-hover table-checkable " id="kt_table">
                    <thead>
                        <tr>
                            <th>First Name</th>
                            <th>Middle Name</th>
                            <th>Last Name</th>
                            <th>User Name</th>
                            <th>Email Address</th>
                            <th>Company Name</th>
                            <th style="color: #1c6081;background-color: #e9f5ff;font-weight: bold;">Status</th>
                            <th style="color: #1c6081;background-color: #e9f5ff;font-weight: bold;">Actions</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>
<script>
        var Usertable;
        var UserTable = function () {

            $.fn.dataTable.Api.register('column().title()', function () {
                return $(this.header()).text().trim();
            });

            var initTable1 = function () {
                var lEditUserdisplay = $("#hdnEditUser").val();
                var lDeleteUserdisplay = $("#hdnDeleteUser").val();
                var lPassUserdisplay = $("#hdnPassUser").val();
                // begin first table
                Usertable = $('#kt_table').DataTable({
                    responsive: false,

                    "dom": "<'row'<'col-md-12'Bf>>" +
                        "<'row'<'col-md-6'><'col-md-6'>>" +
                        "<'row'<'col-md-12't>><'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7 dataTables_pager'lp>>",
                    lengthMenu: [10, 100, 1000],
                    processing: true,
                    pageLength: 100,


                    language: {
                        'lengthMenu': 'Display _MENU_',
                        "processing": "<img  src='../assets/media/mars.gif' style='width:80px;'/>"
                    },
                    "buttons": [
                        {
                            "extend": 'excel',
                            "text": '<a class="flaticon-download">&nbsp;Export</a>',
                            "titleAttr": 'Excel',
                            "action": newexportaction,
                            filename: "UserList",
                            exportOptions: {
                                columns: [0, 1, 2, 3, 4, 5, 6],
                                orthogonal: 'export'
                            },
                        },
                    ],
                    "scrollY": $(window).height() - 305,
                    searchDelay: 500,
                    //  processing: true,
                    serverSide: true,

                    ajax: {
                        url: '/Accounts/DataLoad',
                        type: 'POST',
                        data: {
                            // parameters for custom backend script demo
                            columnsDef: [
                                'TESTER_NAME_F', 'TESTER_NAME_M', 'TESTER_NAME_LAST', 'TESTER_LOGIN_NAME', 'TESTER_MAIL',
                                'COMPANY_NAME', 'Status', 'Actions',],
                        },
                    },

                    columns: [
                        { data: 'TESTER_NAME_F', name: "First Name", width: '@ViewBag.fnamewidth', "targets": 0, autowidth: false },
                        { data: 'TESTER_NAME_M', name: "Middle Name", width: '@ViewBag.mnamewidth', "targets": 1, autowidth: false },
                        { data: 'TESTER_NAME_LAST', name: "Last Name", width: '@ViewBag.lnamewidth', "targets": 2, autowidth: false },
                        { data: 'TESTER_LOGIN_NAME', name: "User Name", width: '@ViewBag.namewidth', "targets": 3, autowidth: false },
                        { data: 'TESTER_MAIL', name: "Email Address", width: '@ViewBag.emailwidth', "targets": 4, autowidth: false },
                        { data: 'COMPANY_NAME', name: "Company Name", width: '@ViewBag.companywidth', "targets": 5, autowidth: false },
                        {
                            data: 'STATUS', name: "Status", autowidth: false, width: '@ViewBag.statustwidth', "targets": 6,
                            orderable: false,
                            render: function (data, type, row, meta) {

                                if (type === 'export') {
                                    var i = $(data).prop("checked") === true ? 'Yes' : 'No';
                                    if (i != null) {
                                        if (data == 1) {
                                            return "Active User"
                                        }
                                        else {
                                            return "Inactive User"
                                        }
                                    }
                                }
                                var lid = row.TESTER_ID;
                                var Name = row.TESTER_LOGIN_NAME;
                                var lHtml = "";

                                if (data == 0) {
                                    lHtml = '<span class="kt-switch"><label><input type="checkbox" id="ischeckedEnable" data-name=' + Name +' name="" onchange="ChangeStatus(' + lid + ',$(this))" /><span></span></label></span>';
                                } else {
                                    lHtml = '<span class="kt-switch"><label><input type="checkbox" id="ischeckedEnable" checked="checked" name="" data-name=' + Name +'  onchange="ChangeStatus(' + lid + ',$(this))" /><span></span></label></span>';
                                }
                                return lHtml;
                            }
                        },
                        { data: 'Actions', responsivePriority: -1, width: '@ViewBag.actionswidth', "targets": 6, autowidth: false }
                    ],
                    initComplete: function () {
                        var thisTable = this;
                        var rowFilter = $('<tr class="filter"></tr>').appendTo($(Usertable.table().header()));

                        Usertable.columns().every(function () {
                            var column = this;
                            var input;

                            switch (column.title()) {
                                case 'First Name':
                                case 'Middle Name':
                                case 'Last Name':
                                case 'User Name':
                                case 'Email Address':
                                case 'Company Name':
                                    input = $(`<input type="text" class="form-control form-control-sm form-filter kt-input" data-col-index="` + column.index() + `"/>`);
                                    $(input).keyup(function () {
                                        var params = {};
                                        $(rowFilter).find('.kt-input').each(function () {
                                            var i = $(this).data('col-index');
                                            if (params[i]) {
                                                params[i] += '|' + $(this).val();
                                            }
                                            else {
                                                params[i] = $(this).val();
                                            }
                                        });
                                        $.each(params, function (i, val) {
                                            // apply search params to datatable
                                            Usertable.column(i).search(val ? val : '', false, false);
                                        });
                                        Usertable.table().draw();
                                    });
                                    break;
                            }
                            if (column.title() !== 'actions') {
                                $(input).appendTo($('<th>').appendTo(rowFilter));
                            }
                        });
                    },
                    columnDefs: [
                        {
                            targets: -1,
                            title: 'Actions',
                            orderable: false,
                            render: function (data, type, full, meta) {
                                var lid = full.TESTER_ID;
                                var emailid = full.TESTER_MAIL;
                              
                                var lRenderHtml = "";
                                if (lEditUserdisplay == "true") {
                                    lRenderHtml = " <a href='#' onclick='AddEditUser(" + lid + ")' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='View'><i class='la la-edit'></i></a> ";
                                }
                                if (lDeleteUserdisplay == "true") {
                                    lRenderHtml = lRenderHtml + "<a href='#' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='Delete' onclick='UseDelete(" + lid + ")' ><i class='la la-trash la-xs'></i></a>";
                                }
                                if (lPassUserdisplay == "true") {
                                    lRenderHtml = lRenderHtml + "<a href='#' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='Reset Password' onclick=ChangePassword('" + emailid + "') ><i class='fa fa-key'></i></a>";
                                }
                                return lRenderHtml;
                            },
                        }
                    ],
                });
            };
            return {
                init: function () {
                    initTable1();
                },
            };
        }();
        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
            $($.fn.dataTable.tables(true)).DataTable()
                .columns.adjust();
        });

        jQuery(document).ready(function () {
            UserTable.init();
        });

        $('.SwAlert').click(function (e) {
            swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!'
            }).then(function (result) {
                if (result.value) {
                    swal.fire(
                        'Deleted!',
                        'User has been deleted',
                        'success'
                    )
                }
            });
        });
        function ChangeStatus(id, obj) {
            var name = obj[0].dataset.name;
            var lcheck = 0;
            if (id != null) {

                if ($(obj).is(":checked")) {
                    lcheck = 1;
                }
                $.ajax({
                    url: "/Accounts/ChangeUserStatus",
                    data: '{"Id":"' + id + '","Checked":"' + lcheck + '"}',
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result.status == 1) {
                            Usertable.table().draw();
                            swal.fire(
                                'Updated!',
                                result.message,
                                'success'
                            )
                        }
                        else if (result.status == 0) {
                            Usertable.table().draw();
                            swal.fire({
                                "title": "",
                                "text": result.message,
                                "type": "error",
                                "onClose": function (e) {
                                    console.log('on close event fired!');
                                }
                            });
                        }
                    },
                    error: function (x, y, z) {
                        swal.fire(
                            'Error while deleting user [' + name +']',
                            'error'
                        )
                    }
                });
            }
        }
        function UseDelete(id) {
            swal.fire({
                title: 'Please confirm.',
                text: "This action can not be undone.",
                type: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!'
            }).then(function (result) {
                if (result.value == true) {

                    $.ajax({
                        url: "/Accounts/DeleteUser",
                        data: JSON.stringify({ "id": id }),
                        type: "POST",
                        async: false,
                        contentType: "application/json;charset=utf-8",
                        dataType: "json",
                        success: function (result) {
                            if (result.status == 1) {
                                Usertable.table().draw();
                                swal.fire(
                                    'Deleted!',
                                    result.message,
                                    'success'
                                )
                            }
                            else if (result.status == 0) {
                                Usertable.table().draw();
                                swal.fire({
                                    "title": "",
                                    "text": result.message,
                                    "type": "error",
                                    "onClose": function (e) {
                                        console.log('on close event fired!');
                                    }
                                });
                            }
                        },
                        error: function (x, y, z) {
                            swal.fire(
                                'Error while deleting',
                                'error'
                            )
                        }
                    });
                }
            });
        }

        function ChangePassword(id) {
            var lid = id;
            $.ajax({
                url: "/Login/ForgotPsw",
                data: '{"lEmail":"' + lid + '"}',
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.status == 1) {
                        var type = "success";
                        swal.fire({
                            "title": "",
                            "text": "Reset Password link has been sent to your Email",
                            "type": type,
                            "onClose": function (e) {
                                console.log('on close event fired!');
                            }
                        });
                    }
                    else if (result.status == 0) {
                        swal.fire({
                            "title": "",
                            "text": result.message,
                            "type": "error",
                            "onClose": function (e) {
                                console.log('on close event fired!');
                            }
                        });
                    }
                },
            });
        }
        function newexportaction(e, dt, button, config) {

            var self = this;
            var oldStart = dt.settings()[0]._iDisplayStart;
            dt.one('preXhr', function (e, s, data) {
                data.start = 0;
                data.length = 2147483647;
                dt.one('preDraw', function (e, settings) {
                    if (button[0].className.indexOf('buttons-excel') >= 0) {
                        $.fn.dataTable.ext.buttons.excelHtml5.available(dt, config) ?
                            $.fn.dataTable.ext.buttons.excelHtml5.action.call(self, e, dt, button, config) :
                            $.fn.dataTable.ext.buttons.excelFlash.action.call(self, e, dt, button, config);
                    }
                    dt.one('preXhr', function (e, s, data) {

                        settings._iDisplayStart = oldStart;
                        data.start = oldStart;
                    });

                    setTimeout(dt.ajax.reload, 0);

                    return false;
                });

            });
            dt.ajax.reload();
        };
</script>






