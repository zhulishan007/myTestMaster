@model MARS_Data.Entities.T_TESTER_INFO
@*@model Mars_Data.Models.T_MARS_COMPANY*@

@{
    ViewBag.Title = "AddUser";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*@{ SelectList Companylist = (SelectList)ViewBag.listCompany; }*@
<div class="row">
    <div class="col-lg-12">
        <div class="kt-portlet">
            <div class="kt-portlet__head">
                <div class="kt-portlet__head-label">
                    <h3>
                        Create User
                    </h3>
                </div>
            </div>
            <!--begin::Form-->
            <form class="kt-form kt-form--label-right" id="kt_form_2" name="registration">
                <div class="kt-portlet__body">
                    <div class="form-group form-group-last kt-hide">
                        <div class="alert alert-danger" role="alert" id="kt_form_2">
                            <div class="alert-icon"><i class="flaticon-warning"></i></div>
                            <div class="alert-text">
                                Oh snap! Change a few things up and try submitting again.
                            </div>
                            <div class="alert-close">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true"><i class="la la-close"></i></span>
                                </button>
                            </div>
                        </div>
                    </div>
                    @*<div class="form-group row" hidden="hidden">
                        <label class="col-form-label col-lg-3 col-sm-12">UserID</label>
                        <div class="col-lg-9 col-md-9 col-sm-12">*@
                    <input type="hidden" class="form-control" name="TESTER_ID" id="hdnUserid">

                    @*</div>
                        </div>*@
                    <div class="form-group row">
                        <label class="col-form-label col-lg-3 col-sm-12">First Name</label>
                        <div class="col-lg-9 col-md-9 col-sm-12">
                            @Html.TextBoxFor(m => m.TESTER_NAME_F, new { @class = "form-control", @id = "Firstname", @required = "required" })
                            

                        </div>
                    </div>


                    <div class="form-group row">
                        <label class="col-form-label col-lg-3 col-sm-12">Middle Name</label>
                        <div class="col-lg-9 col-md-9 col-sm-12">
                            @Html.TextBoxFor(m => m.TESTER_NAME_M, new { @class = "form-control", @id = "Middlename" })
                            @*<input type="text" class="form-control " name="TESTER_NAME_M" id="Middlename">*@

                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-form-label col-lg-3 col-sm-12">Last Name</label>
                        <div class="col-lg-9 col-md-9 col-sm-12">
                            @Html.TextBoxFor(m => m.TESTER_NAME_LAST, new { @class = "form-control", @id = "LastName"})
                           @* <input type="text" class="form-control " name="TESTER_NAME_LAST" id="LastName">*@

                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-form-label col-lg-3 col-sm-12">Company Name</label>
                        <div class="col-lg-9 col-md-9 col-sm-12">


                            @Html.DropDownListFor(model=>model.COMPANY_ID, ViewBag.listCompany as IEnumerable<SelectListItem>,"--Select--",
                                new {@id= "COMPANY_ID",
                                    @class = "form-control" })
                            @*@Html.DropDownListFor(model => model.COMPANY_ID, Companylist)*@
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-form-label col-lg-3 col-sm-12">Email Address</label>
                        <div class="col-lg-9 col-md-9 col-sm-12">
                            @Html.TextBoxFor(m => m.TESTER_MAIL, new { @class = "form-control", @id = "EmailId", @required = "required" })
                           

                        </div>
                    </div>


                    <div class="form-group row">
                        <label class="col-form-label col-lg-3 col-sm-12">User Name</label>
                        <div class="col-lg-9 col-md-9 col-sm-12">
                            @Html.TextBoxFor(m => m.TESTER_LOGIN_NAME, new { @class = "form-control", @id = "Username", @required = "required", @onblur = "CheckLoginNameExist()" })
                         @Html.ValidationMessageFor(m=>m.TESTER_LOGIN_NAME)
                            @*  <input type="text" class="form-control" name="TESTER_LOGIN_NAME" id="Username" onblur="CheckLoginNameExist()" required>*@

                        </div>
                    </div>
                    @*<div class="form-group row">
                            <label class="col-form-label col-lg-3 col-sm-12">User Name</label>
                            <div class="col-lg-9 col-md-9 col-sm-12">
                                <input type="text" class="form-control" name="TESTER_LOGIN_NAME" id="Username">
                                @Html.DropDownListFor(x => x.COMPANY_ID, new SelectList(Model.T_MARS_COMPANYS, "COMPANY_ID", "COMPANY_NAME",Model.COMPANY_ID)})
                            </div>
                        </div>*@
                    <div class="form-group row">
                        <label class="col-form-label col-lg-3 col-sm-12">Password</label>
                        <div class="col-lg-9 col-md-9 col-sm-12">
                            @Html.TextBoxFor(m => m.TESTER_PWD, new { @class = "form-control", @id = "Password", @required = "required"})
                           @* <input type="password" class="form-control" name="TESTER_PWD" id="Password" required>*@

                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-form-label col-lg-3 col-sm-12">Confirm Password</label>
                        <div class="col-lg-9 col-md-9 col-sm-12">
                            <input type="text" class="form-control" name="cpassword" id="cpassword">

                        </div>
                    </div>


                </div>
                <div class="kt-portlet__foot">
                    <div class="kt-form__actions">
                        <div class="row">
                            <div class="col-lg-9 ml-lg-auto">
                                <button type="submit" class="btn btn-outline-brand btn-elevate btn-pill" id="btnAdd"  >Create</button>
                                <button type="reset" class="btn btn-outline-brand btn-elevate btn-pill" onclick="window.location.href='@Url.Action("ListOfUsers","Accounts")';">Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
            <!--end::Form-->
        </div>

    </div>
</div>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script type="text/javascript">

    $(document).ready(function () {

        var User = {
            TESTER_ID: 1,
            TESTER_NAME_LAST: "",
            TESTER_NAME_M: "",
            TESTER_NAME_F: "",
            TESTER_MAIL: "",
            TESTER_LOGIN_NAME: "",
            TESTER_PWD: "",

        }

        $("#kt_form_2").validate({
            // define validation rules
            rules: {
                //= Client Information(step 3)
                // Billing Information
                TESTER_NAME_F: {
                    required: true
                },

                TESTER_MAIL: {
                    required: true,
                    email: true

                },
                TESTER_LOGIN_NAME: {
                    required: true
                },
                TESTER_PWD: {
                    required: true,
                    minlength: 5,
                },
                cpassword: {
                    equalTo: "#Password",
                },


            },

            //display error alert on form submit
            invalidHandler: function (event, validator) {
                swal.fire({
                    "title": "",
                    "text": "There are some errors in your submission. Please correct them.",
                    "type": "error",
                    "confirmButtonClass": "btn btn-secondary",
                    "onClose": function (e) {
                        console.log('on close event fired!');
                    }
                });

                event.preventDefault();
            },

            //submitHandler: function (form) {
            //    //form[0].submit(); // submit the form
            //    swal.fire({
            //        "title": "",
            //        "text": "Form validation passed. All good!",
            //        "type": "success",
            //        "confirmButtonClass": "btn btn-secondary"
            //    });

            //    return false;
            //}
        });
        function CheckLoginNameExist() {
            var pLoginName = $("#Username").val();
            var TESTER_ID = $("#hdnUserid").val();
            $("#Username").next().innerHTML = "<div id='Username-error' class='error invalid-feedback'>This field is required.</div>";
            //
            return false;
            $.ajax({
                //url: "http://localhost:53001/api/CreateUser",
                url: "/Accounts/CheckLoginNameExist",
                data: { pLoginName: pLoginName, TESTER_ID: TESTER_ID},
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    //debugger
                    if (result) {

                    }


                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }
        $("#btnAdd").click(function () {

            debugger;
            if ($("#kt_form_2").valid()) {
                var userObj = User;

                userObj.TESTER_ID = $("#Userid").val(),
                    userObj.TESTER_NAME_LAST = $("#LastName").val(),
                    userObj.TESTER_NAME_M = $("#Middlename").val(),
                    userObj.TESTER_NAME_F = $("#Firstname").val(),
                    userObj.TESTER_MAIL = $("#EmailId").val(),
                    userObj.TESTER_LOGIN_NAME = $("#Username").val(),
                    userObj.TESTER_PWD = $("#Password").val(),
                    userObj.COMPANY_ID = $("#COMPANY_ID").val()
                //var options = {};
                //debugger;
                //options.url = "http://localhost/MARWebAPI/api/Account/Post";
                //options.data = JSON.stringify(userObj);
                //options.contentType = "application/json;charset=utf-8";
                //options.dataType = "html";
                //options.type = "post";
                //options.success = function (msg) {
                //    alert("done");
                //},
                //    options.error = function (msg) {
                //        alert("not");
                //    };
                //$.ajax(options);
                //var data = {
                //    val: "test"
                //};
                //var data = {
                //    T_TESTER_INFO: {
                //        TESTER_ID: $("#Userid").val(),
                //        TESTER_NAME_LAST: $("#LastName").val(),
                //        TESTER_NAME_M: $("#Middlename").val(),
                //        TESTER_NAME_F: $("#Firstname").val(),
                //        TESTER_LOGIN_NAME: $("#Username").val(),
                //        TESTER_PWD: $("#Password").val(),
                //        TESTER_MAIL: $("#EmailId").val(),
                //        COMPANY_ID: 1
                //    }
                //};
                debugger;
                $.ajax({
                    //url: "http://localhost:53001/api/CreateUser",
                    url: "/Accounts/CreateUser",
                    data: JSON.stringify(userObj),
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        //debugger
                        if (data.result != null) {
                           
                            window.location.href = "/Accounts/ListOfUsers";
                        }
                        else {
                            return null;
                        }


                        
                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
                });
            }






        });
    });
        //function Add() {
        //    debugger;
        //    var userObj = {
        //        TESTER_ID:
        //    };
        //}
</script>

<script src="~/assets/plugins/global/plugins.bundle.js" type="text/javascript"></script>
<script src="~/assets/js/scripts.bundle.js" type="text/javascript"></script>
<!--end::Global Theme Bundle -->
<!--begin::Page Scripts(used by this page) -->
@*<script src="~/assets/js/pages/crud/forms/validation/form-controls.js" type="text/javascript"></script>*@
