<style>
    #clsTestSuite span {
        height: 37px;
    }
</style>
@using MARS_Repository.ViewModel
@{
    string EditTC = "false", DeleteTC = "false";
    var PrivilegeList = Session["PrivilegeList"] as List<PrivilegeViewModel>;
    if (PrivilegeList.Count > 0)
    {
        EditTC = PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Edit TestCase").ToString().ToLower();
        DeleteTC = PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Delete TestCase").ToString().ToLower();
    }
}
<input type="hidden" value="@EditTC" id="hdnEditTC" />
<input type="hidden" value="@DeleteTC" id="hdnDeleteTC" />

<div class="kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor" id="kt_content">
    <div class="kt-subheader   kt-grid__item" id="kt_subheader" style="left: @ViewBag.width;">
        <div class="kt-container  kt-container--fluid ">
            <div class="kt-subheader__main">

                <span class="kt-subheader__separator kt-hidden"></span>
                <div class="kt-subheader__breadcrumbs">
                    <a href="#" class="kt-subheader__breadcrumbs-home"><i class="flaticon2-settings" style="color:#1c6081"></i></a>
                    <a href="#" class="kt-subheader__breadcrumbs-link" style="color:#1c6081">
                        Test Case
                    </a>
                    <i class="fa fa-angle-double-right" style="color:#1c6081"></i>
                    <a href="#" class="kt-subheader__breadcrumbs-link" style="color:#1c6081">
                        &nbsp;
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__head kt-portlet__head--lg">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title" style="color:#1582ab">
                        List Of All Test Case
                    </h3>
                </div>
                @if (PrivilegeList.Select(y => y.PRIVILEGE_NAME.Trim()).ToList().Contains("Add TestCase"))
                {
                    <div class="kt-portlet__head-toolbar">
                        <div class="kt-portlet__head-wrapper">
                            <div class="kt-portlet__head-actions">
                                &nbsp;
                                <a href="#" onclick="AddTestCase()" class="btn btn-brand btn-elevate btn-icon-sm">
                                    <i class="la la-plus"></i>
                                    New TestCase
                                </a>
                            </div>
                        </div>
                    </div>
                }
                </div>

            <div class="kt-portlet__body">
                <table class="table table-striped- table-bordered table-hover table-checkable " id="TestCasetable">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Application</th>
                            <th>Test Suite</th>
                            @*<th>ApplicationId</th>
                                <th>TestSuiteId</th>*@
                            <th style="color: #1c6081;background-color: #e9f5ff;font-weight: bold;">Actions</th>
                        </tr>
                    </thead>


                </table>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="AddEditTestCase" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Test Case</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="frmAddEditTestCase">
                    <input type="hidden" id="hdnTestCaseId" name="hdnTestCaseId" />
                    <div class="form-group">
                        <label for="recipient-name" class="form-control-label">Test Case Name<span style="color:red">&nbsp;*</span></label>
                        <input type="text" class="form-control" id="testcasename" name="testcasename" required onchange="CheckNameExist()" maxlength="64">
                        <label id="existtestcasename" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                            TestCase Name already exist.
                        </label>
                        <label id="testcasevalidate" class="error" style="display: none;width: 100%;margin-top: 0.25rem;font-size: 80%;color: #fd397a;">
                            Test case name can only consist Uppercase,Lowercase,numbers and Special characters(-,_,.,*,&,(,))
                        </label>
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="form-control-label">Description<span style="color:red">&nbsp;*</span></label>
                        <textarea class="form-control" id="testcasedesc" name="testcasedesc" required maxlength="128"></textarea>
                    </div>

                    <div class="form-group" id="clscaseApplication">
                        <label class="form-control-label">Application <span style="color:red">&nbsp;*</span></label>
                        <select class="form-control kt-select2" id="DrpApplication" name="DrpApplication" multiple="multiple" onchange="ChangeApplicationTestsuite()" required>

                            @{var lAppList = ViewBag.listApplications as IEnumerable<SelectListItem>;
                                <optgroup label="Applications">
                                    @foreach (var item in lAppList)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </optgroup>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label class="form-control-label">TestSuite </label>
                        <div id="clsTestSuite">
                            <select class="form-control" id="DrpTestSuite" name="DrpTestSuite" style="width: 749px;"></select>
                        </div>
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" id="addedittestcase" class="btn btn-outline-brand btn-elevate btn-pill" onclick="AddEditTestCaseSave()">Save</button>
                <button type="button" class="btn btn-outline-brand btn-elevate btn-pill" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>


<script>
    var tableTestCase;
    var TestCaseTable = function () {
        $.fn.dataTable.Api.register('column().title()', function () {
            return $(this.header()).text().trim();
        });

        var initTestCaseTable = function () {
            var lEditTCdisplay = $("#hdnEditTC").val();
            var lDeleteTCdisplay = $("#hdnDeleteTC").val();
            tableTestCase = $('#TestCasetable').DataTable({
                responsive: false,

                // Pagination settings
                dom: `<'row'<'col-sm-12'tr>>
                                        <'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7 dataTables_pager'lp>>`,
                // read more: https://datatables.net/examples/basic_init/dom.html

                lengthMenu: [10, 100, 1000],
                processing: true,
                pageLength: 100,

                language: {
                    'lengthMenu': 'Display _MENU_',
                    "processing": "<img  src='../assets/media/mars.gif' style='width:80px;'/>"
                },
                "scrollY": $(window).height() - 305,
                searchDelay: 500,
                //  processing: true,
                serverSide: true,
                ajax: {
                    url: '/TestCase/DataLoad',
                    type: 'POST',
                    data: {
                        // parameters for custom backend script demo
                        columnsDef: [
                            'TestCaseName', 'TestCaseDescription', 'Application', 'TestSuite', 'Actions',],
                    },
                },
                columns: [
                    { data: 'TestCaseName', name: "Name", width: '@ViewBag.namewidth', "targets": 0,autowidth: false },
                    { data: 'TestCaseDescription', name: "Description", width: '@ViewBag.descriptionwidth', "targets": 1, autowidth: false },
                    { data: 'Application', name: "Application", width: '@ViewBag.applicationwidth', "targets": 2, autowidth: false },
                    { data: 'TestSuite', name: "TestSuiteId", width: '@ViewBag.testSuitewidth', "targets": 3, autowidth: false },
                    { data: 'Actions', responsivePriority: -1, width: '@ViewBag.actionswidth', "targets": 4, autowidth: false }
                ],
                initComplete: function () {
                    var thisTable = this;
                    var rowFilter = $('<tr class="filter"></tr>').appendTo($(tableTestCase.table().header()));

                    tableTestCase.columns().every(function () {
                        var column = this;
                        var input;
                        switch (column.title()) {
                            case 'Name':
                            case 'Description':
                            case 'Application':
                            case 'Test Suite':
                                input = $(`<input type="text" class="form-control form-control-sm form-filter kt-input" data-col-index="` + column.index() + `"/>`);
                                $(input).keyup(function () {
                                    var params = {};
                                    $(rowFilter).find('.kt-input').each(function () {
                                        var i = $(this).data('col-index');
                                        if (params[i]) {
                                            params[i] += '|' + $(this).val();
                                        }
                                        else {
                                            params[i] = $(this).val();
                                        }
                                    });
                                    $.each(params, function (i, val) {
                                        // apply search params to datatable
                                        tableTestCase.column(i).search(val ? val : '', false, false);
                                    });
                                    tableTestCase.table().draw();
                                });
                                break;
                        }

                        if (column.title() !== 'actions') {
                            $(input).appendTo($('<th>').appendTo(rowFilter));
                        }
                    });
                },
                columnDefs: [
                    {
                        targets: -1,
                        title: 'Actions',
                        orderable: false,
                        render: function (data, type, full, meta) {
                            var lid = full.TestCaseId;
                            if (full.TestCaseName != null) {
                                var lName = full.TestCaseName.replace(/'/g, "###");
                            }

                            if (full.TestCaseDescription != null) {
                                var lDes = full.TestCaseDescription.replace(/'/g, "###");
                            }
                            var lApplication = full.Application;
                            var lTestSuite = full.TestSuite;
                            var lApplicationId = full.ApplicationId;
                            var lTestSuiteId = full.TestSuiteId;
                            
                            var lRenderHtml = "";
                            if (lEditTCdisplay == "true") {
                                lRenderHtml = " <a href='#' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='View'  data-name='" + lName + "' data-des='" + lDes + "'  data-app='" + lApplication + "' data-testsuite='" + lTestSuite + "'  data-appid='" + lApplicationId + "' data-testsuiteid='" + lTestSuiteId + "' onclick=AddEditTestCase(" + lid + ",$(this))><i class='la la-edit' ></i></a> ";
                            }
                            if (lDeleteTCdisplay == "true") {
                                lRenderHtml = lRenderHtml + "<a href='#' class='btn btn-sm btn-clean btn-icon btn-icon-md' title='Delete' data-testcasename='" + lName + "' onclick='TestCaseDelete(" + lid + ",$(this))' ><i class='la la-trash la-xs'></i></a>";
                            }
                            return lRenderHtml;
                        },
                    }
                ],
            });
        };
        return {
            //main function to initiate the module
            init: function () {
                initTestCaseTable();
            },

        };
    }();
    $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
        $($.fn.dataTable.tables(true)).DataTable()
            .columns.adjust();
    });
    jQuery(document).ready(function () {
        TestCaseTable.init();
    });
    $.fn.dataTable.render.ellipsis = function (cutoff, wordbreak, escapeHtml) {
        var esc = function (t) {
            return t
                .replace(/&/g, '&amp;')
                .replace(/</g, '&lt;')
                .replace(/>/g, '&gt;')
                .replace(/"/g, '&quot;');
        };

        return function (d, type, row) {
            // Order, search and type get the original data
            if (type !== 'display') {
                return d;
            }

            if (typeof d !== 'number' && typeof d !== 'string') {
                return d;
            }

            d = d.toString(); // cast numbers

            if (d.length < cutoff) {
                return d;
            }

            var shortened = d.substr(0, cutoff - 1);

            // Find the last white space character in the string
            if (wordbreak) {
                shortened = shortened.replace(/\s([^\s]*)$/, '');
            }

            // Protect against uncontrolled HTML input
            if (escapeHtml) {
                shortened = esc(shortened);
            }

            return '<span class="ellipsis" title="' + esc(d) + '">' + shortened + '&#8230;</span>';
        };
    };
    $(document).ready(function () {

        $("#frmAddEditTestCase").validate({
            rules: {
                testcasename: {
                    required: true
                },

                testcasedesc: {
                    required: true,
                },
                DrpApplication: {
                    required: true
                }
            },
        });
    });

    function AddTestCase() {

        $("#testcasevalidate").css("display", "none");
        $("#existtestcasename").css("display", "none");
        $("#exampleModalLabel").text('');
        $("#exampleModalLabel").text('Add Test Case');
      $("#AddEditTestCase").modal("show");
      $("#addedittestcase").attr("disabled", false);
        $("#hdnTestCaseId").val("");
        $("#testcasename").val("");
        $("#testcasedesc").val("");
        $("#hdnTestCaseId").val("");
        $("#DrpApplication").val("");
        $("#DrpApplication").select2();
        //$("#DrpTestSuite").html("");
        $("#DrpTestSuite").val("");
        $("#DrpTestSuite").select2();
        var validator = $("#frmAddEditTestCase").validate();
        validator.resetForm();
    }

    function AddEditTestCase(Id, editObj) {
        $("#testcasevalidate").css("display", "none");
        $("#existtestcasename").css("display", "none");
        $("#exampleModalLabel").text('');
        $("#exampleModalLabel").text('Edit Test Case');
      $("#AddEditTestCase").modal("show");
      $("#addedittestcase").attr("disabled", false);
        var lTestCaseId = Id;
        var Name = $(editObj).attr("data-name").replace(/###/g, "'");
        var Desc = $(editObj).attr("data-des").replace(/###/g, "'");
        var App = $(editObj).attr("data-app");
        var TestSuite = $(editObj).attr("data-testsuite");
        var AppId = $(editObj).attr("data-appid");
        var lTestSuiteId = $(editObj).attr("data-testsuiteid");
        $("#testcasename").val(Name);
        $("#testcasedesc").val(Desc);
        $("#hdnTestCaseId").val(lTestCaseId);
        $("#DrpApplication").val(AppId.split(","));
        $("#DrpApplication").select2();
        $("#DrpTestSuite").html("");
        $("#DrpTestSuite").select2();

        $.ajax({
            url: "/TestCase/GetTestSuiteByApplicaton",
            data: '{"ApplicationId":"' + AppId + '"}',
            type: "POST",
            async: false,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.status == 1) {
                    var lTempApplication = "";
                    var optionString = "<optgroup>";;

                    for (i = 0; i < result.data.length; i++) {

                        var optionValue = result.data[i].TestSuiteId;
                        var optionText = result.data[i].TestSuiteName;
                        optionString = optionString + " <option value='" + optionValue + "'>" + optionText + "</option>";
                    }
                    optionString = optionString + "</optgroup>";

                    $("#DrpTestSuite").append($(optionString));
                    $("#DrpTestSuite").select2();
                }
                else if (result.status == 0) {
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "type": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
            }
        });

        $("#DrpTestSuite").val(lTestSuiteId.split(","));
        $("#DrpTestSuite").select2();


        if (!$("#frmAddEditTestCase").valid())
            return false;

    }

    function AddEditTestCaseSave() {

        if (!$("#frmAddEditTestCase").valid()) {
            var validationobj = $("#clscaseApplication").find("#DrpApplication-error");
            if (validationobj.length > 0) {
                $("#clscaseApplication").find("#DrpApplication-error").remove();
                validationHTML = "<div id='DrpApplication-error' class='error invalid-feedback ' >This field is required.</div>";
                $("#clscaseApplication").append(validationHTML);
            }
            return false;

        }
        $("#addedittestcase").attr("disabled", true);
        var lId = $("#hdnTestCaseId").val();
        if (lId == null && lId == "")
            lId = 0;
        var regex = /^[a-zA-Z0-9-._(&)*  ]*$/;
        var TestCaseModel = {};
        TestCaseModel.TestCaseId = lId,
            TestCaseModel.TestCaseName = $("#testcasename").val(),
            TestCaseModel.TestCaseDescription = $("#testcasedesc").val(),
            TestCaseModel.ApplicationId = $("#DrpApplication").val().toString(),
            TestCaseModel.TestSuiteId = $("#DrpTestSuite").val();
        if (!regex.test(TestCaseModel.TestCaseName)) {
            $("#testcasename").val("");
            $("#testcasevalidate").css("display", "block");
            $("#addedittestcase").attr("disabled", false);
            return false;
        }
        $.ajax({
            url: "/TestCase/AddEditTestCase",
            data: JSON.stringify(TestCaseModel),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.status == 1) {
                    if (result.data == true) {
                        $("#AddEditTestCase").modal("hide");
                        swal.fire({
                            "title": "",
                            "text": result.message,
                            "type": "success",
                            "onClose": function (e) {
                                console.log('on close event fired!');
                            }
                        });
                        tableTestCase.table().draw();
                        $("#addedittestcase").attr("disabled", false);

                        $.ajax({
                            url: "/Login/LeftPanel",
                            type: "POST",
                            contentType: "application/json;charset=utf-8",
                            dataType: "HTML",
                            success: function (result) {
                                $("#leftProjectList").html("");
                                $("#leftProjectList").html(result);
                            }
                        });
                    }
                    else {
                        if (result.data.length > 0) {
                            var resultstring = "";
                            for (i = 0; i < result.data.length; i++) {

                                resultstring = resultstring + result.data[i] + " , ";
                            }
                            swal.fire(
                                '',
                                'Following Storyboards contains this TestCase. So please remove this TestCase from storyboards. ' + "<br>" + resultstring,
                                'error'
                            )
                            $("#addedittestcase").attr("disabled", false);
                        }
                    }
                }
                else if (result.status == 0) {
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "type": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
                //window.location.href = "/Home/Index";
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });

    }

    function ChangeApplicationTestsuite() {
        var ApplicationIds = $("#DrpApplication").val().toString();
        var TestSuiteIds = $("#DrpTestSuite").val();
        $("#DrpTestSuite").html("");
        $("#DrpTestSuite").select2();
        $.ajax({
            url: "/TestCase/GetTestSuiteByApplicaton",
            data: '{"ApplicationId":"' + ApplicationIds + '"}',
            type: "POST",
            contentType: "application/json;charset=utf-8",
          dataType: "json",
          async:false,
            success: function (result) {
                if (result.status == 1) {
                    var optionString = "<optgroup>";
                    optionString = optionString + " <option value=0></option>";
                    for (i = 0; i < result.data.length; i++) {
                        var optionValue = result.data[i].TestSuiteId;
                        var optionText = result.data[i].TestSuiteName;

                        optionString = optionString + " <option value='" + optionValue + "'>" + optionText + "</option>";
                    }
                    optionString = optionString + "</optgroup>";
                    $("#DrpTestSuite").append($(optionString));
                    $("#DrpTestSuite").select2();

                    $("#DrpTestSuite").val(TestSuiteIds);
                    $("#DrpTestSuite").select2();
                }
                else if (result.status == 0) {
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "type": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }


    function TestCaseDelete(id, obj) {
        var testcasename = obj[0].dataset.testcasename;
        swal.fire({
            title: 'Please confirm.',
            text: "This action can not be undone.",
            type: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!'
        }).then(function (result) {
            if (result.value == true) {
                $.ajax({
                    url: "/TestCase/DeleteTestCase",
                    data: JSON.stringify({ "TestCaseId": id }),
                    type: "POST",
                    async: false,
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result.status == 1) {
                            if (result.data == true) {
                                tableTestCase.table().draw();
                                swal.fire(
                                    'Deleted!',
                                    'Test Case [' + testcasename + '] has been deleted.',
                                    'success'
                                )
                            }
                            else {
                                if (result.data.length > 0) {
                                    var resultstring = "";
                                    for (i = 0; i < result.data.length; i++) {

                                        resultstring = resultstring + result.data[i] + " , ";
                                    }
                                    swal.fire(
                                        '',
                                        'Following Storyboards contains this TestCase. So please remove this TestCase from storyboards. ' + "<br>" + resultstring,
                                        'error'

                                    )
                                }
                            }
                        }
                        else if (result.status == 0) {
                            swal.fire({
                                "title": "",
                                "text": result.message,
                                "type": "error",
                                "onClose": function (e) {
                                    console.log('on close event fired!');
                                }
                            });
                        }
                    },
                    error: function (x, y, z) {
                        swal.fire(
                            'Error while deleting Test Case [' + testcasename + ']',
                            'error'
                        )
                    }
                });
            }
         });
    }

    function CheckNameExist() {
        var TestCaseName = $("#testcasename").val();
        var TestCaseId = $("#hdnTestCaseId").val();

        $.ajax({
            url: "/TestCase/CheckDuplicateTestCaseNameExist",
            data: '{"TestCaseName":"' + TestCaseName + '","TestCaseId":"' + TestCaseId + '"}',
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.status == 1 && result.data) {
                    $("#testcasename").val("");
                    $("#existtestcasename").css("display", "block");
                } else if (result.status == 0) {
                    swal.fire({
                        "title": "",
                        "text": result.message,
                        "type": "error",
                        "onClose": function (e) {
                            console.log('on close event fired!');
                        }
                    });
                }
            },
        });
    }
    $("#testcasename").on('keyup', function () {
        $("#existtestcasename").css("display", "none");
    });
    $("#testcasename").on('keyup', function () {
        $("#testcasevalidate").css("display", "none");
    });
</script>


