//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MARS_Repository.Entities
{
    using System;
    using System.Data.Common;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class DBEntities : DbContext
    {
        public static string ConnectionString { get; set; }
        public static string Schema { get; set; }
        public DBEntities()
             : base(ConnectionString)
        {
        }
        public DBEntities(DbConnection dbCnn) : base(dbCnn, false)
        {
            ((IObjectContextAdapter)this).ObjectContext.CommandTimeout = 3600;

        }

        public DbSet<ErrorLog> ErrorLogs { get; set; }
        public DbSet<LOGREPORT> LOGREPORTs { get; set; }
        public DbSet<REL_APP_BASELINECOMPARE> REL_APP_BASELINECOMPARE { get; set; }
        public DbSet<REL_APP_PROJ> REL_APP_PROJ { get; set; }
        public DbSet<REL_APP_TESTCASE> REL_APP_TESTCASE { get; set; }
        public DbSet<REL_APP_TESTSUITE> REL_APP_TESTSUITE { get; set; }
        public DbSet<REL_OBJ_APP> REL_OBJ_APP { get; set; }
        public DbSet<REL_PROJECT_USER> REL_PROJECT_USER { get; set; }
        public DbSet<REL_TC_DATA_SUMMARY> REL_TC_DATA_SUMMARY { get; set; }
        public DbSet<REL_TEST_CASE_TEST_SUITE> REL_TEST_CASE_TEST_SUITE { get; set; }
        public DbSet<REL_TEST_SUIT_PROJECT> REL_TEST_SUIT_PROJECT { get; set; }
        public DbSet<SYSTEM_LOOKUP> SYSTEM_LOOKUP { get; set; }
        public DbSet<T_BASELINE_DATA_DETAIL> T_BASELINE_DATA_DETAIL { get; set; }
        public DbSet<T_BASELINE_DATA_SUMMARY> T_BASELINE_DATA_SUMMARY { get; set; }
        public DbSet<T_BAT_RESULT> T_BAT_RESULT { get; set; }
        public DbSet<T_BAT_RESULT_DETAIL> T_BAT_RESULT_DETAIL { get; set; }
        public DbSet<T_COMPARE_CONFIG> T_COMPARE_CONFIG { get; set; }
        public DbSet<T_COMPARE_CONNECTIONS> T_COMPARE_CONNECTIONS { get; set; }
        public DbSet<T_COMPARE_QUERIES> T_COMPARE_QUERIES { get; set; }
        public DbSet<T_DATA_SOURCE> T_DATA_SOURCE { get; set; }
        public DbSet<T_DBCONNECTION> T_DBCONNECTION { get; set; }
        public DbSet<T_DIC_RELATION_KEYWORD> T_DIC_RELATION_KEYWORD { get; set; }
        public DbSet<T_GUI_COMPONENT_TYPE_DIC> T_GUI_COMPONENT_TYPE_DIC { get; set; }
        public DbSet<T_KEYWORD> T_KEYWORD { get; set; }
        public DbSet<T_MARS_COMPANY> T_MARS_COMPANY { get; set; }
        public DbSet<T_OBJECT_NAMEINFO> T_OBJECT_NAMEINFO { get; set; }
        public DbSet<T_PROJ_TC_MGR> T_PROJ_TC_MGR { get; set; }
        public DbSet<T_PROJ_TEST_RESULT> T_PROJ_TEST_RESULT { get; set; }
        public DbSet<T_PROJECT_DATA_SOURCE> T_PROJECT_DATA_SOURCE { get; set; }
        public DbSet<T_REGISTED_OBJECT> T_REGISTED_OBJECT { get; set; }
        public DbSet<T_REGISTERED_APPS> T_REGISTERED_APPS { get; set; }
        public DbSet<T_RELATION_USER_ENGINEPATH> T_RELATION_USER_ENGINEPATH { get; set; }
        public DbSet<T_SHARED_OBJECT_POOL> T_SHARED_OBJECT_POOL { get; set; }
        public DbSet<T_STORYBOARD_DATASET_SETTING> T_STORYBOARD_DATASET_SETTING { get; set; }
        public DbSet<T_STORYBOARD_HISTORY> T_STORYBOARD_HISTORY { get; set; }
        public DbSet<T_STORYBOARD_SUMMARY> T_STORYBOARD_SUMMARY { get; set; }
        public DbSet<T_TEST_BATCH> T_TEST_BATCH { get; set; }
        public DbSet<T_TEST_BATCH_DETAIL> T_TEST_BATCH_DETAIL { get; set; }
        public DbSet<T_TEST_CASE_SUMMARY> T_TEST_CASE_SUMMARY { get; set; }
        public DbSet<T_TEST_CASE_VERSION> T_TEST_CASE_VERSION { get; set; }
        public DbSet<T_TEST_DATA_SUMMARY> T_TEST_DATA_SUMMARY { get; set; }
        public DbSet<T_TEST_ENUM> T_TEST_ENUM { get; set; }
        public DbSet<T_TEST_PROJECT> T_TEST_PROJECT { get; set; }
        public DbSet<T_TEST_REPORT> T_TEST_REPORT { get; set; }
        public DbSet<T_TEST_STEPS> T_TEST_STEPS { get; set; }
        public DbSet<T_TEST_SUITE> T_TEST_SUITE { get; set; }
        public DbSet<T_TESTCASE_VERSION> T_TESTCASE_VERSION { get; set; }
        public DbSet<T_TESTER_INFO> T_TESTER_INFO { get; set; }
        public DbSet<T_USER_MAPPING> T_USER_MAPPING { get; set; }
        public DbSet<TBLFEEDPROCESS> TBLFEEDPROCESSes { get; set; }
        public DbSet<TBLFEEDPROCESSDETAIL> TBLFEEDPROCESSDETAILS { get; set; }
        public DbSet<TBLSTGGUIOBJECT> TBLSTGGUIOBJECTs { get; set; }
        public DbSet<TBLSTGSTORYBOARD> TBLSTGSTORYBOARDs { get; set; }
        public DbSet<TEST_DATA_SETTING> TEST_DATA_SETTING { get; set; }
        public DbSet<DELETELOG> DELETELOGs { get; set; }
        public DbSet<DMPOSTINGEVENT> DMPOSTINGEVENTs { get; set; }
        public DbSet<DMPOSTINGEVENT2> DMPOSTINGEVENT2 { get; set; }
        public DbSet<MV_LAST_TC_INFO> MV_LAST_TC_INFO { get; set; }
        public DbSet<MV_LATEST_STB_TSMOD_MARK> MV_LATEST_STB_TSMOD_MARK { get; set; }
        public DbSet<MV_OBJ_WITH_PEG> MV_OBJ_WITH_PEG { get; set; }
        public DbSet<MV_OBJECT_SNAPSHOT> MV_OBJECT_SNAPSHOT { get; set; }
        public DbSet<MV_STORYBOARD_LATEST> MV_STORYBOARD_LATEST { get; set; }
        public DbSet<MV_TC_DATASUMMARY> MV_TC_DATASUMMARY { get; set; }
        public DbSet<T_REGISTED_OBJECT_TEST> T_REGISTED_OBJECT_TEST { get; set; }
        public DbSet<T_TEST_STEPS_TMP> T_TEST_STEPS_TMP { get; set; }
        public DbSet<TBLLOGREPORT> TBLLOGREPORTs { get; set; }
        public DbSet<TBLSTGVARIABLE> TBLSTGVARIABLEs { get; set; }
        public DbSet<TEST_DATA_SETTING_0426> TEST_DATA_SETTING_0426 { get; set; }
        public DbSet<TEST_DATA_SETTING_BAK> TEST_DATA_SETTING_BAK { get; set; }
        public DbSet<TEST_DATA_SETTING_TST> TEST_DATA_SETTING_TST { get; set; }
        public DbSet<TEST_DATA_SETTING0424> TEST_DATA_SETTING0424 { get; set; }
        public DbSet<TMP_T_OBJ> TMP_T_OBJ { get; set; }
        public DbSet<V_OBJECT_SNAPSHOT> V_OBJECT_SNAPSHOT { get; set; }
        public DbSet<TEST_CASE_VIEW> TEST_CASE_VIEW { get; set; }
        public DbSet<TEST_CASE_VIEW2> TEST_CASE_VIEW2 { get; set; }
        public DbSet<TEST_OBJECT_VIEW> TEST_OBJECT_VIEW { get; set; }
        public DbSet<TEST_PROJECT_VIEW> TEST_PROJECT_VIEW { get; set; }
        public DbSet<V_MARS_STB_SNAPSHOT> V_MARS_STB_SNAPSHOT { get; set; }
        public DbSet<V_OBJECT_APPS> V_OBJECT_APPS { get; set; }
        public DbSet<V_STB_PROJ_APP_FULLVISION> V_STB_PROJ_APP_FULLVISION { get; set; }
        public DbSet<V_STORYBOARD_TEST_FULLVIEW> V_STORYBOARD_TEST_FULLVIEW { get; set; }
        public DbSet<V_STORYBOARD_TEST_FULLVISION> V_STORYBOARD_TEST_FULLVISION { get; set; }
        public DbSet<V_TEST_DATA_REPORT_SUMMARY> V_TEST_DATA_REPORT_SUMMARY { get; set; }
        public DbSet<V_TEST_DATARPT_CAPTURE> V_TEST_DATARPT_CAPTURE { get; set; }
        public DbSet<V_TEST_STEPS_FULLVISION> V_TEST_STEPS_FULLVISION { get; set; }
        public DbSet<V_USER_COMPANY> V_USER_COMPANY { get; set; }
        public DbSet<T_USER_ACTIVEPAGE> T_USER_ACTIVEPAGE { get; set; }
        public DbSet<T_GRIDLIST> T_GRIDLIST { get; set; }
        public DbSet<T_MASTERGRIDLIST> T_MASTERGRIDLIST { get; set; }
        public DbSet<T_TEST_REPORT_STEPS> T_TEST_REPORT_STEPS { get; set; }
        public DbSet<REL_TEST_REPORT_STEPS_COMMENT> REL_TEST_REPORT_STEPS_COMMENT { get; set; }
        public DbSet<T_TEST_PRIVILEGE> T_TEST_PRIVILEGE { get; set; }
        public DbSet<T_TEST_PRIVILEGE_ROLE_MAPPING> T_TEST_PRIVILEGE_ROLE_MAPPING { get; set; }
        public DbSet<T_TEST_ROLES> T_TEST_ROLES { get; set; }
        public DbSet<T_TEST_USER_ROLE_MAPPING> T_TEST_USER_ROLE_MAPPING { get; set; }
    
        public virtual int DeleteTestCase(Nullable<decimal> tESTCASEID)
        {
            var tESTCASEIDParameter = tESTCASEID.HasValue ?
                new ObjectParameter("TESTCASEID", tESTCASEID) :
                new ObjectParameter("TESTCASEID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTestCase", tESTCASEIDParameter);
        }
    
        public virtual int GETNEXT_VAL(string p_SEQUENCE_NAME, ObjectParameter v_NEXTVAL)
        {
            var p_SEQUENCE_NAMEParameter = p_SEQUENCE_NAME != null ?
                new ObjectParameter("P_SEQUENCE_NAME", p_SEQUENCE_NAME) :
                new ObjectParameter("P_SEQUENCE_NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GETNEXT_VAL", p_SEQUENCE_NAMEParameter, v_NEXTVAL);
        }
    
        public virtual int REMOVE_DUPLICATE_OBJECTS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REMOVE_DUPLICATE_OBJECTS");
        }
    
        public virtual int SP_COPYDATASETS(string oLDDATASETID, string nEWDATASETID)
        {
            var oLDDATASETIDParameter = oLDDATASETID != null ?
                new ObjectParameter("OLDDATASETID", oLDDATASETID) :
                new ObjectParameter("OLDDATASETID", typeof(string));
    
            var nEWDATASETIDParameter = nEWDATASETID != null ?
                new ObjectParameter("NEWDATASETID", nEWDATASETID) :
                new ObjectParameter("NEWDATASETID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_COPYDATASETS", oLDDATASETIDParameter, nEWDATASETIDParameter);
        }
    
        public virtual int SP_COPY_SELECTED_OBJECTS(string oBJECTID, string oLDAPPID, string nEWAPPID, ObjectParameter rESULT)
        {
            var oBJECTIDParameter = oBJECTID != null ?
                new ObjectParameter("OBJECTID", oBJECTID) :
                new ObjectParameter("OBJECTID", typeof(string));
    
            var oLDAPPIDParameter = oLDAPPID != null ?
                new ObjectParameter("OLDAPPID", oLDAPPID) :
                new ObjectParameter("OLDAPPID", typeof(string));
    
            var nEWAPPIDParameter = nEWAPPID != null ?
                new ObjectParameter("NEWAPPID", nEWAPPID) :
                new ObjectParameter("NEWAPPID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_COPY_SELECTED_OBJECTS", oBJECTIDParameter, oLDAPPIDParameter, nEWAPPIDParameter, rESULT);
        }
    
        public virtual int SP_EXPORT_ALL_STORYBOARDS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EXPORT_ALL_STORYBOARDS");
        }
    
        public virtual int SP_EXPORT_ALL_TESTSUITES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EXPORT_ALL_TESTSUITES");
        }
    
        public virtual int SP_EXPORT_COMPAREPARAM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EXPORT_COMPAREPARAM");
        }
    
        public virtual int SP_EXPORT_EXPORTOBJECT(string aPPLICATION)
        {
            var aPPLICATIONParameter = aPPLICATION != null ?
                new ObjectParameter("APPLICATION", aPPLICATION) :
                new ObjectParameter("APPLICATION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EXPORT_EXPORTOBJECT", aPPLICATIONParameter);
        }
    
        public virtual int SP_EXPORT_LOGREPORT(Nullable<decimal> fEEDPROCESSDETAILID)
        {
            var fEEDPROCESSDETAILIDParameter = fEEDPROCESSDETAILID.HasValue ?
                new ObjectParameter("FEEDPROCESSDETAILID", fEEDPROCESSDETAILID) :
                new ObjectParameter("FEEDPROCESSDETAILID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EXPORT_LOGREPORT", fEEDPROCESSDETAILIDParameter);
        }
    
        public virtual int SP_EXPORT_STORYBOARD(string pROJECT)
        {
            var pROJECTParameter = pROJECT != null ?
                new ObjectParameter("PROJECT", pROJECT) :
                new ObjectParameter("PROJECT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EXPORT_STORYBOARD", pROJECTParameter);
        }
    
        public virtual int SP_EXPORT_STORYBOARDNEW(string pROJECT, string sTORYBOARDNAME)
        {
            var pROJECTParameter = pROJECT != null ?
                new ObjectParameter("PROJECT", pROJECT) :
                new ObjectParameter("PROJECT", typeof(string));
    
            var sTORYBOARDNAMEParameter = sTORYBOARDNAME != null ?
                new ObjectParameter("STORYBOARDNAME", sTORYBOARDNAME) :
                new ObjectParameter("STORYBOARDNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EXPORT_STORYBOARDNEW", pROJECTParameter, sTORYBOARDNAMEParameter);
        }
    
        public virtual int SP_EXPORT_TESTCASE(string tESTSUITENAME, string tESTCASENAME)
        {
            var tESTSUITENAMEParameter = tESTSUITENAME != null ?
                new ObjectParameter("TESTSUITENAME", tESTSUITENAME) :
                new ObjectParameter("TESTSUITENAME", typeof(string));
    
            var tESTCASENAMEParameter = tESTCASENAME != null ?
                new ObjectParameter("TESTCASENAME", tESTCASENAME) :
                new ObjectParameter("TESTCASENAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EXPORT_TESTCASE", tESTSUITENAMEParameter, tESTCASENAMEParameter);
        }
    
        public virtual int SP_EXPORT_TESTSUITE(string tESTSUITENAME)
        {
            var tESTSUITENAMEParameter = tESTSUITENAME != null ?
                new ObjectParameter("TESTSUITENAME", tESTSUITENAME) :
                new ObjectParameter("TESTSUITENAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EXPORT_TESTSUITE", tESTSUITENAMEParameter);
        }
    
        public virtual int SP_EXPORT_VARIABLE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EXPORT_VARIABLE");
        }
    
        public virtual int SP_GETTESTCASEDETAIL(Nullable<decimal> tESTSUITEID, Nullable<decimal> tESTCASEID)
        {
            var tESTSUITEIDParameter = tESTSUITEID.HasValue ?
                new ObjectParameter("TESTSUITEID", tESTSUITEID) :
                new ObjectParameter("TESTSUITEID", typeof(decimal));
    
            var tESTCASEIDParameter = tESTCASEID.HasValue ?
                new ObjectParameter("TESTCASEID", tESTCASEID) :
                new ObjectParameter("TESTCASEID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GETTESTCASEDETAIL", tESTSUITEIDParameter, tESTCASEIDParameter);
        }
    
        public virtual int SP_GET_LEFTPANELPROJECTLIST(Nullable<decimal> uSERID)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_LEFTPANELPROJECTLIST", uSERIDParameter);
        }
    
        public virtual int SP_GET_STORYBOARD_DETAILS(Nullable<decimal> pROJECTID, Nullable<decimal> sTORYBOARDID)
        {
            var pROJECTIDParameter = pROJECTID.HasValue ?
                new ObjectParameter("PROJECTID", pROJECTID) :
                new ObjectParameter("PROJECTID", typeof(decimal));
    
            var sTORYBOARDIDParameter = sTORYBOARDID.HasValue ?
                new ObjectParameter("STORYBOARDID", sTORYBOARDID) :
                new ObjectParameter("STORYBOARDID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_STORYBOARD_DETAILS", pROJECTIDParameter, sTORYBOARDIDParameter);
        }
    
        public virtual int SP_GET_VARIABLE_DETAILS(Nullable<decimal> sTARTREC, Nullable<decimal> tOTALPAGESIZE, string cOLUMNNAME, string cOLUMNORDER, string fIELDNAMESEARCH, string tABLESEARCH, string dISPLAYNAMESEARCH, string sTATUSSEARCH)
        {
            var sTARTRECParameter = sTARTREC.HasValue ?
                new ObjectParameter("STARTREC", sTARTREC) :
                new ObjectParameter("STARTREC", typeof(decimal));
    
            var tOTALPAGESIZEParameter = tOTALPAGESIZE.HasValue ?
                new ObjectParameter("TOTALPAGESIZE", tOTALPAGESIZE) :
                new ObjectParameter("TOTALPAGESIZE", typeof(decimal));
    
            var cOLUMNNAMEParameter = cOLUMNNAME != null ?
                new ObjectParameter("COLUMNNAME", cOLUMNNAME) :
                new ObjectParameter("COLUMNNAME", typeof(string));
    
            var cOLUMNORDERParameter = cOLUMNORDER != null ?
                new ObjectParameter("COLUMNORDER", cOLUMNORDER) :
                new ObjectParameter("COLUMNORDER", typeof(string));
    
            var fIELDNAMESEARCHParameter = fIELDNAMESEARCH != null ?
                new ObjectParameter("FIELDNAMESEARCH", fIELDNAMESEARCH) :
                new ObjectParameter("FIELDNAMESEARCH", typeof(string));
    
            var tABLESEARCHParameter = tABLESEARCH != null ?
                new ObjectParameter("TABLESEARCH", tABLESEARCH) :
                new ObjectParameter("TABLESEARCH", typeof(string));
    
            var dISPLAYNAMESEARCHParameter = dISPLAYNAMESEARCH != null ?
                new ObjectParameter("DISPLAYNAMESEARCH", dISPLAYNAMESEARCH) :
                new ObjectParameter("DISPLAYNAMESEARCH", typeof(string));
    
            var sTATUSSEARCHParameter = sTATUSSEARCH != null ?
                new ObjectParameter("STATUSSEARCH", sTATUSSEARCH) :
                new ObjectParameter("STATUSSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_VARIABLE_DETAILS", sTARTRECParameter, tOTALPAGESIZEParameter, cOLUMNNAMEParameter, cOLUMNORDERParameter, fIELDNAMESEARCHParameter, tABLESEARCHParameter, dISPLAYNAMESEARCHParameter, sTATUSSEARCHParameter);
        }
    
        public virtual int SP_IMPORT_FILE_COMPAREPARAM(string dATA_SOURCE_NAME, Nullable<decimal> dATA_SOURCE_TYPE, string dETAILS, Nullable<decimal> fEEDPROCESSDETAILID)
        {
            var dATA_SOURCE_NAMEParameter = dATA_SOURCE_NAME != null ?
                new ObjectParameter("DATA_SOURCE_NAME", dATA_SOURCE_NAME) :
                new ObjectParameter("DATA_SOURCE_NAME", typeof(string));
    
            var dATA_SOURCE_TYPEParameter = dATA_SOURCE_TYPE.HasValue ?
                new ObjectParameter("DATA_SOURCE_TYPE", dATA_SOURCE_TYPE) :
                new ObjectParameter("DATA_SOURCE_TYPE", typeof(decimal));
    
            var dETAILSParameter = dETAILS != null ?
                new ObjectParameter("DETAILS", dETAILS) :
                new ObjectParameter("DETAILS", typeof(string));
    
            var fEEDPROCESSDETAILIDParameter = fEEDPROCESSDETAILID.HasValue ?
                new ObjectParameter("FEEDPROCESSDETAILID", fEEDPROCESSDETAILID) :
                new ObjectParameter("FEEDPROCESSDETAILID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IMPORT_FILE_COMPAREPARAM", dATA_SOURCE_NAMEParameter, dATA_SOURCE_TYPEParameter, dETAILSParameter, fEEDPROCESSDETAILIDParameter);
        }
    
        public virtual int SP_IMPORT_FILE_EXPORTTEST()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IMPORT_FILE_EXPORTTEST");
        }
    
        public virtual int SP_IMPORT_FILE_EXPORTTESTCASE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IMPORT_FILE_EXPORTTESTCASE");
        }
    
        public virtual int SP_IMPORT_FILE_OBJECT(string oBJECTNAME, string oBJECTTYPE, string qUICKACCESS, string pARENT, string oBJECTCOMMENT, string eNUMTYPE, string oBJECTSQL, string aPPLICATIONNAME, Nullable<decimal> fEEDPROCESSDETAILID)
        {
            var oBJECTNAMEParameter = oBJECTNAME != null ?
                new ObjectParameter("OBJECTNAME", oBJECTNAME) :
                new ObjectParameter("OBJECTNAME", typeof(string));
    
            var oBJECTTYPEParameter = oBJECTTYPE != null ?
                new ObjectParameter("OBJECTTYPE", oBJECTTYPE) :
                new ObjectParameter("OBJECTTYPE", typeof(string));
    
            var qUICKACCESSParameter = qUICKACCESS != null ?
                new ObjectParameter("QUICKACCESS", qUICKACCESS) :
                new ObjectParameter("QUICKACCESS", typeof(string));
    
            var pARENTParameter = pARENT != null ?
                new ObjectParameter("PARENT", pARENT) :
                new ObjectParameter("PARENT", typeof(string));
    
            var oBJECTCOMMENTParameter = oBJECTCOMMENT != null ?
                new ObjectParameter("OBJECTCOMMENT", oBJECTCOMMENT) :
                new ObjectParameter("OBJECTCOMMENT", typeof(string));
    
            var eNUMTYPEParameter = eNUMTYPE != null ?
                new ObjectParameter("ENUMTYPE", eNUMTYPE) :
                new ObjectParameter("ENUMTYPE", typeof(string));
    
            var oBJECTSQLParameter = oBJECTSQL != null ?
                new ObjectParameter("OBJECTSQL", oBJECTSQL) :
                new ObjectParameter("OBJECTSQL", typeof(string));
    
            var aPPLICATIONNAMEParameter = aPPLICATIONNAME != null ?
                new ObjectParameter("APPLICATIONNAME", aPPLICATIONNAME) :
                new ObjectParameter("APPLICATIONNAME", typeof(string));
    
            var fEEDPROCESSDETAILIDParameter = fEEDPROCESSDETAILID.HasValue ?
                new ObjectParameter("FEEDPROCESSDETAILID", fEEDPROCESSDETAILID) :
                new ObjectParameter("FEEDPROCESSDETAILID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IMPORT_FILE_OBJECT", oBJECTNAMEParameter, oBJECTTYPEParameter, qUICKACCESSParameter, pARENTParameter, oBJECTCOMMENTParameter, eNUMTYPEParameter, oBJECTSQLParameter, aPPLICATIONNAMEParameter, fEEDPROCESSDETAILIDParameter);
        }
    
        public virtual int SP_IMPORT_FILE_STORYBOARD(Nullable<decimal> rUNORDER, string aPPLICATIONNAME, string pROJECTNAME, string pROJECTDETAIL, string sTORYBOARDNAME, string aCTIONNAME, string sTEPNAME, string sUITENAME, string cASENAME, string dATASETNAME, string dEPENDENCY, Nullable<decimal> fEEDPROCESSDETAILID, string tABNAME)
        {
            var rUNORDERParameter = rUNORDER.HasValue ?
                new ObjectParameter("RUNORDER", rUNORDER) :
                new ObjectParameter("RUNORDER", typeof(decimal));
    
            var aPPLICATIONNAMEParameter = aPPLICATIONNAME != null ?
                new ObjectParameter("APPLICATIONNAME", aPPLICATIONNAME) :
                new ObjectParameter("APPLICATIONNAME", typeof(string));
    
            var pROJECTNAMEParameter = pROJECTNAME != null ?
                new ObjectParameter("PROJECTNAME", pROJECTNAME) :
                new ObjectParameter("PROJECTNAME", typeof(string));
    
            var pROJECTDETAILParameter = pROJECTDETAIL != null ?
                new ObjectParameter("PROJECTDETAIL", pROJECTDETAIL) :
                new ObjectParameter("PROJECTDETAIL", typeof(string));
    
            var sTORYBOARDNAMEParameter = sTORYBOARDNAME != null ?
                new ObjectParameter("STORYBOARDNAME", sTORYBOARDNAME) :
                new ObjectParameter("STORYBOARDNAME", typeof(string));
    
            var aCTIONNAMEParameter = aCTIONNAME != null ?
                new ObjectParameter("ACTIONNAME", aCTIONNAME) :
                new ObjectParameter("ACTIONNAME", typeof(string));
    
            var sTEPNAMEParameter = sTEPNAME != null ?
                new ObjectParameter("STEPNAME", sTEPNAME) :
                new ObjectParameter("STEPNAME", typeof(string));
    
            var sUITENAMEParameter = sUITENAME != null ?
                new ObjectParameter("SUITENAME", sUITENAME) :
                new ObjectParameter("SUITENAME", typeof(string));
    
            var cASENAMEParameter = cASENAME != null ?
                new ObjectParameter("CASENAME", cASENAME) :
                new ObjectParameter("CASENAME", typeof(string));
    
            var dATASETNAMEParameter = dATASETNAME != null ?
                new ObjectParameter("DATASETNAME", dATASETNAME) :
                new ObjectParameter("DATASETNAME", typeof(string));
    
            var dEPENDENCYParameter = dEPENDENCY != null ?
                new ObjectParameter("DEPENDENCY", dEPENDENCY) :
                new ObjectParameter("DEPENDENCY", typeof(string));
    
            var fEEDPROCESSDETAILIDParameter = fEEDPROCESSDETAILID.HasValue ?
                new ObjectParameter("FEEDPROCESSDETAILID", fEEDPROCESSDETAILID) :
                new ObjectParameter("FEEDPROCESSDETAILID", typeof(decimal));
    
            var tABNAMEParameter = tABNAME != null ?
                new ObjectParameter("TABNAME", tABNAME) :
                new ObjectParameter("TABNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IMPORT_FILE_STORYBOARD", rUNORDERParameter, aPPLICATIONNAMEParameter, pROJECTNAMEParameter, pROJECTDETAILParameter, sTORYBOARDNAMEParameter, aCTIONNAMEParameter, sTEPNAMEParameter, sUITENAMEParameter, cASENAMEParameter, dATASETNAMEParameter, dEPENDENCYParameter, fEEDPROCESSDETAILIDParameter, tABNAMEParameter);
        }
    
        public virtual int SP_IMPORT_FILE_TESTCASE(string tESTSUITENAME, string tESTCASENAME, string tESTCASEDESCRIPTION, string dATASETMODE, string kEYWORD, string oBJECT, string pARAMETER, string cOMMENTS, string dATASETNAME, string dATASETVALUE, Nullable<decimal> rOWNUMBER, Nullable<decimal> fEEDPROCESSDETAILID, string tABNAME, string aPPLICATION, Nullable<decimal> sKIP, string dATASETDESCRIPTION)
        {
            var tESTSUITENAMEParameter = tESTSUITENAME != null ?
                new ObjectParameter("TESTSUITENAME", tESTSUITENAME) :
                new ObjectParameter("TESTSUITENAME", typeof(string));
    
            var tESTCASENAMEParameter = tESTCASENAME != null ?
                new ObjectParameter("TESTCASENAME", tESTCASENAME) :
                new ObjectParameter("TESTCASENAME", typeof(string));
    
            var tESTCASEDESCRIPTIONParameter = tESTCASEDESCRIPTION != null ?
                new ObjectParameter("TESTCASEDESCRIPTION", tESTCASEDESCRIPTION) :
                new ObjectParameter("TESTCASEDESCRIPTION", typeof(string));
    
            var dATASETMODEParameter = dATASETMODE != null ?
                new ObjectParameter("DATASETMODE", dATASETMODE) :
                new ObjectParameter("DATASETMODE", typeof(string));
    
            var kEYWORDParameter = kEYWORD != null ?
                new ObjectParameter("KEYWORD", kEYWORD) :
                new ObjectParameter("KEYWORD", typeof(string));
    
            var oBJECTParameter = oBJECT != null ?
                new ObjectParameter("OBJECT", oBJECT) :
                new ObjectParameter("OBJECT", typeof(string));
    
            var pARAMETERParameter = pARAMETER != null ?
                new ObjectParameter("PARAMETER", pARAMETER) :
                new ObjectParameter("PARAMETER", typeof(string));
    
            var cOMMENTSParameter = cOMMENTS != null ?
                new ObjectParameter("COMMENTS", cOMMENTS) :
                new ObjectParameter("COMMENTS", typeof(string));
    
            var dATASETNAMEParameter = dATASETNAME != null ?
                new ObjectParameter("DATASETNAME", dATASETNAME) :
                new ObjectParameter("DATASETNAME", typeof(string));
    
            var dATASETVALUEParameter = dATASETVALUE != null ?
                new ObjectParameter("DATASETVALUE", dATASETVALUE) :
                new ObjectParameter("DATASETVALUE", typeof(string));
    
            var rOWNUMBERParameter = rOWNUMBER.HasValue ?
                new ObjectParameter("ROWNUMBER", rOWNUMBER) :
                new ObjectParameter("ROWNUMBER", typeof(decimal));
    
            var fEEDPROCESSDETAILIDParameter = fEEDPROCESSDETAILID.HasValue ?
                new ObjectParameter("FEEDPROCESSDETAILID", fEEDPROCESSDETAILID) :
                new ObjectParameter("FEEDPROCESSDETAILID", typeof(decimal));
    
            var tABNAMEParameter = tABNAME != null ?
                new ObjectParameter("TABNAME", tABNAME) :
                new ObjectParameter("TABNAME", typeof(string));
    
            var aPPLICATIONParameter = aPPLICATION != null ?
                new ObjectParameter("APPLICATION", aPPLICATION) :
                new ObjectParameter("APPLICATION", typeof(string));
    
            var sKIPParameter = sKIP.HasValue ?
                new ObjectParameter("SKIP", sKIP) :
                new ObjectParameter("SKIP", typeof(decimal));
    
            var dATASETDESCRIPTIONParameter = dATASETDESCRIPTION != null ?
                new ObjectParameter("DATASETDESCRIPTION", dATASETDESCRIPTION) :
                new ObjectParameter("DATASETDESCRIPTION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IMPORT_FILE_TESTCASE", tESTSUITENAMEParameter, tESTCASENAMEParameter, tESTCASEDESCRIPTIONParameter, dATASETMODEParameter, kEYWORDParameter, oBJECTParameter, pARAMETERParameter, cOMMENTSParameter, dATASETNAMEParameter, dATASETVALUEParameter, rOWNUMBERParameter, fEEDPROCESSDETAILIDParameter, tABNAMEParameter, aPPLICATIONParameter, sKIPParameter, dATASETDESCRIPTIONParameter);
        }
    
        public virtual int SP_IMPORT_FILE_VARIABLE(Nullable<decimal> fEEDPROCESSDETAILID, string nAME, string vALUE, string tYPE, string bASE_COMP)
        {
            var fEEDPROCESSDETAILIDParameter = fEEDPROCESSDETAILID.HasValue ?
                new ObjectParameter("FEEDPROCESSDETAILID", fEEDPROCESSDETAILID) :
                new ObjectParameter("FEEDPROCESSDETAILID", typeof(decimal));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var vALUEParameter = vALUE != null ?
                new ObjectParameter("VALUE", vALUE) :
                new ObjectParameter("VALUE", typeof(string));
    
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var bASE_COMPParameter = bASE_COMP != null ?
                new ObjectParameter("BASE_COMP", bASE_COMP) :
                new ObjectParameter("BASE_COMP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IMPORT_FILE_VARIABLE", fEEDPROCESSDETAILIDParameter, nAMEParameter, vALUEParameter, tYPEParameter, bASE_COMPParameter);
        }
    
        public virtual int SP_LIST_KEYWORDS(Nullable<decimal> sTARTREC, Nullable<decimal> tOTALPAGESIZE, string cOLUMNNAME, string cOLUMNORDER, string nAMESEARCH, string tYPESEARCH, string eNTRYINFILE)
        {
            var sTARTRECParameter = sTARTREC.HasValue ?
                new ObjectParameter("STARTREC", sTARTREC) :
                new ObjectParameter("STARTREC", typeof(decimal));
    
            var tOTALPAGESIZEParameter = tOTALPAGESIZE.HasValue ?
                new ObjectParameter("TOTALPAGESIZE", tOTALPAGESIZE) :
                new ObjectParameter("TOTALPAGESIZE", typeof(decimal));
    
            var cOLUMNNAMEParameter = cOLUMNNAME != null ?
                new ObjectParameter("COLUMNNAME", cOLUMNNAME) :
                new ObjectParameter("COLUMNNAME", typeof(string));
    
            var cOLUMNORDERParameter = cOLUMNORDER != null ?
                new ObjectParameter("COLUMNORDER", cOLUMNORDER) :
                new ObjectParameter("COLUMNORDER", typeof(string));
    
            var nAMESEARCHParameter = nAMESEARCH != null ?
                new ObjectParameter("NAMESEARCH", nAMESEARCH) :
                new ObjectParameter("NAMESEARCH", typeof(string));
    
            var tYPESEARCHParameter = tYPESEARCH != null ?
                new ObjectParameter("TYPESEARCH", tYPESEARCH) :
                new ObjectParameter("TYPESEARCH", typeof(string));
    
            var eNTRYINFILEParameter = eNTRYINFILE != null ?
                new ObjectParameter("ENTRYINFILE", eNTRYINFILE) :
                new ObjectParameter("ENTRYINFILE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LIST_KEYWORDS", sTARTRECParameter, tOTALPAGESIZEParameter, cOLUMNNAMEParameter, cOLUMNORDERParameter, nAMESEARCHParameter, tYPESEARCHParameter, eNTRYINFILEParameter);
        }
    
        public virtual int SP_LIST_OBJECTS(Nullable<decimal> sTARTREC, Nullable<decimal> tOTALPAGESIZE, string cOLUMNNAME, string cOLUMNORDER, string oBJECTNAME, string tYPENAME, string qUICKACCESS, string pARENT, string aPPLICATION)
        {
            var sTARTRECParameter = sTARTREC.HasValue ?
                new ObjectParameter("STARTREC", sTARTREC) :
                new ObjectParameter("STARTREC", typeof(decimal));
    
            var tOTALPAGESIZEParameter = tOTALPAGESIZE.HasValue ?
                new ObjectParameter("TOTALPAGESIZE", tOTALPAGESIZE) :
                new ObjectParameter("TOTALPAGESIZE", typeof(decimal));
    
            var cOLUMNNAMEParameter = cOLUMNNAME != null ?
                new ObjectParameter("COLUMNNAME", cOLUMNNAME) :
                new ObjectParameter("COLUMNNAME", typeof(string));
    
            var cOLUMNORDERParameter = cOLUMNORDER != null ?
                new ObjectParameter("COLUMNORDER", cOLUMNORDER) :
                new ObjectParameter("COLUMNORDER", typeof(string));
    
            var oBJECTNAMEParameter = oBJECTNAME != null ?
                new ObjectParameter("OBJECTNAME", oBJECTNAME) :
                new ObjectParameter("OBJECTNAME", typeof(string));
    
            var tYPENAMEParameter = tYPENAME != null ?
                new ObjectParameter("TYPENAME", tYPENAME) :
                new ObjectParameter("TYPENAME", typeof(string));
    
            var qUICKACCESSParameter = qUICKACCESS != null ?
                new ObjectParameter("QUICKACCESS", qUICKACCESS) :
                new ObjectParameter("QUICKACCESS", typeof(string));
    
            var pARENTParameter = pARENT != null ?
                new ObjectParameter("PARENT", pARENT) :
                new ObjectParameter("PARENT", typeof(string));
    
            var aPPLICATIONParameter = aPPLICATION != null ?
                new ObjectParameter("APPLICATION", aPPLICATION) :
                new ObjectParameter("APPLICATION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LIST_OBJECTS", sTARTRECParameter, tOTALPAGESIZEParameter, cOLUMNNAMEParameter, cOLUMNORDERParameter, oBJECTNAMEParameter, tYPENAMEParameter, qUICKACCESSParameter, pARENTParameter, aPPLICATIONParameter);
        }
    
        public virtual int SP_LIST_PROJECTS(Nullable<decimal> sTARTREC, Nullable<decimal> tOTALPAGESIZE, string cOLUMNNAME, string cOLUMNORDER, string nAMESEARCH, string dESCRIPTIONSEARCH, string aPPSEARCH, string sTATUSSEARCH)
        {
            var sTARTRECParameter = sTARTREC.HasValue ?
                new ObjectParameter("STARTREC", sTARTREC) :
                new ObjectParameter("STARTREC", typeof(decimal));
    
            var tOTALPAGESIZEParameter = tOTALPAGESIZE.HasValue ?
                new ObjectParameter("TOTALPAGESIZE", tOTALPAGESIZE) :
                new ObjectParameter("TOTALPAGESIZE", typeof(decimal));
    
            var cOLUMNNAMEParameter = cOLUMNNAME != null ?
                new ObjectParameter("COLUMNNAME", cOLUMNNAME) :
                new ObjectParameter("COLUMNNAME", typeof(string));
    
            var cOLUMNORDERParameter = cOLUMNORDER != null ?
                new ObjectParameter("COLUMNORDER", cOLUMNORDER) :
                new ObjectParameter("COLUMNORDER", typeof(string));
    
            var nAMESEARCHParameter = nAMESEARCH != null ?
                new ObjectParameter("NAMESEARCH", nAMESEARCH) :
                new ObjectParameter("NAMESEARCH", typeof(string));
    
            var dESCRIPTIONSEARCHParameter = dESCRIPTIONSEARCH != null ?
                new ObjectParameter("DESCRIPTIONSEARCH", dESCRIPTIONSEARCH) :
                new ObjectParameter("DESCRIPTIONSEARCH", typeof(string));
    
            var aPPSEARCHParameter = aPPSEARCH != null ?
                new ObjectParameter("APPSEARCH", aPPSEARCH) :
                new ObjectParameter("APPSEARCH", typeof(string));
    
            var sTATUSSEARCHParameter = sTATUSSEARCH != null ?
                new ObjectParameter("STATUSSEARCH", sTATUSSEARCH) :
                new ObjectParameter("STATUSSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LIST_PROJECTS", sTARTRECParameter, tOTALPAGESIZEParameter, cOLUMNNAMEParameter, cOLUMNORDERParameter, nAMESEARCHParameter, dESCRIPTIONSEARCHParameter, aPPSEARCHParameter, sTATUSSEARCHParameter);
        }
    
        public virtual int SP_LIST_STORYBOARDS(Nullable<decimal> sTARTREC, Nullable<decimal> tOTALPAGESIZE, string cOLUMNNAME, string cOLUMNORDER, string sNAME, string sDESC, string pROJNAME)
        {
            var sTARTRECParameter = sTARTREC.HasValue ?
                new ObjectParameter("STARTREC", sTARTREC) :
                new ObjectParameter("STARTREC", typeof(decimal));
    
            var tOTALPAGESIZEParameter = tOTALPAGESIZE.HasValue ?
                new ObjectParameter("TOTALPAGESIZE", tOTALPAGESIZE) :
                new ObjectParameter("TOTALPAGESIZE", typeof(decimal));
    
            var cOLUMNNAMEParameter = cOLUMNNAME != null ?
                new ObjectParameter("COLUMNNAME", cOLUMNNAME) :
                new ObjectParameter("COLUMNNAME", typeof(string));
    
            var cOLUMNORDERParameter = cOLUMNORDER != null ?
                new ObjectParameter("COLUMNORDER", cOLUMNORDER) :
                new ObjectParameter("COLUMNORDER", typeof(string));
    
            var sNAMEParameter = sNAME != null ?
                new ObjectParameter("SNAME", sNAME) :
                new ObjectParameter("SNAME", typeof(string));
    
            var sDESCParameter = sDESC != null ?
                new ObjectParameter("SDESC", sDESC) :
                new ObjectParameter("SDESC", typeof(string));
    
            var pROJNAMEParameter = pROJNAME != null ?
                new ObjectParameter("PROJNAME", pROJNAME) :
                new ObjectParameter("PROJNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LIST_STORYBOARDS", sTARTRECParameter, tOTALPAGESIZEParameter, cOLUMNNAMEParameter, cOLUMNORDERParameter, sNAMEParameter, sDESCParameter, pROJNAMEParameter);
        }
    
        public virtual int SP_LIST_TESTCASES(Nullable<decimal> sTARTREC, Nullable<decimal> tOTALPAGESIZE, string cOLUMNNAME, string cOLUMNORDER, string nAMESEARCH, string dESCRIPTIONSEARCH, string aPPSEARCH, string sUITESEARCH)
        {
            var sTARTRECParameter = sTARTREC.HasValue ?
                new ObjectParameter("STARTREC", sTARTREC) :
                new ObjectParameter("STARTREC", typeof(decimal));
    
            var tOTALPAGESIZEParameter = tOTALPAGESIZE.HasValue ?
                new ObjectParameter("TOTALPAGESIZE", tOTALPAGESIZE) :
                new ObjectParameter("TOTALPAGESIZE", typeof(decimal));
    
            var cOLUMNNAMEParameter = cOLUMNNAME != null ?
                new ObjectParameter("COLUMNNAME", cOLUMNNAME) :
                new ObjectParameter("COLUMNNAME", typeof(string));
    
            var cOLUMNORDERParameter = cOLUMNORDER != null ?
                new ObjectParameter("COLUMNORDER", cOLUMNORDER) :
                new ObjectParameter("COLUMNORDER", typeof(string));
    
            var nAMESEARCHParameter = nAMESEARCH != null ?
                new ObjectParameter("NAMESEARCH", nAMESEARCH) :
                new ObjectParameter("NAMESEARCH", typeof(string));
    
            var dESCRIPTIONSEARCHParameter = dESCRIPTIONSEARCH != null ?
                new ObjectParameter("DESCRIPTIONSEARCH", dESCRIPTIONSEARCH) :
                new ObjectParameter("DESCRIPTIONSEARCH", typeof(string));
    
            var aPPSEARCHParameter = aPPSEARCH != null ?
                new ObjectParameter("APPSEARCH", aPPSEARCH) :
                new ObjectParameter("APPSEARCH", typeof(string));
    
            var sUITESEARCHParameter = sUITESEARCH != null ?
                new ObjectParameter("SUITESEARCH", sUITESEARCH) :
                new ObjectParameter("SUITESEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LIST_TESTCASES", sTARTRECParameter, tOTALPAGESIZEParameter, cOLUMNNAMEParameter, cOLUMNORDERParameter, nAMESEARCHParameter, dESCRIPTIONSEARCHParameter, aPPSEARCHParameter, sUITESEARCHParameter);
        }
    
        public virtual int SP_LIST_TESTSUITES(Nullable<decimal> sTARTREC, Nullable<decimal> tOTALPAGESIZE, string cOLUMNNAME, string cOLUMNORDER, string nAMESEARCH, string dESCRIPTIONSEARCH, string aPPSEARCH, string pROJECTSEARCH)
        {
            var sTARTRECParameter = sTARTREC.HasValue ?
                new ObjectParameter("STARTREC", sTARTREC) :
                new ObjectParameter("STARTREC", typeof(decimal));
    
            var tOTALPAGESIZEParameter = tOTALPAGESIZE.HasValue ?
                new ObjectParameter("TOTALPAGESIZE", tOTALPAGESIZE) :
                new ObjectParameter("TOTALPAGESIZE", typeof(decimal));
    
            var cOLUMNNAMEParameter = cOLUMNNAME != null ?
                new ObjectParameter("COLUMNNAME", cOLUMNNAME) :
                new ObjectParameter("COLUMNNAME", typeof(string));
    
            var cOLUMNORDERParameter = cOLUMNORDER != null ?
                new ObjectParameter("COLUMNORDER", cOLUMNORDER) :
                new ObjectParameter("COLUMNORDER", typeof(string));
    
            var nAMESEARCHParameter = nAMESEARCH != null ?
                new ObjectParameter("NAMESEARCH", nAMESEARCH) :
                new ObjectParameter("NAMESEARCH", typeof(string));
    
            var dESCRIPTIONSEARCHParameter = dESCRIPTIONSEARCH != null ?
                new ObjectParameter("DESCRIPTIONSEARCH", dESCRIPTIONSEARCH) :
                new ObjectParameter("DESCRIPTIONSEARCH", typeof(string));
    
            var aPPSEARCHParameter = aPPSEARCH != null ?
                new ObjectParameter("APPSEARCH", aPPSEARCH) :
                new ObjectParameter("APPSEARCH", typeof(string));
    
            var pROJECTSEARCHParameter = pROJECTSEARCH != null ?
                new ObjectParameter("PROJECTSEARCH", pROJECTSEARCH) :
                new ObjectParameter("PROJECTSEARCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LIST_TESTSUITES", sTARTRECParameter, tOTALPAGESIZEParameter, cOLUMNNAMEParameter, cOLUMNORDERParameter, nAMESEARCHParameter, dESCRIPTIONSEARCHParameter, aPPSEARCHParameter, pROJECTSEARCHParameter);
        }
    
        public virtual int SP_TESTCASE_DETAILS(Nullable<decimal> tESTCASEID)
        {
            var tESTCASEIDParameter = tESTCASEID.HasValue ?
                new ObjectParameter("TESTCASEID", tESTCASEID) :
                new ObjectParameter("TESTCASEID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_TESTCASE_DETAILS", tESTCASEIDParameter);
        }
    
        public virtual int USP_FEEDPROCESS(Nullable<decimal> fEEDPROCESSID, string oPERATION, string cREATEDBY, string fEEDPROCESSSTATUS, ObjectParameter iD)
        {
            var fEEDPROCESSIDParameter = fEEDPROCESSID.HasValue ?
                new ObjectParameter("FEEDPROCESSID", fEEDPROCESSID) :
                new ObjectParameter("FEEDPROCESSID", typeof(decimal));
    
            var oPERATIONParameter = oPERATION != null ?
                new ObjectParameter("OPERATION", oPERATION) :
                new ObjectParameter("OPERATION", typeof(string));
    
            var cREATEDBYParameter = cREATEDBY != null ?
                new ObjectParameter("CREATEDBY", cREATEDBY) :
                new ObjectParameter("CREATEDBY", typeof(string));
    
            var fEEDPROCESSSTATUSParameter = fEEDPROCESSSTATUS != null ?
                new ObjectParameter("FEEDPROCESSSTATUS", fEEDPROCESSSTATUS) :
                new ObjectParameter("FEEDPROCESSSTATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_FEEDPROCESS", fEEDPROCESSIDParameter, oPERATIONParameter, cREATEDBYParameter, fEEDPROCESSSTATUSParameter, iD);
        }
    
        public virtual int USP_FEEDPROCESSDETAILS(Nullable<decimal> fEEDPROCESSDETAILID, Nullable<decimal> fEEDPROCESSID, string oPERATION, string fILENAME, string cREATEDBY, string fEEDPROCESSSTATUS, string fILETYPE, ObjectParameter iD)
        {
            var fEEDPROCESSDETAILIDParameter = fEEDPROCESSDETAILID.HasValue ?
                new ObjectParameter("FEEDPROCESSDETAILID", fEEDPROCESSDETAILID) :
                new ObjectParameter("FEEDPROCESSDETAILID", typeof(decimal));
    
            var fEEDPROCESSIDParameter = fEEDPROCESSID.HasValue ?
                new ObjectParameter("FEEDPROCESSID", fEEDPROCESSID) :
                new ObjectParameter("FEEDPROCESSID", typeof(decimal));
    
            var oPERATIONParameter = oPERATION != null ?
                new ObjectParameter("OPERATION", oPERATION) :
                new ObjectParameter("OPERATION", typeof(string));
    
            var fILENAMEParameter = fILENAME != null ?
                new ObjectParameter("FILENAME", fILENAME) :
                new ObjectParameter("FILENAME", typeof(string));
    
            var cREATEDBYParameter = cREATEDBY != null ?
                new ObjectParameter("CREATEDBY", cREATEDBY) :
                new ObjectParameter("CREATEDBY", typeof(string));
    
            var fEEDPROCESSSTATUSParameter = fEEDPROCESSSTATUS != null ?
                new ObjectParameter("FEEDPROCESSSTATUS", fEEDPROCESSSTATUS) :
                new ObjectParameter("FEEDPROCESSSTATUS", typeof(string));
    
            var fILETYPEParameter = fILETYPE != null ?
                new ObjectParameter("FILETYPE", fILETYPE) :
                new ObjectParameter("FILETYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_FEEDPROCESSDETAILS", fEEDPROCESSDETAILIDParameter, fEEDPROCESSIDParameter, oPERATIONParameter, fILENAMEParameter, cREATEDBYParameter, fEEDPROCESSSTATUSParameter, fILETYPEParameter, iD);
        }
    
        public virtual int USP_FEEDPROCESSMAPPING_MODE_D(Nullable<decimal> fEEDPROCESSID1, Nullable<decimal> iSOVERWRITE, ObjectParameter rESULT)
        {
            var fEEDPROCESSID1Parameter = fEEDPROCESSID1.HasValue ?
                new ObjectParameter("FEEDPROCESSID1", fEEDPROCESSID1) :
                new ObjectParameter("FEEDPROCESSID1", typeof(decimal));
    
            var iSOVERWRITEParameter = iSOVERWRITE.HasValue ?
                new ObjectParameter("ISOVERWRITE", iSOVERWRITE) :
                new ObjectParameter("ISOVERWRITE", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_FEEDPROCESSMAPPING_MODE_D", fEEDPROCESSID1Parameter, iSOVERWRITEParameter, rESULT);
        }
    
        public virtual int USP_FEEDPROCESSMAPPING_WEB_D(Nullable<decimal> fEEDPROCESSID1, Nullable<decimal> iSOVERWRITE, ObjectParameter rESULT)
        {
            var fEEDPROCESSID1Parameter = fEEDPROCESSID1.HasValue ?
                new ObjectParameter("FEEDPROCESSID1", fEEDPROCESSID1) :
                new ObjectParameter("FEEDPROCESSID1", typeof(decimal));
    
            var iSOVERWRITEParameter = iSOVERWRITE.HasValue ?
                new ObjectParameter("ISOVERWRITE", iSOVERWRITE) :
                new ObjectParameter("ISOVERWRITE", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_FEEDPROCESSMAPPING_WEB_D", fEEDPROCESSID1Parameter, iSOVERWRITEParameter, rESULT);
        }
    
        public virtual int USP_MAPPING_VALIDATION(Nullable<decimal> fEEDPROCESSID1, ObjectParameter rESULT)
        {
            var fEEDPROCESSID1Parameter = fEEDPROCESSID1.HasValue ?
                new ObjectParameter("FEEDPROCESSID1", fEEDPROCESSID1) :
                new ObjectParameter("FEEDPROCESSID1", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_MAPPING_VALIDATION", fEEDPROCESSID1Parameter, rESULT);
        }
    
        public virtual int USP_VALIDATION(string dATAVALUE, string vALIDATETYPE, ObjectParameter iD)
        {
            var dATAVALUEParameter = dATAVALUE != null ?
                new ObjectParameter("DATAVALUE", dATAVALUE) :
                new ObjectParameter("DATAVALUE", typeof(string));
    
            var vALIDATETYPEParameter = vALIDATETYPE != null ?
                new ObjectParameter("VALIDATETYPE", vALIDATETYPE) :
                new ObjectParameter("VALIDATETYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_VALIDATION", dATAVALUEParameter, vALIDATETYPEParameter, iD);
        }
    
        public virtual int SP_CheckValidationTestCase(Nullable<decimal> fEEDPROCESSID1, ObjectParameter rESULT)
        {
            var fEEDPROCESSID1Parameter = fEEDPROCESSID1.HasValue ?
                new ObjectParameter("FEEDPROCESSID1", fEEDPROCESSID1) :
                new ObjectParameter("FEEDPROCESSID1", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CheckValidationTestCase", fEEDPROCESSID1Parameter, rESULT);
        }
    
        public virtual int SP_GETTESTCASEVALIDATIONRESULT(Nullable<decimal> fEEDPROCESSID1)
        {
            var fEEDPROCESSID1Parameter = fEEDPROCESSID1.HasValue ?
                new ObjectParameter("FEEDPROCESSID1", fEEDPROCESSID1) :
                new ObjectParameter("FEEDPROCESSID1", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GETTESTCASEVALIDATIONRESULT", fEEDPROCESSID1Parameter);
        }
    
        public virtual int SP_SavaAs_TestCase_AllDataset(Nullable<decimal> oLDTESTCASEID, string nEWTESTCASENAME, string nEWTESTCASEDES, Nullable<decimal> tESTSUITEID, Nullable<decimal> pROJECTID, string sUFFIX, string lOGINUSER, ObjectParameter rESULT)
        {
            var oLDTESTCASEIDParameter = oLDTESTCASEID.HasValue ?
                new ObjectParameter("OLDTESTCASEID", oLDTESTCASEID) :
                new ObjectParameter("OLDTESTCASEID", typeof(decimal));
    
            var nEWTESTCASENAMEParameter = nEWTESTCASENAME != null ?
                new ObjectParameter("NEWTESTCASENAME", nEWTESTCASENAME) :
                new ObjectParameter("NEWTESTCASENAME", typeof(string));
    
            var nEWTESTCASEDESParameter = nEWTESTCASEDES != null ?
                new ObjectParameter("NEWTESTCASEDES", nEWTESTCASEDES) :
                new ObjectParameter("NEWTESTCASEDES", typeof(string));
    
            var tESTSUITEIDParameter = tESTSUITEID.HasValue ?
                new ObjectParameter("TESTSUITEID", tESTSUITEID) :
                new ObjectParameter("TESTSUITEID", typeof(decimal));
    
            var pROJECTIDParameter = pROJECTID.HasValue ?
                new ObjectParameter("PROJECTID", pROJECTID) :
                new ObjectParameter("PROJECTID", typeof(decimal));
    
            var sUFFIXParameter = sUFFIX != null ?
                new ObjectParameter("SUFFIX", sUFFIX) :
                new ObjectParameter("SUFFIX", typeof(string));
    
            var lOGINUSERParameter = lOGINUSER != null ?
                new ObjectParameter("LOGINUSER", lOGINUSER) :
                new ObjectParameter("LOGINUSER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SavaAs_TestCase_AllDataset", oLDTESTCASEIDParameter, nEWTESTCASENAMEParameter, nEWTESTCASEDESParameter, tESTSUITEIDParameter, pROJECTIDParameter, sUFFIXParameter, lOGINUSERParameter, rESULT);
        }
    
        public virtual int SP_SaveTestcase(Nullable<decimal> fEEDPROCESSDETAIL_ID, Nullable<decimal> tESTCASEID, ObjectParameter rESULT)
        {
            var fEEDPROCESSDETAIL_IDParameter = fEEDPROCESSDETAIL_ID.HasValue ?
                new ObjectParameter("FEEDPROCESSDETAIL_ID", fEEDPROCESSDETAIL_ID) :
                new ObjectParameter("FEEDPROCESSDETAIL_ID", typeof(decimal));
    
            var tESTCASEIDParameter = tESTCASEID.HasValue ?
                new ObjectParameter("TESTCASEID", tESTCASEID) :
                new ObjectParameter("TESTCASEID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SaveTestcase", fEEDPROCESSDETAIL_IDParameter, tESTCASEIDParameter, rESULT);
        }
    
        public virtual int SP_SavaAs_TestCase_One_Dataset(Nullable<decimal> oLDTESTCASEID, string nEWTESTCASENAME, string nEWTESTCASEDES, Nullable<decimal> tESTSUITEID, Nullable<decimal> pROJECTID, string oLDDATASETNAME, string sUFFIX, string lOGINUSER, ObjectParameter rESULT)
        {
            var oLDTESTCASEIDParameter = oLDTESTCASEID.HasValue ?
                new ObjectParameter("OLDTESTCASEID", oLDTESTCASEID) :
                new ObjectParameter("OLDTESTCASEID", typeof(decimal));
    
            var nEWTESTCASENAMEParameter = nEWTESTCASENAME != null ?
                new ObjectParameter("NEWTESTCASENAME", nEWTESTCASENAME) :
                new ObjectParameter("NEWTESTCASENAME", typeof(string));
    
            var nEWTESTCASEDESParameter = nEWTESTCASEDES != null ?
                new ObjectParameter("NEWTESTCASEDES", nEWTESTCASEDES) :
                new ObjectParameter("NEWTESTCASEDES", typeof(string));
    
            var tESTSUITEIDParameter = tESTSUITEID.HasValue ?
                new ObjectParameter("TESTSUITEID", tESTSUITEID) :
                new ObjectParameter("TESTSUITEID", typeof(decimal));
    
            var pROJECTIDParameter = pROJECTID.HasValue ?
                new ObjectParameter("PROJECTID", pROJECTID) :
                new ObjectParameter("PROJECTID", typeof(decimal));
    
            var oLDDATASETNAMEParameter = oLDDATASETNAME != null ?
                new ObjectParameter("OLDDATASETNAME", oLDDATASETNAME) :
                new ObjectParameter("OLDDATASETNAME", typeof(string));
    
            var sUFFIXParameter = sUFFIX != null ?
                new ObjectParameter("SUFFIX", sUFFIX) :
                new ObjectParameter("SUFFIX", typeof(string));
    
            var lOGINUSERParameter = lOGINUSER != null ?
                new ObjectParameter("LOGINUSER", lOGINUSER) :
                new ObjectParameter("LOGINUSER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SavaAs_TestCase_One_Dataset", oLDTESTCASEIDParameter, nEWTESTCASENAMEParameter, nEWTESTCASEDESParameter, tESTSUITEIDParameter, pROJECTIDParameter, oLDDATASETNAMEParameter, sUFFIXParameter, lOGINUSERParameter, rESULT);
        }
    
        public virtual int SP_GET_STORYBOARD_RESULT(Nullable<decimal> cOMPARE_HISTID, Nullable<decimal> bASELINE_HISTID)
        {
            var cOMPARE_HISTIDParameter = cOMPARE_HISTID.HasValue ?
                new ObjectParameter("COMPARE_HISTID", cOMPARE_HISTID) :
                new ObjectParameter("COMPARE_HISTID", typeof(decimal));
    
            var bASELINE_HISTIDParameter = bASELINE_HISTID.HasValue ?
                new ObjectParameter("BASELINE_HISTID", bASELINE_HISTID) :
                new ObjectParameter("BASELINE_HISTID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_STORYBOARD_RESULT", cOMPARE_HISTIDParameter, bASELINE_HISTIDParameter);
        }
    
        public virtual int DeleteResultSets(Nullable<decimal> hISTID)
        {
            var hISTIDParameter = hISTID.HasValue ?
                new ObjectParameter("HISTID", hISTID) :
                new ObjectParameter("HISTID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteResultSets", hISTIDParameter);
        }
    
        public virtual int SP_SAVE_SB_RESULTS(string fEEDDETAILID)
        {
            var fEEDDETAILIDParameter = fEEDDETAILID != null ?
                new ObjectParameter("FEEDDETAILID", fEEDDETAILID) :
                new ObjectParameter("FEEDDETAILID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SAVE_SB_RESULTS", fEEDDETAILIDParameter);
        }
    
        public virtual int SP_SAVEAS_RESULTSET(Nullable<decimal> oLDCOMPARE_HISTID, Nullable<decimal> oLDBASELINE_HISTID)
        {
            var oLDCOMPARE_HISTIDParameter = oLDCOMPARE_HISTID.HasValue ?
                new ObjectParameter("OLDCOMPARE_HISTID", oLDCOMPARE_HISTID) :
                new ObjectParameter("OLDCOMPARE_HISTID", typeof(decimal));
    
            var oLDBASELINE_HISTIDParameter = oLDBASELINE_HISTID.HasValue ?
                new ObjectParameter("OLDBASELINE_HISTID", oLDBASELINE_HISTID) :
                new ObjectParameter("OLDBASELINE_HISTID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SAVEAS_RESULTSET", oLDCOMPARE_HISTIDParameter, oLDBASELINE_HISTIDParameter);
        }
    }
}
