using MARS_Data.Entities;
using MARS_Repository.ViewModel;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity.Core.Objects;


//using System.Data.Entity.Infrastructure;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MARS_Repository.Repositories
{
    public class AccountRepository
    {
       Entities entity = new Entities();
        internal const string USER_SEQ = "SEQ_TESTER_ID";
        //public static  List<T_TESTER_INFOModel> ListAllUsers()
        //{

        //    var result = entity.T_TESTER_INFO.Select(a => new T_TESTER_INFOModel
        //    {
        //        TESTER_NAME_F = a.TESTER_NAME_F,
        //        TESTER_NAME_M = a.TESTER_NAME_M,
        //        TESTER_NAME_LAST = a.TESTER_NAME_LAST,
        //        TESTER_LOGIN_NAME = a.TESTER_LOGIN_NAME,
        //        TESTER_MAIL = a.TESTER_MAIL
        //    }).ToList();
        //    return result;
        //}
        public IQueryable<UserModel> ListAllUsers()
        {
            //Include(x => x.T_MARS_COMPANY).
            var result = entity.T_TESTER_INFO.ToList().Select(a => new UserModel
            {
                TESTER_NAME_F = a.TESTER_NAME_F,
                TESTER_NAME_M = a.TESTER_NAME_M,
                TESTER_NAME_LAST = a.TESTER_NAME_LAST,
                TESTER_LOGIN_NAME = a.TESTER_LOGIN_NAME,
                TESTER_MAIL = a.TESTER_MAIL,
                COMPANY_NAME=a.T_MARS_COMPANY.COMPANY_NAME
                
            }).AsQueryable();
            return result;
        }

        public  T_TESTER_INFO CreateNewUser(T_TESTER_INFO t_TESTER)
        {
            t_TESTER.TESTER_ID  = 1;
            entity.T_TESTER_INFO.Add(t_TESTER);

            try
            {
                ObjectParameter outparam = new ObjectParameter("v_NEXTVAL", typeof(Int32));


                var projectId = (long)entity.GETNEXT_VAL(USER_SEQ, outparam);

                var lId = long.Parse(outparam.Value.ToString());
            }catch(Exception ex)
            {
                throw ex; }


            entity.SaveChanges();
            return t_TESTER;
        }

        
        
        public long GetUserID()
        {
            

       //     System.Data.Entity.Core.Objects.ObjectParameter outparam = new System.Data.Entity.Core.Objects.ObjectParameter("SEQ_TESTER_ID", typeof(Int32));

            ObjectParameter outparam = new ObjectParameter("v_NEXTVAL", typeof(Int32));


            var projectId = (long)entity.GETNEXT_VAL(USER_SEQ, outparam);
            return long.Parse(outparam.Value.ToString());
        }
        
    }
}
